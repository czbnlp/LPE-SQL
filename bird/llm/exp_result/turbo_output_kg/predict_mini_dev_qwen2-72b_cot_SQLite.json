{
    "0": "SELECT CAST(SUM(CASE WHEN T1.Currency = 'EUR' THEN 1 ELSE 0 END) AS REAL) / SUM(CASE WHEN T1.Currency = 'CZK' THEN 1 ELSE 0 END) FROM customers AS T1 INNER JOIN `yearmonth` AS T2 ON T1.CustomerID = T2.CustomerID\t----- bird -----\tdebit_card_specializing",
    "1": "SELECT T1.CustomerID FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE SUBSTR(T2.Date, 1, 4) BETWEEN '201201' AND '201212' AND T2.Consumption = ( SELECT MIN(T3.Consumption) FROM yearmonth AS T3 WHERE SUBSTR(T3.Date, 1, 4) BETWEEN '201201' AND '201212' )\t----- bird -----\tdebit_card_specializing",
    "2": "SELECT AVG(T1.Consumption) / 12 FROM yearmonth AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Segment = 'SME' AND T1.Date BETWEEN '201301' AND '201312'\t----- bird -----\tdebit_card_specializing",
    "3": "SELECT (SELECT SUM(T2.Consumption) FROM yearmonth AS T2 WHERE SUBSTR(CAST(T2.Date AS TEXT),1,4) = '2012' AND T2.CustomerID IN(SELECT T1.CustomerID FROM customers AS T1 WHERE T1.Currency = 'CZK')) - (SELECT SUM(T2.Consumption) FROM yearmonth AS T2 WHERE SUBSTR(CAST(T2.Date AS TEXT),1,4) = '2012' AND T2.CustomerID IN(SELECT T1.CustomerID FROM customers AS T1 WHERE T1.Currency = 'EUR'))\t----- bird -----\tdebit_card_specializing",
    "4": "SELECT Date FROM (SELECT Date, COUNT(Date) AS num FROM yearmonth WHERE SUBSTR(Date, 1, 4) = (SELECT SUBSTR(Date, 1, 4) FROM yearmonth WHERE Currency = 'CZK' GROUP BY SUBSTR(Date, 1, 4) ORDER BY SUM(Consumption) DESC LIMIT 1) ORDER BY num DESC LIMIT 1) AS T1 GROUP BY SUBSTR(T1.Date, 1, 4) ORDER BY SUM(T1.num) DESC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "5": "SELECT Date FROM yearmonth WHERE Date LIKE '2013%' AND CustomerID IN (SELECT CustomerID FROM customers WHERE Segment = 'SME') ORDER BY Consumption DESC LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "6": "SELECT ( SELECT AVG(T1.Consumption) FROM yearmonth AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Segment = 'SME' AND SUBSTR(T1.Date, 1, 4) = '2013' GROUP BY T2.CustomerID ORDER BY AVG(T1.Consumption) ASC LIMIT 1 ) - ( SELECT AVG(T1.Consumption) FROM yearmonth AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Segment = 'LAM' AND SUBSTR(T1.Date, 1, 4) = '2013' GROUP BY T2.CustomerID ORDER BY AVG(T1.Consumption) ASC LIMIT 1 ) AS Diff_SME_LAM , ( SELECT AVG(T1.Consumption) FROM yearmonth AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Segment = 'LAM' AND SUBSTR(T1.Date, 1, 4) = '2013' GROUP BY T2.CustomerID ORDER BY AVG(T1.Consumption) ASC LIMIT 1 ) - ( SELECT AVG(T1.Consumption) FROM yearmonth AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Segment = 'KAM' AND SUBSTR(T1.Date, 1, 4) = '2013' GROUP BY T2.CustomerID ORDER BY AVG(T1.Consumption) ASC LIMIT 1 ) AS Diff_LAM_KAM , ( SELECT AVG(T1.Consumption) FROM yearmonth AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Segment = 'KAM' AND SUBSTR(T1.Date, 1, 4) = '2013' GROUP BY T2.CustomerID ORDER BY AVG(T1.Consumption) ASC LIMIT 1 ) - ( SELECT AVG(T1.Consumption) FROM yearmonth AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Segment = 'SME' AND SUBSTR(T1.Date, 1, 4) = '2013' GROUP BY T2.CustomerID ORDER BY AVG(T1.Consumption) ASC LIMIT 1 ) AS Diff_KAM_SME\t----- bird -----\tdebit_card_specializing",
    "7": "SELECT T1.Segment , ((T2.Consumption_2013 - T2.Consumption_2012) / T2.Consumption_2013) * 100 AS Percentage_Increase FROM ( SELECT Segment FROM customers GROUP BY Segment ) AS T1 INNER JOIN ( SELECT CASE WHEN substr(Date,1,4) = '2013' THEN CustomerID ELSE NULL END AS CustomerID , CASE WHEN substr(Date,1,4) = '2013' THEN Consumption ELSE NULL END AS Consumption_2013 , CASE WHEN substr(Date,1,4) = '2012' THEN Consumption ELSE NULL END AS Consumption_2012 FROM yearmonth ) AS T2 ON T1.CustomerID = T2.CustomerID GROUP BY T1.Segment ORDER BY Percentage_Increase DESC LIMIT 1 , 1\t----- bird -----\tdebit_card_specializing",
    "8": "SELECT SUM(Consumption) FROM yearmonth WHERE CustomerID = 6 AND Date BETWEEN '201308' AND '201311'\t----- bird -----\tdebit_card_specializing",
    "9": "SELECT ( SELECT COUNT(*) FROM gasstations WHERE Country = 'CZE' AND Segment = 'Discount' ) - ( SELECT COUNT(*) FROM gasstations WHERE Country = 'SVK' AND Segment = 'Discount' ) AS DIFFERENCE\t----- bird -----\tdebit_card_specializing",
    "10": "SELECT ( SELECT COUNT(CustomerID) FROM customers WHERE Segment = 'SME' AND Currency = 'CZK' ) - ( SELECT COUNT(CustomerID) FROM customers WHERE Segment = 'SME' AND Currency = 'EUR' ) AS MoreSMEsCZKThanEUR\t----- bird -----\tdebit_card_specializing",
    "11": "SELECT CAST(SUM(CASE WHEN T1.Consumption > 46.73 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.CustomerID) FROM yearmonth AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Segment = 'LAM'\t----- bird -----\tdebit_card_specializing",
    "12": "SELECT CAST(SUM(CASE WHEN T1.Consumption > 528.3 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.CustomerID) FROM yearmonth AS T1 WHERE strftime('%Y%m', T1.Date) = '201202'\t----- bird -----\tdebit_card_specializing",
    "13": "SELECT MAX(T1.Consumption) FROM yearmonth AS T1 WHERE SUBSTR(T1.Date, 1, 4) = '2012'\t----- bird -----\tdebit_card_specializing",
    "14": "SELECT T2.Description FROM yearmonth AS T1 INNER JOIN transactions_1k AS T3 ON T1.CustomerID = T3.CustomerID INNER JOIN products AS T2 ON T2.ProductID = T3.ProductID WHERE T1.Date LIKE '201309%'\t----- bird -----\tdebit_card_specializing",
    "15": "SELECT T2.Country FROM yearmonth AS T1 INNER JOIN gasstations AS T2 ON T1.CustomerID = T2.GasStationID WHERE SUBSTR(T1.Date, 1, 6) = '201306' GROUP BY T2.Country\t----- bird -----\tdebit_card_specializing",
    "16": "SELECT COUNT(T1.CustomerID) FROM (SELECT CustomerID FROM customers WHERE Currency = 'EUR') AS T1 INNER JOIN (SELECT CustomerID FROM `yearmonth` WHERE Consumption > 1000) AS T2 ON T1.CustomerID = T2.CustomerID\t----- bird -----\tdebit_card_specializing",
    "17": "SELECT T3.Description FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID INNER JOIN products AS T3 ON T1.ProductID = T3.ProductID WHERE T2.Country = 'CZE'\t----- bird -----\tdebit_card_specializing",
    "18": "SELECT DISTINCT T1.Time FROM transactions_1k AS T1 JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID WHERE T2.ChainID = 11\t----- bird -----\tdebit_card_specializing",
    "19": "SELECT COUNT(*) FROM `transactions_1k` AS T1 INNER JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID WHERE T2.Country = 'CZE' AND T1.Date > '2012-01-01'\t----- bird -----\tdebit_card_specializing",
    "20": "SELECT T1.Currency FROM customers AS T1 INNER JOIN transactions_1k AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Date = '2012-08-24' AND T2.Time = '16:25:00'\t----- bird -----\tdebit_card_specializing",
    "21": "SELECT T1.Segment FROM customers AS T1 INNER JOIN `transactions_1k` AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Date = '2012-08-23' AND T2.Time = '21:20:00'\t----- bird -----\tdebit_card_specializing",
    "22": "SELECT COUNT(*) FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID WHERE T1.Date = '2012-08-26' AND T1.Time BETWEEN '08:00:00' AND '09:00:00' AND T2.Country = 'CZE'\t----- bird -----\tdebit_card_specializing",
    "23": "SELECT T2.Country FROM `transactions_1k` AS T1 INNER JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID WHERE T1.Date = '2012-08-24' AND T1.Price * T1.Amount = 548.4 LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "24": "SELECT CAST(SUM(IIF(T2.Currency = 'EUR', 1, 0)) AS REAL) * 100 / COUNT(T2.CustomerID) FROM yearmonth AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Date = '2012-08-25'\t----- bird -----\tdebit_card_specializing",
    "25": "SELECT CAST((T1.Consumption - T3.Consumption) AS REAL) / T1.Consumption FROM (SELECT Consumption FROM yearmonth WHERE CustomerID = (SELECT CustomerID FROM transactions_1k WHERE Price = 634.8 AND Date = '2012-08-25') AND Date LIKE '2012%') AS T1, (SELECT Consumption FROM yearmonth WHERE CustomerID = (SELECT CustomerID FROM transactions_1k WHERE Price = 634.8 AND Date = '2012-08-25') AND Date LIKE '2013%') AS T3\t----- bird -----\tdebit_card_specializing",
    "26": "SELECT CAST(SUM(IIF(T2.Segment = 'premium', 1, 0)) AS REAL) * 100 / COUNT(*) FROM gasstations AS T2 WHERE T2.Country = 'SVK'\t----- bird -----\tdebit_card_specializing",
    "27": "SELECT SUM(T1.Amount) * SUM(T1.Price) FROM `transactions_1k` AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.CustomerID = 38508 AND strftime('%Y%m', T1.Date) = '201201'\t----- bird -----\tdebit_card_specializing",
    "28": "SELECT T1.CustomerID, SUM(T2.Price) / SUM(T2.Amount) AS average_price, T1.Currency FROM customers AS T1 JOIN `transactions_1k` AS T2 ON T1.CustomerID = T2.CustomerID GROUP BY T1.CustomerID ORDER BY SUM(T2.Price) DESC LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "29": "SELECT T1.Consumption FROM yearmonth AS T1 INNER JOIN transactions_1k AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.ProductID = 5 AND T2.Price / T2.Amount > 29 AND T1.Date = '201208'\t----- bird -----\tdebit_card_specializing",
    "30": "SELECT T2.major_name FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.first_name = 'Angela' AND T1.last_name = 'Sanders'\t----- bird -----\tstudent_club",
    "31": "SELECT COUNT(T1.member_id) FROM member AS T1 INNER JOIN attendance AS T2 ON T1.member_id = T2.link_to_member INNER JOIN event AS T3 ON T2.link_to_event = T3.event_id WHERE T3.event_name = 'Women''s Soccer' AND T1.t_shirt_size = 'Medium'\t----- bird -----\tstudent_club",
    "32": "SELECT COUNT(*) FROM (SELECT T1.event_id FROM event AS T1 INNER JOIN attendance AS T2 ON T1.event_id = T2.link_to_event WHERE T1.type = 'Meeting' GROUP BY T1.event_id HAVING COUNT(T2.link_to_member) > 10)\t----- bird -----\tstudent_club",
    "33": "SELECT T1.event_name FROM event AS T1 INNER JOIN attendance AS T2 ON T1.event_id = T2.link_to_event GROUP BY T1.event_id HAVING COUNT(T2.link_to_member) > 20 EXCEPT SELECT T1.event_name FROM event AS T1 INNER JOIN attendance AS T2 ON T1.event_id = T2.link_to_event INNER JOIN income AS T3 ON T1.event_id = T3.link_to_member GROUP BY T1.event_id HAVING COUNT(T2.link_to_member) > 20\t----- bird -----\tstudent_club",
    "34": "SELECT T3.amount FROM member AS T1 INNER JOIN income AS T3 ON T1.member_id = T3.link_to_member WHERE T1.position = 'Vice President'\t----- bird -----\tstudent_club",
    "35": "SELECT T1.first_name, T1.last_name FROM member AS T1 INNER JOIN zip_code AS T2 ON T1.zip = T2.zip_code WHERE T2.state = 'Illinois'\t----- bird -----\tstudent_club",
    "36": "SELECT T1.approved FROM expense AS T1 INNER JOIN budget AS T2 ON T1.link_to_budget = T2.budget_id INNER JOIN event AS T3 ON T2.link_to_event = T3.event_id WHERE T3.event_name = 'October Meeting' AND T3.event_date = '2019-10-08'\t----- bird -----\tstudent_club",
    "37": "SELECT AVG(T2.cost) FROM member AS T1 INNER JOIN expense AS T2 ON T1.member_id = T2.link_to_member WHERE T1.first_name = 'Elijah' AND T1.last_name = 'Allen' AND strftime('%m', T2.expense_date) IN ('09', '10')\t----- bird -----\tstudent_club",
    "38": "SELECT (SELECT SUM(T2.spent) FROM event AS T1 INNER JOIN budget AS T2 ON T1.event_id = T2.link_to_event WHERE SUBSTR(T1.event_date, 1, 4) = '2019') - (SELECT SUM(T2.spent) FROM event AS T1 INNER JOIN budget AS T2 ON T1.event_id = T2.link_to_event WHERE SUBSTR(T1.event_date, 1, 4) = '2020')\t----- bird -----\tstudent_club",
    "39": "SELECT notes FROM income WHERE source = 'Fundraising' AND date_received = '2019-09-14'\t----- bird -----\tstudent_club",
    "40": "SELECT T.phone FROM member AS T WHERE T.first_name = 'Carlo' AND T.last_name = 'Jacobs'\t----- bird -----\tstudent_club",
    "41": "SELECT T1.event_status FROM budget AS T1 INNER JOIN expense AS T2 ON T2.link_to_budget = T1.budget_id WHERE T2.expense_description = 'Post Cards, Posters' AND T2.expense_date = '2019-8-20'\t----- bird -----\tstudent_club",
    "42": "SELECT T2.major_name FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.first_name = 'Brent' AND T1.last_name = 'Thomason'\t----- bird -----\tstudent_club",
    "43": "SELECT COUNT(*) FROM member WHERE t_shirt_size = 'Medium' AND link_to_major IN (SELECT major_id FROM major WHERE major_name = 'Business') \t----- bird -----\tstudent_club",
    "44": "SELECT T2.department FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.position = 'President'\t----- bird -----\tstudent_club",
    "45": "SELECT T1.date_received FROM income AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T2.first_name = 'Connor' AND T2.last_name = 'Hilton' AND T1.source = 'Dues'\t----- bird -----\tstudent_club",
    "46": "SELECT CAST(SUM(CASE WHEN T1.event_name = 'Yearly Kickoff' THEN T2.amount ELSE 0 END) AS REAL) / SUM(CASE WHEN T1.event_name = 'October Meeting' THEN T2.amount ELSE 0 END) FROM event AS T1 INNER JOIN budget AS T2 ON T1.event_id = T2.link_to_event WHERE T2.category = 'Advertisement'\t----- bird -----\tstudent_club",
    "47": "SELECT SUM(T1.cost) FROM expense AS T1 WHERE T1.expense_description = 'Pizza'\t----- bird -----\tstudent_club",
    "48": "SELECT COUNT(*) FROM zip_code WHERE county = 'Orange' AND state = 'Virginia'\t----- bird -----\tstudent_club",
    "49": "SELECT T2.major_name FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.phone = '809-555-3360'\t----- bird -----\tstudent_club",
    "50": "SELECT COUNT(T2.link_to_member) FROM event AS T1 INNER JOIN attendance AS T2 ON T1.event_id = T2.link_to_event WHERE T1.event_name = 'Women's Soccer'\t----- bird -----\tstudent_club",
    "51": "SELECT T1.first_name, T1.last_name FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.department = 'School of Applied Sciences, Technology and Education'\t----- bird -----\tstudent_club",
    "52": "SELECT T1.event_name FROM event AS T1 INNER JOIN budget AS T2 ON T1.event_id = T2.link_to_event WHERE T1.status = 'Closed' AND T2.spent / T2.amount = ( SELECT MAX(T2.spent / T2.amount) FROM event AS T1 INNER JOIN budget AS T2 ON T1.event_id = T2.link_to_event WHERE T1.status = 'Closed' )\t----- bird -----\tstudent_club",
    "53": "SELECT MAX(T1.spent) FROM budget AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id\t----- bird -----\tstudent_club",
    "54": "SELECT SUM(spent) FROM budget WHERE link_to_event IN (SELECT event_id FROM event WHERE type = 'Food')\t----- bird -----\tstudent_club",
    "55": "SELECT T1.first_name, T1.last_name FROM member AS T1 INNER JOIN attendance AS T2 ON T1.member_id = T2.link_to_member GROUP BY T1.member_id HAVING COUNT(T2.link_to_event) > 7\t----- bird -----\tstudent_club",
    "56": "SELECT T3.first_name, T3.last_name FROM event AS T1 INNER JOIN budget AS T2 ON T1.event_id = T2.link_to_event INNER JOIN member AS T3 ON T2.link_to_member = T3.member_id WHERE T1.event_name = 'Yearly Kickoff'\t----- bird -----\tstudent_club",
    "57": "SELECT T1.event_name FROM event AS T1 INNER JOIN budget AS T2 ON T1.event_id = T2.link_to_event WHERE T2.spent = ( SELECT MIN(spent) FROM budget )\t----- bird -----\tstudent_club",
    "58": "SELECT CAST(SUM(CASE WHEN T1.event_name = 'Yearly Kickoff' THEN T3.cost ELSE 0 END) AS REAL) * 100 / SUM(T3.cost) FROM event AS T1 INNER JOIN budget AS T2 ON T1.event_id = T2.link_to_event INNER JOIN expense AS T3 ON T2.budget_id = T3.link_to_budget\t----- bird -----\tstudent_club",
    "59": "SELECT T.source FROM ( SELECT T1.source, SUM(T1.amount) AS total_amount FROM income AS T1 WHERE T1.date_received BETWEEN '2019-09-01' AND '2019-09-30' GROUP BY T1.source ) AS T WHERE T.total_amount = ( SELECT MAX(T2.total_amount) FROM ( SELECT T1.source, SUM(T1.amount) AS total_amount FROM income AS T1 WHERE T1.date_received BETWEEN '2019-09-01' AND '2019-09-30' GROUP BY T1.source ) AS T2 )\t----- bird -----\tstudent_club",
    "60": "SELECT COUNT(T1.member_id) FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.major_name = 'Physics Teaching'\t----- bird -----\tstudent_club",
    "61": "SELECT T1.event_name FROM event AS T1 INNER JOIN budget AS T2 ON T1.event_id = T2.link_to_event WHERE T2.category = 'Advertisement' ORDER BY T2.spent DESC LIMIT 1\t----- bird -----\tstudent_club",
    "62": "SELECT T2.first_name, T2.last_name FROM attendance AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id INNER JOIN event AS T3 ON T1.link_to_event = T3.event_id WHERE T3.event_name = 'Women''s Soccer' AND T2.first_name = 'Maya' AND T2.last_name = 'Mclean'\t----- bird -----\tstudent_club",
    "63": "SELECT T1.cost FROM expense AS T1 INNER JOIN budget AS T2 ON T1.link_to_budget = T2.budget_id INNER JOIN event AS T3 ON T2.link_to_event = T3.event_id WHERE T1.expense_description = 'Posters' AND T3.event_name = 'September Speaker'\t----- bird -----\tstudent_club",
    "64": "SELECT T1.event_name FROM event AS T1 INNER JOIN budget AS T2 ON T1.event_id = T2.link_to_event WHERE T2.remaining < 0 AND T1.status = 'Closed' ORDER BY T2.remaining LIMIT 1\t----- bird -----\tstudent_club",
    "65": "SELECT SUM(T2.cost) FROM event AS T1 INNER JOIN budget AS T3 ON T1.event_id = T3.link_to_event INNER JOIN expense AS T2 ON T3.budget_id = T2.link_to_budget WHERE T1.event_name = 'October Meeting' AND T2.approved = 'TRUE'\t----- bird -----\tstudent_club",
    "66": "SELECT SUM(T2.amount), T2.category FROM event AS T1 INNER JOIN budget AS T2 ON T1.event_id = T2.link_to_event WHERE T1.event_name = 'April Speaker' GROUP BY T2.category ORDER BY SUM(T2.amount) ASC\t----- bird -----\tstudent_club",
    "67": "SELECT SUM(T1.cost) FROM expense AS T1 WHERE T1.expense_date = '2019-08-20'\t----- bird -----\tstudent_club",
    "68": "SELECT T1.first_name, T1.last_name, SUM(T2.cost) AS total_cost FROM member AS T1 INNER JOIN expense AS T2 ON T1.member_id = T2.link_to_member WHERE T1.member_id = 'rec4BLdZHS2Blfp4v' GROUP BY T1.first_name, T1.last_name\t----- bird -----\tstudent_club",
    "69": "SELECT T2.expense_description FROM member AS T1 INNER JOIN expense AS T2 ON T1.member_id = T2.link_to_member WHERE T1.first_name = 'Sacha' AND T1.last_name = 'Harrison'\t----- bird -----\tstudent_club",
    "70": "SELECT T1.type FROM event AS T1 INNER JOIN attendance AS T2 ON T1.event_id = T2.link_to_event WHERE T1.location = 'MU 215'\t----- bird -----\tstudent_club",
    "71": "SELECT T1.last_name, T2.department, T2.college FROM member AS T1 INNER JOIN major AS T2 ON T2.major_id = T1.link_to_major WHERE T2.major_name = 'Environmental Engineering'\t----- bird -----\tstudent_club",
    "72": "SELECT T2.category FROM event AS T1 INNER JOIN budget AS T2 ON T1.event_id = T2.link_to_event WHERE T1.location = 'MU 215' AND T1.type = 'Guest Speaker' AND T2.spent = 0\t----- bird -----\tstudent_club",
    "73": "SELECT CAST(SUM(CASE WHEN T2.amount = 50 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.member_id) FROM member AS T1 INNER JOIN income AS T2 ON T1.member_id = T2.link_to_member WHERE T1.t_shirt_size = 'Medium' AND T1.position = 'Member' AND T2.source = 'Student_Club'\t----- bird -----\tstudent_club",
    "74": "SELECT T1.event_name FROM event AS T1 WHERE T1.type = 'Game' AND T1.status = 'Closed' AND T1.event_date BETWEEN '2019-03-15' AND '2020-03-20'\t----- bird -----\tstudent_club",
    "75": "SELECT T1.first_name, T1.last_name, T1.phone FROM member AS T1 INNER JOIN expense AS T2 ON T1.member_id = T2.link_to_member WHERE T2.cost > (SELECT AVG(cost) FROM expense)\t----- bird -----\tstudent_club",
    "76": "SELECT T1.first_name, T1.last_name, T2.cost FROM member AS T1 INNER JOIN expense AS T2 ON T1.member_id = T2.link_to_member WHERE T2.expense_description = 'Water, Veggie tray, supplies'\t----- bird -----\tstudent_club",
    "77": "SELECT T2.first_name, T2.last_name, T1.amount FROM income AS T1 INNER JOIN member AS T2 ON T2.member_id = T1.link_to_member WHERE T1.date_received = '9/9/2019'\t----- bird -----\tstudent_club",
    "78": "SELECT CAST((SELECT COUNT(T1.ID) FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'M' AND T1.Admission = '+') - (SELECT COUNT(T1.ID) FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'M' AND T1.Admission = '-') AS REAL) * 100 / (SELECT COUNT(T1.ID) FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'M' AND T1.Admission = '-')\t----- bird -----\tthrombosis_prediction",
    "79": "SELECT CAST(SUM(IIF(strftime('%Y', T1.Birthday) > '1930', 1, 0)) AS REAL) * 100 / COUNT(T1.ID) FROM Patient AS T1 WHERE T1.SEX = 'F'\t----- bird -----\tthrombosis_prediction",
    "80": "SELECT CAST(SUM(CASE WHEN T2.Admission = \\'+\\' THEN 1 ELSE 0 END) AS REAL) / SUM(CASE WHEN T2.Admission = \\'-\\' THEN 1 ELSE 0 END) FROM ( SELECT T1.ID , T1.Diagnosis , T2.Admission FROM Examination AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.Diagnosis = \\'SLE\\' ) AS T2\t----- bird -----\tthrombosis_prediction",
    "81": "SELECT T1.Diagnosis, T2.Date FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.ID = 30609\t----- bird -----\tthrombosis_prediction",
    "82": "SELECT T1.ID, T1.SEX, T1.Birthday FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.LDH > 500\t----- bird -----\tthrombosis_prediction",
    "83": "SELECT T1.ID, strftime('%Y', CURRENT_TIMESTAMP) - strftime('%Y', T1.Birthday) AS age FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T2.RVVT = '+'\t----- bird -----\tthrombosis_prediction",
    "84": "SELECT T1.ID, T1.SEX, T1.Diagnosis FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T2.Thrombosis = 2;\t----- bird -----\tthrombosis_prediction",
    "85": "SELECT COUNT(T1.ID) FROM Patient AS T1 WHERE T1.SEX = 'F' AND strftime('%Y', T1.Description) = '1997' AND T1.Admittance = '-'\t----- bird -----\tthrombosis_prediction",
    "86": "SELECT COUNT(T1.ID) FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'F' AND T2.Thrombosis = 1 AND strftime('%Y', T2.`Examination Date`) = '1997'\t----- bird -----\tthrombosis_prediction",
    "87": "SELECT T2.Symptoms, T1.Diagnosis FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.Birthday = ( SELECT MIN(T1.Birthday) FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T2.Symptoms IS NOT NULL ) AND T2.Symptoms IS NOT NULL\t----- bird -----\tthrombosis_prediction",
    "88": "SELECT T2.Date ,  strftime('%Y', T1.First_Date) - strftime('%Y', T1.Birthday) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Diagnosis = 'SJS' ORDER BY T1.Birthday DESC LIMIT 1\t----- bird -----\tthrombosis_prediction",
    "89": "SELECT CAST(SUM(CASE WHEN T2.SEX = 'M' AND T1.UA <= 8.0 THEN 1 ELSE 0 END) AS REAL) / SUM(CASE WHEN T2.SEX = 'F' AND T1.UA <= 6.5 THEN 1 ELSE 0 END) FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID\t----- bird -----\tthrombosis_prediction",
    "90": "SELECT COUNT(T1.ID) FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.Birthday > DATE('1990-01-01') - 18 * 365 AND T1.Birthday > DATE('1993-12-31') - 18 * 365 AND strftime('%Y', T2.`Examination Date`) BETWEEN '1990' AND '1993'\t----- bird -----\tthrombosis_prediction",
    "91": "SELECT T2.Birthday ,  T1.Diagnosis ,  (strftime('%Y',T1.`Examination Date`)-strftime('%Y',T2.Birthday)) AS age FROM `Examination` AS T1 INNER JOIN `Patient` AS T2 ON T2.ID = T1.ID WHERE T1.HGB = (SELECT MAX(T1.HGB) FROM `Examination` AS T1 INNER JOIN `Patient` AS T2 ON T2.ID = T1.ID)\t----- bird -----\tthrombosis_prediction",
    "92": "SELECT T2.`aCL IgM` FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.Diagnosis = 'SLE' AND T1.Description = '1994-02-19' AND T2.`Examination Date` = '1993-11-12'\t----- bird -----\tthrombosis_prediction",
    "93": "SELECT CAST((SUM(CASE WHEN T2.Birthday = '1959-02-18' AND strftime('%Y-%m', T2.Date) = '1981-11' THEN T2.`T-CHO` ELSE 0 END) - SUM(CASE WHEN T2.Birthday = '1959-02-18' AND strftime('%Y-%m', T2.Date) = '1981-12' THEN T2.`T-CHO` ELSE 0 END)) AS REAL) / SUM(CASE WHEN T2.Birthday = '1959-02-18' AND strftime('%Y-%m', T2.Date) = '1981-12' THEN T2.`T-CHO` ELSE 0 END) FROM (SELECT * WHERE T2.Birthday = '1959-02-18' AND strftime('%Y-%m', T2.Date) IN ('1981-11', '1981-12')) AS T2\t----- bird -----\tthrombosis_prediction",
    "94": "SELECT T1.ID FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.Date BETWEEN '1987-07-06' AND '1996-01-31' AND T1.GPT > 30 AND T1.ALB < 4.0\t----- bird -----\tthrombosis_prediction",
    "95": "SELECT COUNT(T1.ID) FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T2.Thrombosis = 2 AND T2.ANA = 'S' AND T2.`aCL IgM` > (SELECT AVG(`aCL IgM`) * 1.2 FROM Examination)\t----- bird -----\tthrombosis_prediction",
    "96": "SELECT T1.ID FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.Date LIKE '1991-10%' AND T2.TBIL < 2.0 AND T1.Admission = '-'\t----- bird -----\tthrombosis_prediction",
    "97": "SELECT AVG(T1.ALB) FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T2.SEX = 'F' AND T1.PLT > 400 AND T2.Diagnosis = 'SLE'\t----- bird -----\tthrombosis_prediction",
    "98": "SELECT COUNT(T1.ID) FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'F' AND T2.Diagnosis = 'APS'\t----- bird -----\tthrombosis_prediction",
    "99": "SELECT CAST(SUM(CASE WHEN T1.SEX = 'F' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.SEX) FROM Patient AS T1 WHERE strftime('%Y', T1.Birthday) = '1980' AND T1.Diagnosis = 'RA'\t----- bird -----\tthrombosis_prediction",
    "100": "SELECT CASE WHEN T1.SEX = 'M' AND T1.UA > 8 OR T1.SEX = 'F' AND T1.UA > 6.5 THEN 'yes' ELSE 'no' END AS answer FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.ID = 57266\t----- bird -----\tthrombosis_prediction",
    "101": "SELECT T1.ID FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'M' AND T2.GPT >= 60\t----- bird -----\tthrombosis_prediction",
    "102": "SELECT T2.Diagnosis FROM (SELECT ID FROM Laboratory WHERE GPT > 60) AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID ORDER BY T2.Birthday ASC\t----- bird -----\tthrombosis_prediction",
    "103": "SELECT T1.ID, T1.SEX, T1.Birthday FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.UN = 29\t----- bird -----\tthrombosis_prediction",
    "104": "SELECT T2.SEX ,  GROUP_CONCAT(DISTINCT T1.ID) FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.`T-BIL` >= 2.0 GROUP BY T2.SEX\t----- bird -----\tthrombosis_prediction",
    "105": "SELECT AVG(CAST((strftime('%Y', 'now') - strftime('%Y', T2.Birthday)) * (strftime('%m', 'now') - strftime('%m', T2.Birthday)) * (strftime('%d', 'now') - strftime('%d', T2.Birthday)) / 365.25 AS REAL)) FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.`T-CHO` >= 250 AND T2.SEX = 'M'\t----- bird -----\tthrombosis_prediction",
    "106": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.TG >= 200 AND strftime('%Y', datetime('now')) - strftime('%Y', T1.Birthday) > 50\t----- bird -----\tthrombosis_prediction",
    "107": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'M' AND T2.CPK >= 250 AND strftime('%Y', T1.Birthday) BETWEEN '1936' AND '1956'\t----- bird -----\tthrombosis_prediction",
    "108": "SELECT T2.ID, T2.SEX, strftime('%Y', datetime('now')) - strftime('%Y', T2.Birthday) AS age FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.GLU >= 180 AND T1.`T-CHO` < 250\t----- bird -----\tthrombosis_prediction",
    "109": "SELECT T1.ID, T1.Diagnosis, strftime('%Y', CURRENT_TIMESTAMP) - strftime('%Y', T1.Birthday) AS age FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.RBC < 3.5\t----- bird -----\tthrombosis_prediction",
    "110": "SELECT T1.ID ,  T1.SEX FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Diagnosis = 'SLE' AND T2.HGB >= 10 AND T2.HGB <= 17 ORDER BY T1.Birthday ASC LIMIT 1\t----- bird -----\tthrombosis_prediction",
    "111": "SELECT T2.ID, T2.age FROM (SELECT T1.ID, T1.Birthday, CAST((strftime('%Y', 'now') - strftime('%Y', T1.Birthday)) AS REAL) - (strftime('%m-%d', T1.Birthday) > strftime('%m-%d', 'now')) AS age FROM Patient AS T1 WHERE T1.ID IN (SELECT T3.ID FROM (SELECT T.ID, COUNT(T.ID) AS cnt FROM Laboratory AS T WHERE T.HCT >= 52 GROUP BY T.ID) AS T3 WHERE T3.cnt >= 2)) AS T2 WHERE T2.ID IN (SELECT T4.ID FROM (SELECT T.ID, COUNT(T.ID) AS cnt FROM Laboratory AS T WHERE T.HCT >= 52 GROUP BY T.ID) AS T4 WHERE T4.cnt >= 2)\t----- bird -----\tthrombosis_prediction",
    "112": "SELECT SUM(CASE WHEN T2.PLT < 100 THEN 1 ELSE 0 END) - SUM(CASE WHEN T2.PLT > 400 THEN 1 ELSE 0 END) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.PLT <= 100 OR T2.PLT >= 400\t----- bird -----\tthrombosis_prediction",
    "113": "SELECT T1.ID FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.PLT BETWEEN 100 AND 400 AND strftime('%Y', CURRENT_TIMESTAMP) - strftime('%Y', T1.Birthday) < 50 AND strftime('%Y', T2.Date) = '1984'\t----- bird -----\tthrombosis_prediction",
    "114": "SELECT CAST(SUM(CASE WHEN T1.SEX = 'F' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.SEX) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.PT >= 14 AND strftime('%Y', date('now')) - strftime('%Y', T1.Birthday) > 55\t----- bird -----\tthrombosis_prediction",
    "115": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'M' AND T2.WBC BETWEEN 3.5 AND 9 AND (T2.FG <= 150 OR T2.FG >= 450)\t----- bird -----\tthrombosis_prediction",
    "116": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.IGG >= 2000\t----- bird -----\tthrombosis_prediction",
    "117": "SELECT COUNT(*) FROM Laboratory AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.IGG > 900 AND T1.IGG < 2000 AND T2.Symptoms IS NOT NULL\t----- bird -----\tthrombosis_prediction",
    "118": "SELECT COUNT(T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.IGA > 80 AND T2.IGA < 500 AND strftime('%Y', T1.`First Date`) >= '1990'\t----- bird -----\tthrombosis_prediction",
    "119": "SELECT T.Diagnosis FROM ( SELECT T2.Diagnosis, COUNT(T2.Diagnosis) AS num FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.IGM <= 40 OR T1.IGM >= 400 GROUP BY T2.Diagnosis ) AS T ORDER BY T.num DESC LIMIT 1\t----- bird -----\tthrombosis_prediction",
    "120": "SELECT COUNT(T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.CRP = '+' AND T1.Description IS NULL\t----- bird -----\tthrombosis_prediction",
    "121": "SELECT COUNT(T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.CRE >= 1.5 AND (strftime('%Y', 'now') - strftime('%Y', T1.Birthday)) < 70\t----- bird -----\tthrombosis_prediction",
    "122": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.RNP IN ('-', '+-') AND T1.Admission = '+'\t----- bird -----\tthrombosis_prediction",
    "123": "SELECT COUNT(T1.ID) FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T2.SMA IN ('-', '+-') AND T2.Thrombosis = 0\t----- bird -----\tthrombosis_prediction",
    "124": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T2.`SC170` IN('negative', '0') AND T1.SEX = 'F' AND T2.Symptoms IS NULL\t----- bird -----\tthrombosis_prediction",
    "125": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'M' AND T2.CENTROMEA IN ('-', '+-') AND T2.SSB IN ('-', '+-')\t----- bird -----\tthrombosis_prediction",
    "126": "SELECT T2.Birthday FROM (SELECT T1.ID FROM Laboratory AS T1 JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.GOT >= 60) AS T1 JOIN Patient AS T2 ON T1.ID = T2.ID ORDER BY T2.Birthday DESC LIMIT 1\t----- bird -----\tthrombosis_prediction",
    "127": "SELECT COUNT(T1.ID) FROM Laboratory AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.CPK < 250 AND ((T2.KCT = '+' OR T2.RVVT = '+' OR T2.LAC = '+'))\t----- bird -----\tthrombosis_prediction",
    "128": "SELECT T2.name FROM (SELECT league_id, SUM(home_team_goal + away_team_goal) AS total_goals FROM Match WHERE season = '2015/2016' GROUP BY league_id) AS subquery JOIN League AS T2 ON subquery.league_id = T2.id ORDER BY total_goals DESC LIMIT 1\t----- bird -----\teuropean_football_2",
    "129": "SELECT T.team_long_name FROM (SELECT away_team_api_id, COUNT(*) AS wins FROM `Match` WHERE season = '2009/2010' AND away_team_goal > home_team_goal AND league_id IN (SELECT id FROM League WHERE name = 'Scotland Premier League') GROUP BY away_team_api_id ORDER BY wins DESC LIMIT 1) AS T1 JOIN Team AS T ON T1.away_team_api_id = T.team_api_id\t----- bird -----\teuropean_football_2",
    "130": "SELECT buildUpPlaySpeed FROM Team_Attributes WHERE buildUpPlaySpeed IN ( SELECT MAX(buildUpPlaySpeed) FROM Team_Attributes ) ORDER BY buildUpPlaySpeed DESC LIMIT 4\t----- bird -----\teuropean_football_2",
    "131": "SELECT T2.name FROM ( SELECT league_id, COUNT(*) AS num_draws FROM Match WHERE season = '2015/2016' AND home_team_goal = away_team_goal GROUP BY league_id ) AS T1 JOIN League AS T2 ON T1.league_id = T2.id WHERE T1.num_draws = ( SELECT MAX(num_draws) FROM ( SELECT COUNT(*) AS num_draws FROM Match WHERE season = '2015/2016' AND home_team_goal = away_team_goal GROUP BY league_id ) )\t----- bird -----\teuropean_football_2",
    "132": "SELECT strftime('%Y', 'now') - strftime('%Y', T2.birthday) AS age FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.sprint_speed >= 97 AND T1.date BETWEEN '2013-01-01' AND '2015-12-31'\t----- bird -----\teuropean_football_2",
    "133": "SELECT T2.name ,  COUNT(T1.league_id) FROM `Match` AS T1 INNER JOIN League AS T2 ON T1.league_id = T2.id GROUP BY T1.league_id ORDER BY COUNT(T1.league_id) DESC LIMIT 1\t----- bird -----\teuropean_football_2",
    "134": "SELECT T1.team_fifa_api_id FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T2.buildUpPlaySpeed > 50 AND T2.buildUpPlaySpeed < 60\t----- bird -----\teuropean_football_2",
    "135": "SELECT T1.team_long_name FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T2.buildUpPlayPassing > ( SELECT AVG(buildUpPlayPassing) FROM Team_Attributes WHERE strftime('%Y', date) = '2012' ) AND strftime('%Y', T2.date) = '2012'\t----- bird -----\teuropean_football_2",
    "136": "SELECT CAST(SUM(IIF(T2.preferred_foot = 'left', 1, 0)) AS REAL) * 100 / COUNT(T2.player_fifa_api_id) FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_fifa_api_id = T2.player_fifa_api_id WHERE T1.birthday BETWEEN '1987%' AND '1992%'\t----- bird -----\teuropean_football_2",
    "137": "SELECT AVG(T2.long_shots) FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.player_name = 'Ahmed Samir Farag'\t----- bird -----\teuropean_football_2",
    "138": "SELECT T2.player_name FROM (SELECT T1.player_fifa_api_id , AVG(T1.heading_accuracy) AS avg_head , T1.player_api_id FROM Player_Attributes AS T1 WHERE T1.player_api_id IN(SELECT player_api_id FROM Player WHERE height  >  180) GROUP BY T1.player_fifa_api_id ORDER BY AVG(T1.heading_accuracy) DESC LIMIT 10) AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id ORDER BY T1.avg_head DESC LIMIT 10\t----- bird -----\teuropean_football_2",
    "139": "SELECT T2.name FROM (SELECT SUM(T1.home_team_goal) AS home ,  SUM(T1.away_team_goal) AS away ,  T1.league_id FROM `Match` AS T1 WHERE T1.season = '2009/2010' GROUP BY T1.league_id) AS T1 JOIN League AS T2 ON T2.id = T1.league_id WHERE T1.home > T1.away\t----- bird -----\teuropean_football_2",
    "140": "SELECT player_name FROM Player WHERE SUBSTR(birthday,1,7) = '1970-10'\t----- bird -----\teuropean_football_2",
    "141": "SELECT T2.overall_rating FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.player_name = 'Gabriel Tamas' AND strftime('%Y', T2.date) = '2011'\t----- bird -----\teuropean_football_2",
    "142": "SELECT AVG(T1.home_team_goal) FROM Match AS T1 INNER JOIN Country AS T2 ON T1.country_id = T2.id WHERE T2.name = 'Poland' AND T1.season = '2010/2011'\t----- bird -----\teuropean_football_2",
    "143": "SELECT AVG(T2.finishing) FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.player_api_id IN (SELECT player_api_id FROM Player WHERE height = (SELECT MIN(height) FROM Player) OR height = (SELECT MAX(height) FROM Player)) GROUP BY T1.player_api_id ORDER BY AVG(T2.finishing) DESC LIMIT 1\t----- bird -----\teuropean_football_2",
    "144": "SELECT AVG(T2.overall_rating) FROM Player AS T1 INNER JOIN `Player_Attributes` AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.height > 170 AND strftime('%Y', T2.date) BETWEEN '2010' AND '2015'\t----- bird -----\teuropean_football_2",
    "145": "SELECT ( SELECT CAST(SUM(CASE WHEN T1.player_name = 'Abdou Diallo' THEN T2.ball_control ELSE 0 END) AS REAL) / COUNT(CASE WHEN T1.player_name = 'Abdou Diallo' THEN T1.id ELSE NULL END) FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id ) - ( SELECT CAST(SUM(CASE WHEN T1.player_name = 'Aaron Appindangoye' THEN T2.ball_control ELSE 0 END) AS REAL) / COUNT(CASE WHEN T1.player_name = 'Aaron Appindangoye' THEN T1.id ELSE NULL END) FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id )\t----- bird -----\teuropean_football_2",
    "146": "SELECT CASE WHEN T1.birthday < T2.birthday THEN 'Aaron Lennon' ELSE 'Abdelaziz Barrada' END FROM Player AS T1 JOIN Player AS T2 ON T1.player_name = 'Aaron Lennon' AND T2.player_name = 'Abdelaziz Barrada'\t----- bird -----\teuropean_football_2",
    "147": "SELECT player_name FROM Player WHERE height = (SELECT MAX(height) FROM Player)\t----- bird -----\teuropean_football_2",
    "148": "SELECT COUNT(*) FROM Player_Attributes WHERE preferred_foot = 'left' AND attacking_work_rate = 'low'\t----- bird -----\teuropean_football_2",
    "149": "SELECT COUNT(DISTINCT T1.player_api_id) FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE strftime('%Y', T1.birthday) < '1986' AND T2.defensive_work_rate = 'high'\t----- bird -----\teuropean_football_2",
    "150": "SELECT T1.player_name FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.volleys > 70 AND T2.dribbling > 70\t----- bird -----\teuropean_football_2",
    "151": "SELECT COUNT(*) FROM Match WHERE date LIKE '2009-04%' AND league_id IN (SELECT id FROM League WHERE name = 'Belgium Jupiler League')\t----- bird -----\teuropean_football_2",
    "152": "SELECT T2.name FROM (SELECT league_id , COUNT(league_id) AS num FROM `Match` WHERE season = '2008/2009' GROUP BY league_id) AS T1 JOIN League AS T2 ON T1.league_id = T2.id WHERE T1.num = (SELECT COUNT(league_id) AS num FROM `Match` WHERE season = '2008/2009' GROUP BY league_id ORDER BY num DESC LIMIT 1)\t----- bird -----\teuropean_football_2",
    "153": "SELECT CAST((SUM(CASE WHEN T1.player_name = 'Ariel Borysiuk' THEN T2.overall_rating ELSE 0 END) - SUM(CASE WHEN T1.player_name = 'Paulin Puel' THEN T2.overall_rating ELSE 0 END)) AS REAL) * 100 / SUM(CASE WHEN T1.player_name = 'Paulin Puel' THEN T2.overall_rating ELSE 0 END) FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.player_name IN ('Ariel Borysiuk', 'Paulin Puel')\t----- bird -----\teuropean_football_2",
    "154": "SELECT AVG(T1.overall_rating) FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.player_name = 'Pietro Marino'\t----- bird -----\teuropean_football_2",
    "155": "SELECT T2.chanceCreationPassing, T2.chanceCreationPassingClass FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T1.team_long_name = 'Ajax' ORDER BY T2.chanceCreationPassing DESC LIMIT 1\t----- bird -----\teuropean_football_2",
    "156": "SELECT T1.player_name FROM `Player` AS T1 INNER JOIN `Player_Attributes` AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.overall_rating = 77 AND T2.date LIKE '2016-06-23%' ORDER BY T1.birthday ASC LIMIT 1\t----- bird -----\teuropean_football_2",
    "157": "SELECT T2.overall_rating FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.player_name = 'Aaron Mooy' AND T2.date LIKE '2016-02-04%'\t----- bird -----\teuropean_football_2",
    "158": "SELECT T1.attacking_work_rate FROM `Player_Attributes` AS T1 INNER JOIN `Player` AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.player_name = 'Francesco Migliore' AND T1.date = '2015-05-01'\t----- bird -----\teuropean_football_2",
    "159": "SELECT T2.date FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.player_name = 'Kevin Constant' AND T2.crossing = ( SELECT MAX(T2.crossing) FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.player_name = 'Kevin Constant' )\t----- bird -----\teuropean_football_2",
    "160": "SELECT T1.buildUpPlayPassingClass FROM Team_Attributes AS T1 INNER JOIN Team AS T2 ON T2.team_api_id = T1.team_api_id WHERE T2.team_long_name = 'FC Lorient' AND T1.date LIKE '2010-02-22%'\t----- bird -----\teuropean_football_2",
    "161": "SELECT T2.defenceAggressionClass FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T1.team_long_name = 'Hannover 96' AND T2.date LIKE '2015-09-10%'\t----- bird -----\teuropean_football_2",
    "162": "SELECT AVG(T2.overall_rating) AS avg_overall_rating FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.player_name = 'Marko Arnautovic' AND T2.date BETWEEN '2007-02-22' AND '2016-04-21'\t----- bird -----\teuropean_football_2",
    "163": "SELECT CAST((T1.overall_rating - T2.overall_rating) AS REAL) * 100 / T1.overall_rating AS percentage FROM (SELECT overall_rating FROM Player_Attributes WHERE player_name = 'Landon Donovan' AND date = '2013-07-12') AS T1, (SELECT overall_rating FROM Player_Attributes WHERE player_name = 'Jordan Bowery' AND date = '2013-07-12') AS T2\t----- bird -----\teuropean_football_2",
    "164": "SELECT T.player_name FROM (SELECT T1.player_name, T1.height, RANK() OVER (ORDER BY T1.height DESC) AS tallest FROM Player AS T1 WHERE T1.height IN (SELECT MAX(T1.height) FROM Player AS T1)) AS T WHERE T.tallest = 1\t----- bird -----\teuropean_football_2",
    "165": "SELECT T2.player_name FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.strength = ( SELECT MAX(T1.strength) FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id ) AND T1.overall_rating = ( SELECT MAX(T1.overall_rating) FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id )\t----- bird -----\teuropean_football_2",
    "166": "SELECT DISTINCT T2.player_name FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.attacking_work_rate = 'high'\t----- bird -----\teuropean_football_2",
    "167": "SELECT T1.team_short_name FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T2.chanceCreationPassingClass = 'Safe'\t----- bird -----\teuropean_football_2",
    "168": "SELECT COUNT(*) FROM Player WHERE player_name LIKE 'Aaron%' AND birthday > '1990'\t----- bird -----\teuropean_football_2",
    "169": "SELECT ( SELECT jumping FROM Player_Attributes WHERE id = 6 ) - ( SELECT jumping FROM Player_Attributes WHERE id = 23 ) AS difference\t----- bird -----\teuropean_football_2",
    "170": "SELECT player_api_id FROM Player_Attributes WHERE preferred_foot = 'right' ORDER BY potential ASC LIMIT 4\t----- bird -----\teuropean_football_2",
    "171": "SELECT COUNT(*) FROM Player_Attributes WHERE preferred_foot = 'left' AND attacking_work_rate = 'high' AND crossing = ( SELECT MAX(crossing) FROM Player_Attributes )\t----- bird -----\teuropean_football_2",
    "172": "SELECT T1.home_team_goal, T1.away_team_goal FROM `Match` AS T1 INNER JOIN League AS T2 ON T1.league_id = T2.id WHERE T2.name = 'Belgium Jupiler League' AND T1.date LIKE '2008-09-24%'\t----- bird -----\teuropean_football_2",
    "173": "SELECT T2.buildUpPlaySpeedClass FROM Team AS T1 JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T1.team_long_name = 'KSV Cercle Brugge'\t----- bird -----\teuropean_football_2",
    "174": "SELECT T2.finishing, T2.curve FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.weight = (SELECT MAX(weight) FROM Player)\t----- bird -----\teuropean_football_2",
    "175": "SELECT T2.name FROM (SELECT league_id, COUNT(id) AS num_matches FROM Match WHERE season = '2015/2016' GROUP BY league_id ORDER BY num_matches DESC LIMIT 4) AS T1 JOIN League AS T2 ON T1.league_id = T2.id\t----- bird -----\teuropean_football_2",
    "176": "SELECT T.team_long_name FROM (SELECT away_team_api_id, SUM(away_team_goal) AS total_goals FROM Match GROUP BY away_team_api_id ORDER BY total_goals DESC LIMIT 1) AS subquery JOIN Team AS T ON subquery.away_team_api_id = T.team_api_id\t----- bird -----\teuropean_football_2",
    "177": "SELECT T2.player_name FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.overall_rating = ( SELECT MAX(overall_rating) FROM Player_Attributes ) LIMIT 1\t----- bird -----\teuropean_football_2",
    "178": "SELECT CAST(SUM(CASE WHEN T1.height < 180 AND T2.overall_rating > 70 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.id) FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id\t----- bird -----\teuropean_football_2",
    "179": "SELECT T1.driverRef FROM drivers AS T1 INNER JOIN ( SELECT driverId, MAX(q1) FROM qualifying WHERE raceId = 20 GROUP BY driverId LIMIT 5 ) AS T2 ON T1.driverId = T2.driverId\t----- bird -----\tformula_1",
    "180": "SELECT T1.surname FROM drivers AS T1 INNER JOIN ( SELECT driverId, MIN(q2) AS minq2 FROM qualifying WHERE raceId = 19 GROUP BY driverId ) AS T2 ON T1.driverId = T2.driverId WHERE T2.minq2 = ( SELECT MIN(q2) FROM qualifying WHERE raceId = 19 )\t----- bird -----\tformula_1",
    "181": "SELECT T2.name FROM circuits AS T1 INNER JOIN races AS T2 ON T1.circuitId = T2.circuitId WHERE T1.country = 'Germany'\t----- bird -----\tformula_1",
    "182": "SELECT T2.lat, T2.lng FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T1.name = 'Australian Grand Prix'\t----- bird -----\tformula_1",
    "183": "SELECT T2.lat, T2.lng FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitid = T2.circuitid WHERE T1.name = 'Abu Dhabi Grand Prix'\t----- bird -----\tformula_1",
    "184": "SELECT T1.q1 FROM qualifying AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T2.forename = 'Bruno' AND T2.surname = 'Senna' AND T1.raceId = 354\t----- bird -----\tformula_1",
    "185": "SELECT T1.number FROM qualifying AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T2.raceId = 903 AND T1.q3 LIKE '0:01:54%'\t----- bird -----\tformula_1",
    "186": "SELECT COUNT(*) FROM results WHERE raceId IN (SELECT raceId FROM races WHERE name = 'Bahrain Grand Prix' AND year = 2007) AND time IS NULL;\t----- bird -----\tformula_1",
    "187": "SELECT T1.surname, T1.forename FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId WHERE T2.raceId = 592 AND T2.time IS NOT NULL ORDER BY T1.dob LIMIT 1\t----- bird -----\tformula_1",
    "188": "SELECT T1.url FROM drivers AS T1 INNER JOIN lapTimes AS T2 ON T1.driverId = T2.driverId WHERE T2.time LIKE '0:01:27%' AND T2.raceId = 161\t----- bird -----\tformula_1",
    "189": "SELECT T2.lat, T2.lng FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitid = T2.circuitid WHERE T1.name = 'Malaysian Grand Prix'\t----- bird -----\tformula_1",
    "190": "SELECT T1.url FROM constructors AS T1 INNER JOIN constructorResults AS T2 ON T1.constructorId = T2.constructorId WHERE T2.raceId = 9 ORDER BY T2.points DESC LIMIT 1\t----- bird -----\tformula_1",
    "191": "SELECT T1.code FROM drivers AS T1 INNER JOIN qualifying AS T2 ON T1.driverId = T2.driverId WHERE T2.q3 LIKE '1:%' AND T2.raceId = 45\t----- bird -----\tformula_1",
    "192": "SELECT T1.url FROM seasons AS T1 INNER JOIN races AS T2 ON T1.year = T2.year WHERE T2.raceId = 901\t----- bird -----\tformula_1",
    "193": "SELECT T1.driverId FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId WHERE T2.raceId = 872 AND T2.time IS NOT NULL ORDER BY T1.dob DESC LIMIT 1\t----- bird -----\tformula_1",
    "194": "SELECT T2.nationality FROM (SELECT driverId, MAX(fastestLapSpeed) FROM results WHERE fastestLapSpeed IS NOT NULL GROUP BY driverId) AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId\t----- bird -----\tformula_1",
    "195": "SELECT CAST((T1.fastestLapSpeed - T2.fastestLapSpeed) AS REAL) * 100 / T2.fastestLapSpeed FROM (SELECT T1.fastestLapSpeed FROM results AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T2.forename = 'Paul' AND T2.surname = 'di Resta' AND T1.raceId = 853) AS T1, (SELECT T1.fastestLapSpeed FROM results AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T2.forename = 'Paul' AND T2.surname = 'di Resta' AND T1.raceId = 854) AS T2\t----- bird -----\tformula_1",
    "196": "SELECT CAST(SUM(CASE WHEN T1.time IS NOT NULL THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.driverId) FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T2.date = '1983-07-16'\t----- bird -----\tformula_1",
    "197": "SELECT T1.name FROM races AS T1 INNER JOIN seasons AS T2 ON T1.year = T2.year WHERE T2.year = ( SELECT MIN(T2.year) FROM races AS T1 INNER JOIN seasons AS T2 ON T1.year = T2.year ) AND strftime('%m', T1.date) = ( SELECT strftime('%m', MIN(T1.date)) FROM races AS T1 INNER JOIN seasons AS T2 ON T1.year = T2.year )\t----- bird -----\tformula_1",
    "198": "SELECT T2.forename, T2.surname, MAX(T1.points) FROM driverStandings AS T1 JOIN drivers AS T2 ON T1.driverId = T2.driverId GROUP BY T2.forename, T2.surname ORDER BY MAX(T1.points) DESC LIMIT 1\t----- bird -----\tformula_1",
    "199": "SELECT T1.forename, T1.surname, T3.name FROM drivers AS T1 INNER JOIN (SELECT T1.driverId, T1.raceId, MIN(T1.milliseconds) AS min_milliseconds FROM lapTimes AS T1 GROUP BY T1.driverId, T1.raceId) AS T2 ON T1.driverId = T2.driverId INNER JOIN races AS T3 ON T2.raceId = T3.raceId ORDER BY T2.min_milliseconds LIMIT 1\t----- bird -----\tformula_1",
    "200": "SELECT AVG(T2.milliseconds) FROM races AS T1 INNER JOIN lapTimes AS T2 ON T1.raceId = T2.raceId INNER JOIN drivers AS T3 ON T3.driverId = T2.driverId WHERE T1.name = 'Malaysian Grand Prix' AND T1.year = 2009 AND T3.forename = 'Lewis' AND T3.surname = 'Hamilton'\t----- bird -----\tformula_1",
    "201": "SELECT CAST(SUM(IIF(T2.surname = 'Hamilton' AND T1.position > 1, 1, 0)) AS REAL) * 100 / COUNT(T1.resultId) FROM results AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T1.year >= 2010\t----- bird -----\tformula_1",
    "202": "SELECT T3.surname, T3.nationality, T2.points FROM (SELECT T1.driverId, SUM(T1.wins) AS wins, AVG(T1.points) AS points FROM (SELECT driverId, COUNT(wins) AS wins, SUM(points) AS points FROM driverStandings GROUP BY driverId) AS T1 GROUP BY T1.driverId ORDER BY SUM(T1.wins) DESC LIMIT 1) AS T2 JOIN drivers AS T3 ON T2.driverId = T3.driverId JOIN driverStandings AS T4 ON T3.driverId = T4.driverId ORDER BY T2.points DESC LIMIT 1\t----- bird -----\tformula_1",
    "203": "SELECT T1.surname, T1.forename, T1.dob FROM drivers AS T1 WHERE T1.nationality = 'Japanese' ORDER BY T1.dob DESC LIMIT 1\t----- bird -----\tformula_1",
    "204": "SELECT T2.name, T1.name, T1.location FROM circuits AS T1 INNER JOIN races AS T2 ON T1.circuitId = T2.circuitId WHERE strftime('%Y', T2.date) = '2005' AND strftime('%m', T2.date) = '09'\t----- bird -----\tformula_1",
    "205": "SELECT T1.raceId FROM races AS T1 INNER JOIN results AS T2 ON T1.raceId = T2.raceId INNER JOIN drivers AS T3 ON T2.driverId = T3.driverId WHERE T3.forename = 'Alex' AND T3.surname = 'Yoong' AND T2.position < 20\t----- bird -----\tformula_1",
    "206": "SELECT T1.name, T1.year FROM races AS T1 INNER JOIN results AS T2 ON T1.raceId = T2.raceId INNER JOIN drivers AS T3 ON T2.driverId = T3.driverId WHERE T3.forename = 'Michael' AND T3.surname = 'Schumacher' AND T2.fastestLap = ( SELECT MIN(T2.fastestLap) FROM races AS T1 INNER JOIN results AS T2 ON T1.raceId = T2.raceId INNER JOIN drivers AS T3 ON T2.driverId = T3.driverId WHERE T3.forename = 'Michael' AND T3.surname = 'Schumacher' )\t----- bird -----\tformula_1",
    "207": "SELECT T1.name, T2.points FROM ( SELECT T1.name, T1.year AS name1 ,  T1.raceid FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid JOIN drivers AS T3 ON T2.driverid = T3.driverid WHERE T3.forename = 'Lewis' AND T3.surname = 'Hamilton' ORDER BY T1.year LIMIT 1 ) AS T4 JOIN results AS T2 ON T4.raceid = T2.raceid JOIN drivers AS T3 ON T2.driverid = T3.driverid WHERE T3.forename = 'Lewis' AND T3.surname = 'Hamilton' AND T4.name1 = T1.year\t----- bird -----\tformula_1",
    "208": "SELECT CAST(SUM(IIF(T2.country = 'Germany', 1, 0)) AS REAL) * 100 / COUNT(T1.raceId) FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T1.name = 'European Grand Prix'\t----- bird -----\tformula_1",
    "209": "SELECT lat, lng FROM circuits WHERE name = 'Silverstone Circuit'\t----- bird -----\tformula_1",
    "210": "SELECT circuitRef FROM circuits WHERE name = 'Marina Bay Street Circuit'\t----- bird -----\tformula_1",
    "211": "SELECT nationality FROM drivers WHERE dob = (SELECT MIN(T2.dob) FROM(SELECT * FROM drivers) AS T2)\t----- bird -----\tformula_1",
    "212": "SELECT T2.driverRef FROM races AS T1 INNER JOIN results AS T2 ON T1.raceId = T2.raceId WHERE T1.name = 'Canadian Grand Prix' AND T1.year = 2007 AND T2.position = 1\t----- bird -----\tformula_1",
    "213": "SELECT T1.name FROM races AS T1 INNER JOIN results AS T2 ON T1.raceId = T2.raceId INNER JOIN drivers AS T3 ON T2.driverId = T3.driverId WHERE T3.forename = 'Lewis' AND T3.surname = 'Hamilton' ORDER BY T2.rank ASC LIMIT 1\t----- bird -----\tformula_1",
    "214": "SELECT MAX(T2.fastestLapSpeed) FROM races AS T1 INNER JOIN results AS T2 ON T1.raceId = T2.raceId WHERE T1.year = 2009 AND T1.name = 'Spanish Grand Prix'\t----- bird -----\tformula_1",
    "215": "SELECT T1.positionOrder FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId INNER JOIN drivers AS T3 ON T1.driverId = T3.driverId WHERE T2.name = 'Chinese Grand Prix' AND T2.year = 2008 AND T3.forename = 'Lewis' AND T3.surname = 'Hamilton'\t----- bird -----\tformula_1",
    "216": "SELECT T1.time FROM ( SELECT T2.time FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T2.year = 2008 AND T2.name = 'Australian Grand Prix' AND T1.position = 2 ) AS T1 UNION SELECT T1.time FROM ( SELECT T2.time FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T2.year = 2008 AND T2.name = 'Chinese Grand Prix' AND T1.position = 2 ) AS T1\t----- bird -----\tformula_1",
    "217": "SELECT COUNT(DISTINCT T1.driverId) FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T2.year = 2008 AND T2.name = 'Chinese Grand Prix' AND T1.time IS NOT NULL AND T1.time != ''\t----- bird -----\tformula_1",
    "218": "SELECT CAST((T1.milliseconds - T2.milliseconds) AS REAL) * 100 / T2.milliseconds FROM (SELECT results.milliseconds, results.driverId FROM results WHERE results.raceId = (SELECT races.raceId FROM races WHERE races.name = '2008 Australian Grand Prix') AND results.position = 1) AS T1, (SELECT results.milliseconds, results.driverId FROM results WHERE results.raceId = (SELECT races.raceId FROM races WHERE races.name = '2008 Australian Grand Prix') AND results.position = (SELECT MAX(results.position) FROM results WHERE results.raceId = (SELECT races.raceId FROM races WHERE races.name = '2008 Australian Grand Prix') AND results.time IS NOT NULL)) AS T2\t----- bird -----\tformula_1",
    "219": "SELECT COUNT(*) FROM circuits WHERE location = 'Adelaide' AND country = 'Australia'\t----- bird -----\tformula_1",
    "220": "SELECT MAX(T2.points) FROM constructors AS T1 INNER JOIN constructorStandings AS T2 ON T1.constructorId = T2.constructorId WHERE T1.nationality = 'British'\t----- bird -----\tformula_1",
    "221": "SELECT T1.name FROM constructors AS T1 INNER JOIN constructorResults AS T2 ON T1.constructorId = T2.constructorId WHERE T2.raceId = 291 AND T2.points = 0\t----- bird -----\tformula_1",
    "222": "SELECT COUNT(*) FROM constructorStandings WHERE constructorId IN ( SELECT constructorId FROM constructors WHERE nationality = 'Japanese' ) AND points = 0 GROUP BY constructorId HAVING COUNT(raceId) = 2\t----- bird -----\tformula_1",
    "223": "SELECT CAST(SUM(CASE WHEN T1.time IS NOT NULL THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.time) FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId INNER JOIN drivers AS T3 ON T1.driverId = T3.driverId WHERE T3.nationality = 'Japanese' AND T2.year BETWEEN 2007 AND 2009\t----- bird -----\tformula_1",
    "224": "SELECT strftime('%H:%M:%S', TIME) FROM results WHERE raceId IN (SELECT raceId FROM races WHERE year < 1975) AND position = 1 AND TIME IS NOT NULL GROUP BY raceId\t----- bird -----\tformula_1",
    "225": "SELECT T1.fastestLap FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T2.year = 2009 AND T1.position = 1\t----- bird -----\tformula_1",
    "226": "SELECT AVG(T2.fastestLapSpeed) FROM races AS T1 INNER JOIN results AS T2 ON T1.raceId = T2.raceId WHERE T1.name = 'Spanish Grand Prix' AND T1.year = 2009\t----- bird -----\tformula_1",
    "227": "SELECT CAST(SUM(CASE WHEN T2.dob < '1985-01-01' AND T1.laps > 50 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.driverId) FROM results AS T1 JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE strftime('%Y', T1.time) BETWEEN '2000' AND '2005'\t----- bird -----\tformula_1",
    "228": "SELECT COUNT(*) FROM drivers WHERE nationality = 'French' AND driverId IN ( SELECT driverId FROM lapTimes WHERE milliseconds < 120000 )  GROUP BY drivers.driverId HAVING COUNT(*)  >=  1 ;\t----- bird -----\tformula_1",
    "229": "SELECT DISTINCT T1.code FROM drivers AS T1 WHERE T1.nationality = 'American'\t----- bird -----\tformula_1",
    "230": "SELECT COUNT(*) FROM (SELECT T1.driverId FROM drivers AS T1 INNER JOIN (SELECT driverId FROM drivers ORDER BY dob DESC LIMIT 3) AS T2 ON T1.driverId = T2.driverId WHERE T1.nationality = 'Dutch')\t----- bird -----\tformula_1",
    "231": "SELECT driverRef FROM drivers WHERE nationality = 'German' ORDER BY dob ASC LIMIT 1\t----- bird -----\tformula_1",
    "232": "SELECT T1.driverId, T1.code FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId WHERE strftime('%Y', T1.dob) = '1971' AND T2.fastestLapTime IS NOT NULL\t----- bird -----\tformula_1",
    "233": "SELECT COUNT(*) FROM results WHERE raceId BETWEEN 50 AND 100 AND statusId = 2 AND time IS NOT NULL\t----- bird -----\tformula_1",
    "234": "SELECT COUNT(*), location, lat, lng FROM circuits WHERE country = 'Austria'\t----- bird -----\tformula_1",
    "235": "SELECT T3.year , T3.name , T3.date , T3.time FROM drivers AS T1 INNER JOIN qualifying AS T2 ON T1.driverId = T2.driverId INNER JOIN races AS T3 ON T2.raceId = T3.raceId WHERE T1.dob = ( SELECT MAX(T1.dob) FROM drivers AS T1 INNER JOIN qualifying AS T2 ON T1.driverId = T2.driverId ) AND T3.date = ( SELECT MIN(T3.date) FROM races AS T3 INNER JOIN qualifying AS T2 ON T3.raceId = T2.raceId INNER JOIN drivers AS T1 ON T2.driverId = T1.driverId WHERE T1.dob = ( SELECT MAX(T1.dob) FROM drivers AS T1 INNER JOIN qualifying AS T2 ON T1.driverId = T2.driverId ) )\t----- bird -----\tformula_1",
    "236": "SELECT T1.forename, T1.surname FROM drivers AS T1 INNER JOIN ( SELECT driverId, AVG(duration) AS avg_duration FROM ( SELECT T2.driverId, T2.duration FROM races AS T3 INNER JOIN ( SELECT raceId, driverId, duration FROM pitStops ) AS T2 ON T3.raceId = T2.raceId WHERE T3.year BETWEEN 1980 AND 1985 ) GROUP BY driverId ORDER BY avg_duration ASC LIMIT 3 ) AS T4 ON T1.driverId = T4.driverId WHERE T1.nationality = 'German'\t----- bird -----\tformula_1",
    "237": "SELECT T1.driverId, T1.time FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T2.name = 'Canadian Grand Prix' AND T2.year = 2008 AND T1.position = 1\t----- bird -----\tformula_1",
    "238": "SELECT T3.constructorRef, T3.url FROM races AS T1 INNER JOIN results AS T2 ON T1.raceId = T2.raceId INNER JOIN constructors AS T3 ON T2.constructorId = T3.constructorId WHERE T1.year = 2009 AND T1.name = 'Singapore Grand Prix' ORDER BY T2.position, T2.laps DESC, T2.time LIMIT 1\t----- bird -----\tformula_1",
    "239": "SELECT T3.power_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T3.id = T2.power_id WHERE T1.superhero_name = '3-D Man'\t----- bird -----\tsuperhero",
    "240": "SELECT T1.points, T2.name, T2.nationality FROM constructorResults AS T1 INNER JOIN constructors AS T2 ON T1.constructorId = T2.constructorId INNER JOIN races AS T3 ON T1.raceId = T3.raceId WHERE T3.name = 'Monaco Grand Prix' AND T3.year BETWEEN 1980 AND 2010 ORDER BY T1.points DESC LIMIT 1\t----- bird -----\tformula_1",
    "241": "SELECT T3.forename, T3.surname FROM races AS T1 INNER JOIN qualifying AS T2 ON T1.raceid = T2.raceid INNER JOIN drivers AS T3 ON T2.driverid = T3.driverid WHERE T1.year = 2008 AND T1.circuitid = (SELECT circuitid FROM circuits WHERE name = 'Marina Bay Street Circuit') AND T2.position = 1 AND T2.q3 = (SELECT MIN(T2.q3) FROM races AS T1 INNER JOIN qualifying AS T2 ON T1.raceid = T2.raceid WHERE T1.year = 2008 AND T1.circuitid = (SELECT circuitid FROM circuits WHERE name = 'Marina Bay Street Circuit') AND T2.position = 1)\t----- bird -----\tformula_1",
    "242": "SELECT T1.forename, T1.surname, T1.nationality, T3.name FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId INNER JOIN races AS T3 ON T2.raceId = T3.raceId WHERE T1.driverId IN ( SELECT driverId FROM drivers ORDER BY T1.dob DESC LIMIT 1 ) LIMIT 1\t----- bird -----\tformula_1",
    "243": "SELECT COUNT(*) FROM results WHERE statusId = (SELECT statusId FROM status WHERE status = 'Accident') AND raceId = (SELECT raceId FROM races WHERE name = 'Canadian Grand Prix') GROUP BY driverId ORDER BY COUNT(*) DESC LIMIT 1\t----- bird -----\tformula_1",
    "244": "SELECT T1.forename, T1.surname FROM drivers AS T1 INNER JOIN lapTimes AS T2 ON T1.driverId = T2.driverId WHERE T2.time = ( SELECT MIN(T2.time) FROM drivers AS T1 INNER JOIN lapTimes AS T2 ON T1.driverId = T2.driverId ) LIMIT 20\t----- bird -----\tformula_1",
    "245": "SELECT T2.time FROM circuits AS T1 INNER JOIN lapTimes AS T2 ON T1.circuitId = T2.raceId WHERE T1.country = 'Italy' ORDER BY T2.milliseconds LIMIT 1\t----- bird -----\tformula_1",
    "246": "SELECT COUNT(T1.id) FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T3.id = T2.power_id WHERE T3.power_name = 'Super Strength' AND T1.height_cm > 200\t----- bird -----\tsuperhero",
    "247": "SELECT COUNT(*) FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id INNER JOIN colour AS T4 ON T1.eye_colour_id = T4.id WHERE T4.colour = 'Blue' AND T3.power_name = 'Agility'\t----- bird -----\tsuperhero",
    "248": "SELECT T2.superhero_name FROM hero_attribute AS T1 INNER JOIN superhero AS T2 ON T1.hero_id = T2.id INNER JOIN attribute AS T3 ON T1.attribute_id = T3.id WHERE T2.eye_colour_id = (SELECT id FROM colour WHERE colour = 'Blue') AND T2.hair_colour_id = (SELECT id FROM colour WHERE colour = 'Blond') AND T3.attribute_name = 'blue eyes' AND T2.hair_colour_id = (SELECT id FROM colour WHERE colour = 'Blond') AND T3.attribute_name = 'blond hair'\t----- bird -----\tsuperhero",
    "249": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T2.publisher_name = 'Marvel Comics' ORDER BY T1.height_cm DESC\t----- bird -----\tsuperhero",
    "250": "SELECT T1.id, T3.colour FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id INNER JOIN colour AS T3 ON T1.eye_colour_id = T3.id WHERE T2.publisher_name = 'Marvel Comics' GROUP BY T1.id ORDER BY COUNT(T1.id) DESC\t----- bird -----\tsuperhero",
    "251": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id INNER JOIN publisher AS T4 ON T4.id = T1.publisher_id WHERE T3.power_name = 'Super Strength' AND T4.publisher_name = 'Marvel Comics'\t----- bird -----\tsuperhero",
    "252": "SELECT T5.publisher_name FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id INNER JOIN attribute AS T3 ON T2.attribute_id = T3.id INNER JOIN publisher AS T5 ON T1.publisher_id = T5.id WHERE T3.attribute_name = 'Speed' ORDER BY T2.attribute_value LIMIT 1\t----- bird -----\tsuperhero",
    "253": "SELECT COUNT(T1.id) FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id INNER JOIN publisher AS T3 ON T1.publisher_id = T3.id WHERE T2.colour = 'Gold' AND T3.publisher_name = 'Marvel Comics'\t----- bird -----\tsuperhero",
    "254": "SELECT T3.superhero_name FROM hero_attribute AS T1 INNER JOIN attribute AS T2 ON T1.attribute_id = T2.id INNER JOIN superhero AS T3 ON T1.hero_id = T3.id WHERE T2.attribute_name = 'Intelligence' ORDER BY T1.attribute_value LIMIT 1\t----- bird -----\tsuperhero",
    "255": "SELECT T2.race FROM superhero AS T1 INNER JOIN race AS T2 ON T1.race_id = T2.id WHERE T1.superhero_name = 'Copycat'\t----- bird -----\tsuperhero",
    "256": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id INNER JOIN attribute AS T3 ON T2.attribute_id = T3.id WHERE T3.attribute_name = 'Durability' AND T2.attribute_value < 50\t----- bird -----\tsuperhero",
    "257": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T3.power_name = 'Death Touch'\t----- bird -----\tsuperhero",
    "258": "SELECT COUNT(T1.id) FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id INNER JOIN attribute AS T3 ON T2.attribute_id = T3.id WHERE T3.attribute_name = 'Strength' AND T2.attribute_value = 100 AND T1.gender_id = (SELECT id FROM gender WHERE gender = 'Female')\t----- bird -----\tsuperhero",
    "259": "SELECT CAST(SUM(CASE WHEN T1.alignment = 'Bad' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T2.id), SUM(CASE WHEN T1.alignment = 'Bad' AND T2.publisher_id = 2 THEN 1 ELSE 0 END) FROM alignment AS T1 INNER JOIN superhero AS T2 ON T1.id = T2.alignment_id INNER JOIN publisher AS T3 ON T2.publisher_id = T3.id WHERE T3.publisher_name = 'Marvel Comics'\t----- bird -----\tsuperhero",
    "260": "SELECT ( SELECT COUNT(T2.superhero_name) FROM publisher AS T1 INNER JOIN superhero AS T2 ON T1.id = T2.publisher_id WHERE T1.publisher_name = 'Marvel Comics' ) - ( SELECT COUNT(T2.superhero_name) FROM publisher AS T1 INNER JOIN superhero AS T2 ON T1.id = T2.publisher_id WHERE T1.publisher_name = 'DC Comics' ) AS result\t----- bird -----\tsuperhero",
    "261": "SELECT id FROM publisher WHERE publisher_name = 'Star Trek'\t----- bird -----\tsuperhero",
    "262": "SELECT COUNT(*) FROM superhero WHERE full_name IS NULL\t----- bird -----\tsuperhero",
    "263": "SELECT AVG(T2.weight_kg) FROM gender AS T1 INNER JOIN superhero AS T2 ON T1.id = T2.gender_id WHERE T1.gender = 'Female'\t----- bird -----\tsuperhero",
    "264": "SELECT T4.power_name FROM superhero AS T1 INNER JOIN gender AS T2 ON T1.gender_id = T2.id INNER JOIN hero_power AS T3 ON T1.id = T3.hero_id INNER JOIN superpower AS T4 ON T3.power_id = T4.id WHERE T2.gender = 'Male' LIMIT 5\t----- bird -----\tsuperhero",
    "265": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T2.colour = 'No Colour' AND T1.height_cm BETWEEN 170 AND 190\t----- bird -----\tsuperhero",
    "266": "SELECT T2.colour FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.hair_colour_id = T2.id INNER JOIN race AS T3 ON T1.race_id = T3.id WHERE T1.height_cm = 185 AND T3.race = 'human'\t----- bird -----\tsuperhero",
    "267": "SELECT CAST(SUM(CASE WHEN T3.publisher_name = 'Marvel Comics' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T3.publisher_name) FROM superhero AS T1 INNER JOIN publisher AS T3 ON T1.publisher_id = T3.id WHERE T1.height_cm BETWEEN 150 AND 180\t----- bird -----\tsuperhero",
    "268": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN gender AS T2 ON T1.gender_id = T2.id WHERE T2.gender = 'Male' AND T1.weight_kg > ( SELECT AVG(T1.weight_kg) * 0.79 FROM superhero AS T1 INNER JOIN gender AS T2 ON T1.gender_id = T2.id WHERE T2.gender = 'Male' )\t----- bird -----\tsuperhero",
    "269": "SELECT T2.power_name FROM hero_power AS T1 INNER JOIN superpower AS T2 ON T1.power_id = T2.id WHERE T1.hero_id = 1\t----- bird -----\tsuperhero",
    "270": "SELECT COUNT(T2.hero_id) FROM superpower AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.power_id WHERE T1.power_name = 'Stealth'\t----- bird -----\tsuperhero",
    "271": "SELECT T3.full_name FROM hero_attribute AS T1 INNER JOIN attribute AS T2 ON T1.attribute_id = T2.id INNER JOIN superhero AS T3 ON T1.hero_id = T3.id WHERE T2.attribute_name = 'strength' ORDER BY T1.attribute_value DESC LIMIT 1\t----- bird -----\tsuperhero",
    "272": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id INNER JOIN attribute AS T3 ON T2.attribute_id = T3.id INNER JOIN publisher AS T4 ON T1.publisher_id = T4.id WHERE T3.attribute_name = 'durability' AND T4.publisher_name = 'Dark Horse Comics' ORDER BY T2.attribute_value DESC LIMIT 1\t----- bird -----\tsuperhero",
    "273": "SELECT T3.colour, T4.colour, T5.colour FROM publisher AS T1 INNER JOIN superhero AS T2 ON T1.id = T2.publisher_id INNER JOIN colour AS T3 ON T3.id = T2.eye_colour_id INNER JOIN colour AS T4 ON T4.id = T2.hair_colour_id INNER JOIN colour AS T5 ON T5.id = T2.skin_colour_id INNER JOIN gender AS T6 ON T6.id = T2.gender_id WHERE T1.publisher_name = 'Dark Horse Comics' AND T6.gender = 'Female'\t----- bird -----\tsuperhero",
    "274": "SELECT T.publisher_name FROM (SELECT T1.superhero_name, T8.publisher_name FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id INNER JOIN colour AS T3 ON T1.hair_colour_id = T3.id INNER JOIN colour AS T4 ON T1.skin_colour_id = T4.id INNER JOIN publisher AS T8 ON T1.publisher_id = T8.id WHERE T2.id = T3.id AND T3.id = T4.id) AS T WHERE T.publisher_name IN (SELECT T8.publisher_name FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id INNER JOIN colour AS T3 ON T1.hair_colour_id = T3.id INNER JOIN colour AS T4 ON T1.skin_colour_id = T4.id INNER JOIN publisher AS T8 ON T1.publisher_id = T8.id WHERE T2.id = T3.id AND T3.id = T4.id) GROUP BY T.publisher_name HAVING COUNT(T.publisher_name) > 1\t----- bird -----\tsuperhero",
    "275": "SELECT CAST(SUM(CASE WHEN T3.colour = 'Blue' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T2.gender) FROM superhero AS T1 INNER JOIN gender AS T2 ON T1.gender_id = T2.id INNER JOIN skin_colour_id AS T3 ON T1.skin_colour_id = T3.id WHERE T2.gender = 'Female'\t----- bird -----\tsuperhero",
    "276": "SELECT COUNT(T2.power_id) FROM superhero AS T1 JOIN hero_power AS T2 ON T1.id = T2.hero_id WHERE T1.superhero_name = 'Amazo'\t----- bird -----\tsuperhero",
    "277": "SELECT T1.height_cm FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T2.colour = 'Amber'\t----- bird -----\tsuperhero",
    "278": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id INNER JOIN colour AS T3 ON T1.hair_colour_id = T3.id WHERE T2.colour = 'Black' AND T3.colour = 'Black'\t----- bird -----\tsuperhero",
    "279": "SELECT T2.superhero_name FROM alignment AS T1 INNER JOIN superhero AS T2 ON T1.id = T2.alignment_id WHERE T1.alignment = 'Neutral'\t----- bird -----\tsuperhero",
    "280": "SELECT COUNT(*) FROM hero_attribute WHERE attribute_value = ( SELECT MAX(T1.attribute_value) FROM hero_attribute AS T1 INNER JOIN attribute AS T2 ON T1.attribute_id = T2.id WHERE T2.attribute_name = 'Strength' ) AND attribute_id = ( SELECT id FROM attribute WHERE attribute_name = 'Strength' )\t----- bird -----\tsuperhero",
    "281": "SELECT CAST(SUM(IIF(T2.gender = 'Female', 1, 0)) AS REAL) * 100 / COUNT(T1.publisher_name) FROM publisher AS T1 INNER JOIN superhero AS T2 ON T1.id = T2.publisher_id WHERE T1.publisher_name = 'Marvel Comics'\t----- bird -----\tsuperhero",
    "282": "SELECT ( SELECT weight_kg FROM superhero WHERE full_name = 'Emil Blonsky' ) - ( SELECT weight_kg FROM superhero WHERE full_name = 'Charles Chandler' ) AS difference\t----- bird -----\tsuperhero",
    "283": "SELECT AVG(height_cm) FROM superhero WHERE height_cm IS NOT NULL\t----- bird -----\tsuperhero",
    "284": "SELECT T3.power_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T1.superhero_name = 'Abomination'\t----- bird -----\tsuperhero",
    "285": "SELECT T3.superhero_name FROM hero_attribute AS T1 INNER JOIN attribute AS T2 ON T1.attribute_id = T2.id INNER JOIN superhero AS T3 ON T1.hero_id = T3.id WHERE T2.attribute_name = 'Speed' ORDER BY T1.attribute_value DESC LIMIT 1\t----- bird -----\tsuperhero",
    "286": "SELECT T3.attribute_name, T2.attribute_value FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id INNER JOIN attribute AS T3 ON T3.id = T2.attribute_id WHERE T1.superhero_name = '3-D Man'\t----- bird -----\tsuperhero",
    "287": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id INNER JOIN colour AS T3 ON T1.hair_colour_id = T3.id WHERE T2.colour = 'Blue' AND T3.colour = 'Brown'\t----- bird -----\tsuperhero",
    "288": "SELECT T2.publisher_name FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T1.superhero_name IN ('Hawkman', 'Karate Kid', 'Speedy') GROUP BY T2.publisher_name\t----- bird -----\tsuperhero",
    "289": "SELECT CAST(SUM(CASE WHEN T2.colour = 'blue' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.id) FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T2.id = 7\t----- bird -----\tsuperhero",
    "290": "SELECT CAST(SUM(CASE WHEN T2.gender = 'Male' THEN 1 ELSE 0 END) AS REAL) / SUM(CASE WHEN T2.gender = 'Female' THEN 1 ELSE 0 END) FROM superhero AS T1 INNER JOIN gender AS T2 ON T1.gender_id = T2.id\t----- bird -----\tsuperhero",
    "291": "SELECT T2.colour FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T1.full_name = 'Karen Beecher-Duncan'\t----- bird -----\tsuperhero",
    "292": "SELECT (SELECT COUNT(*) FROM superhero WHERE eye_colour_id = 7 AND (weight_kg = 0 OR weight_kg IS NULL)) - (SELECT COUNT(*) FROM superhero WHERE eye_colour_id = 1 AND (weight_kg = 0 OR weight_kg IS NULL)) AS difference\t----- bird -----\tsuperhero",
    "293": "SELECT COUNT(*) FROM superhero WHERE alignment_id = (SELECT id FROM alignment WHERE alignment = 'Bad') AND skin_colour_id = (SELECT id FROM colour WHERE colour = 'Green')\t----- bird -----\tsuperhero",
    "294": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T3.power_name = 'Wind Control' ORDER BY T1.superhero_name ASC\t----- bird -----\tsuperhero",
    "295": "SELECT T3.gender FROM hero_power AS T1 JOIN superpower AS T2 ON T1.power_id = T2.id JOIN superhero AS T3 ON T1.hero_id = T3.id WHERE T2.power_name = 'Phoenix Force'\t----- bird -----\tsuperhero",
    "296": "SELECT ( SELECT COUNT(T2.id) FROM publisher AS T1 INNER JOIN superhero AS T2 ON T1.id = T2.publisher_id WHERE T1.publisher_name = 'DC Comics' ) - ( SELECT COUNT(T2.id) FROM publisher AS T1 INNER JOIN superhero AS T2 ON T1.id = T2.publisher_id WHERE T1.publisher_name = 'Marvel Comics' ) AS DIFFERENCE\t----- bird -----\tsuperhero",
    "297": "SELECT T1.DisplayName FROM users AS T1 WHERE T1.DisplayName IN ('Harlan', 'Jarrod Dixon') ORDER BY T1.Reputation DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "298": "SELECT DisplayName FROM users WHERE STRFTIME('%Y', CreationDate) = '2011'\t----- bird -----\tcodebase_community",
    "299": "SELECT COUNT(*) FROM users WHERE LastAccessDate > '2014-09-01'\t----- bird -----\tcodebase_community",
    "300": "SELECT T1.DisplayName FROM users AS T1 INNER JOIN posts AS T2 ON T1.Id = T2.OwnerUserId WHERE T2.Title = 'Eliciting priors from experts'\t----- bird -----\tcodebase_community",
    "301": "SELECT COUNT(T1.Id) FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.DisplayName = 'csgillespie'\t----- bird -----\tcodebase_community",
    "302": "SELECT T2.LastEditorDisplayName FROM posts AS T1 INNER JOIN users AS T2 ON T1.LastEditorUserId = T2.Id WHERE T1.Title = 'Examples for teaching: Correlation does not mean causation'\t----- bird -----\tcodebase_community",
    "303": "SELECT COUNT(T1.Id) FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.Age > 65 AND T1.Score >= 20\t----- bird -----\tcodebase_community",
    "304": "SELECT T1.Body FROM posts AS T1 INNER JOIN tags AS T2 ON T1.Id = T2.ExcerptPostId WHERE T2.TagName = 'bayesian'\t----- bird -----\tcodebase_community",
    "305": "SELECT AVG(T1.Score) FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.DisplayName = 'csgillespie'\t----- bird -----\tcodebase_community",
    "306": "SELECT CAST(SUM(CASE WHEN T2.Age > 65 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.Score) FROM (SELECT Score FROM posts WHERE Score > 5) AS T1 INNER JOIN (SELECT * FROM users WHERE Age > 65) AS T2 ON T1.OwnerUserId = T2.Id\t----- bird -----\tcodebase_community",
    "307": "SELECT T2.FavoriteCount FROM comments AS T1 INNER JOIN posts AS T2 ON T1.PostId = T2.Id WHERE T1.UserId = '3025' AND T1.CreationDate = '2014-04-23 20:29:39'\t----- bird -----\tcodebase_community",
    "308": "SELECT CASE WHEN T2.ClosedDate IS NULL THEN 'not well-finished' ELSE 'well-finished' END FROM comments AS T1 INNER JOIN posts AS T2 ON T1.PostId = T2.Id WHERE T1.UserId = 23853 AND T1.CreationDate = '2013-07-12 09:08:18.0'\t----- bird -----\tcodebase_community",
    "309": "SELECT COUNT(T1.Id) FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.DisplayName = 'Tiago Pasqualini'\t----- bird -----\tcodebase_community",
    "310": "SELECT T2.DisplayName FROM votes AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T1.Id = '6347'\t----- bird -----\tcodebase_community",
    "311": "SELECT CAST(COUNT(T1.Id) AS REAL) / COUNT(T2.Id) FROM posts AS T1 INNER JOIN votes AS T2 ON T1.Id = T2.PostId WHERE T1.OwnerUserId = 24 AND T2.UserId = 24\t----- bird -----\tcodebase_community",
    "312": "SELECT ViewCount FROM posts WHERE Title = 'Integration of Weka and/or RapidMiner into Informatica PowerCenter/Developer'\t----- bird -----\tcodebase_community",
    "313": "SELECT Text FROM comments WHERE Score = 17;\t----- bird -----\tcodebase_community",
    "314": "SELECT T2.DisplayName FROM comments AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T1.Text = 'thank you user93!'\t----- bird -----\tcodebase_community",
    "315": "SELECT T2.DisplayName, T2.Reputation FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T1.Title = 'Understanding what Dassault iSight is doing?'\t----- bird -----\tcodebase_community",
    "316": "SELECT T2.DisplayName FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T1.Title = 'Open source tools for visualizing multi-dimensional data'\t----- bird -----\tcodebase_community",
    "317": "SELECT T3.Text FROM posts AS T1 INNER JOIN postHistory AS T2 ON T1.Id = T2.PostId INNER JOIN comments AS T3 ON T3.PostId = T1.Id WHERE T1.Title = 'Why square the difference instead of taking the absolute value in standard deviation?' AND T2.Text IS NOT NULL\t----- bird -----\tcodebase_community",
    "318": "SELECT T1.DisplayName FROM users AS T1 INNER JOIN votes AS T2 ON T1.Id = T2.UserId INNER JOIN posts AS T3 ON T2.PostId = T3.Id WHERE T2.BountyAmount = 50 AND T3.Title LIKE '%variance%'\t----- bird -----\tcodebase_community",
    "319": "SELECT AVG(T1.ViewCount) ,  T1.Title ,  T2.Text FROM posts AS T1 INNER JOIN tags AS T3 ON T1.Id = T3.Id INNER JOIN posts AS T2 ON T1.Id = T2.Id WHERE T3.TagName = '<humor>' GROUP BY T1.Title ,  T2.Text\t----- bird -----\tcodebase_community",
    "320": "SELECT COUNT(DISTINCT UserId) FROM (SELECT UserId, COUNT(*) AS c FROM badges GROUP BY UserId) WHERE c > 5) as subquery;\t----- bird -----\tcodebase_community",
    "321": "SELECT T1.Id, T1.UserId FROM postHistory AS T1 INNER JOIN posts AS T2 ON T1.PostId = T2.Id WHERE T2.ViewCount >= 1000 GROUP BY T1.UserId HAVING COUNT(T1.Id) = 1\t----- bird -----\tcodebase_community",
    "322": "SELECT (CAST(SUM(IIF(STRFTIME('%Y', T2.Date) = '2010', 1, 0)) AS REAL) * 100 / COUNT(T2.Name) - CAST(SUM(IIF(STRFTIME('%Y', T2.Date) = '2011', 1, 0)) AS REAL) * 100 / COUNT(T2.Name)) AS per_diff FROM badges AS T1 INNER JOIN (SELECT * FROM badges WHERE Name = 'Student') AS T2 ON T1.Id = T2.Id WHERE T1.Name = 'Student'\t----- bird -----\tcodebase_community",
    "323": "SELECT CAST(SUM(T2.UpVotes) AS REAL) / COUNT(T1.Id) AS AvgUpVotes, CAST(SUM(T2.Age) AS REAL) / COUNT(T1.Id) AS AvgAge FROM (SELECT UserId, COUNT(UserId) AS PostCount FROM posts WHERE OwnerUserId IS NOT NULL GROUP BY UserId HAVING COUNT(UserId) > 10) AS T1 INNER JOIN (SELECT Id, UpVotes, Age FROM users) AS T2 ON T1.UserId = T2.Id\t----- bird -----\tcodebase_community",
    "324": "SELECT CAST(SUM(CASE WHEN strftime('%Y', T1.CreationDate) = '2010' THEN 1 ELSE 0 END) AS REAL) / SUM(CASE WHEN strftime('%Y', T1.CreationDate) = '2011' THEN 1 ELSE 0 END) FROM votes AS T1 \t----- bird -----\tcodebase_community",
    "325": "SELECT T1.Id FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.DisplayName = 'slashnick' AND T1.PostTypeId = 1 ORDER BY T1.AnswerCount DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "326": "SELECT MAX(SUM(ViewCount)) FROM posts WHERE OwnerUserId IN (SELECT Id FROM users WHERE DisplayName = 'Harvey Motulsky' OR DisplayName = 'Noah Snyder') GROUP BY OwnerUserId ORDER BY SUM(ViewCount) DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "327": "SELECT T3.Tags FROM users AS T1 INNER JOIN posts AS T2 ON T1.Id = T2.OwnerUserId INNER JOIN (SELECT * FROM posts WHERE CommentCount = 0) AS T3 ON T3.Id = T2.Id WHERE T1.DisplayName = 'Mark Meckes'\t----- bird -----\tcodebase_community",
    "328": "SELECT CAST(( SELECT COUNT(T3.Id) FROM ( SELECT T1.Id FROM ( SELECT T1.Id FROM posts AS T1 INNER JOIN postLinks AS T2 ON T1.Id = T2.PostId INNER JOIN tags AS T3 ON T3.Id = T2.RelatedPostId WHERE T3.TagName = 'r' ) AS T1 ) AS T3 ) AS REAL) * 100 / ( SELECT COUNT(T1.Id) FROM ( SELECT T1.Id FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.DisplayName = 'Community' ) AS T1 )\t----- bird -----\tcodebase_community",
    "329": "SELECT SUM(CASE WHEN T1.DisplayName = 'Mornington' THEN T1.ViewCount ELSE 0 END) - SUM(CASE WHEN T1.DisplayName = 'Amos' THEN T1.ViewCount ELSE 0 END) AS Diff FROM posts AS T1 WHERE T1.OwnerUserId IN (SELECT Id FROM users WHERE DisplayName = 'Mornington') UNION SELECT SUM(CASE WHEN T1.DisplayName = 'Amos' THEN T1.ViewCount ELSE 0 END) FROM posts AS T1 WHERE T1.OwnerUserId IN (SELECT Id FROM users WHERE DisplayName = 'Amos')\t----- bird -----\tcodebase_community",
    "330": "SELECT CAST(SUM(CASE WHEN strftime('%Y', T1.CreationDate) = '2010' AND T1.AnswerCount <= 2 THEN 1 ELSE 0 END) AS REAL) / 12 FROM posts AS T1 INNER JOIN postLinks AS T2 ON T1.Id = T2.PostId\t----- bird -----\tcodebase_community",
    "331": "SELECT T2.CreationDate FROM users AS T1 INNER JOIN votes AS T2 ON T1.Id = T2.UserId WHERE T1.DisplayName = 'chl' ORDER BY T2.CreationDate ASC LIMIT 1\t----- bird -----\tcodebase_community",
    "332": "SELECT T2.DisplayName FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T1.Name = 'Autobiographer' ORDER BY T1.Date ASC LIMIT 1\t----- bird -----\tcodebase_community",
    "333": "SELECT COUNT(DISTINCT T2.Id) FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.Location = 'United Kingdom' AND T1.FavoriteCount >= 4\t----- bird -----\tcodebase_community",
    "334": "SELECT Id, Title FROM posts WHERE OwnerUserId = (SELECT Id FROM users WHERE DisplayName = 'Harvey Motulsky') ORDER BY ViewCount DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "335": "SELECT T1.Id, T2.DisplayName FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE STRFTIME('%Y', T1.CreationDate) = '2010' ORDER BY T1.FavoriteCount DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "336": "SELECT CAST(SUM(CASE WHEN T2.Reputation > 1000 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.Id) FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE STRFTIME('%Y', T1.CreationDate) = '2011'\t----- bird -----\tcodebase_community",
    "337": "SELECT T2.ViewCount, T1.DisplayName FROM users AS T1 INNER JOIN posts AS T2 ON T1.Id = T2.OwnerUserId WHERE T2.Title = 'Computer Game Datasets' AND T2.LastEditorUserId = T1.Id\t----- bird -----\tcodebase_community",
    "338": "SELECT COUNT(T2.PostId) FROM comments AS T1 INNER JOIN posts AS T2 ON T1.PostId = T2.Id WHERE T2.Score = ( SELECT MAX(Score) FROM posts )\t----- bird -----\tcodebase_community",
    "339": "SELECT T2.Text, T2.UserDisplayName FROM (SELECT PostId = T1.Id FROM posts AS T1 WHERE T1.Title = 'Analysing wind data with R') AS T1 JOIN comments AS T2 ON T2.PostId = T1.PostId = T1.Id WHERE T2.UserDisplayName = 'Paul Hiemstra' ORDER BY T2.CreationDate DESC LIMIT 10\t----- bird -----\tcodebase_community",
    "340": "SELECT CAST(SUM(CASE WHEN T1.Score > 50 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.Id) FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.Reputation = ( SELECT MAX(Reputation) FROM users )\t----- bird -----\tcodebase_community",
    "341": "SELECT ExcerptPostId, WikiPostId FROM tags WHERE TagName = 'sample'\t----- bird -----\tcodebase_community",
    "342": "SELECT T2.Reputation, T2.UpVotes FROM comments AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T1.Text = 'fine, you win :)'\t----- bird -----\tcodebase_community",
    "343": "SELECT T2.Text FROM posts AS T1 INNER JOIN comments AS T2 ON T1.Id = T2.PostId WHERE T1.ViewCount BETWEEN 100 AND 150 ORDER BY T2.Score DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "344": "SELECT COUNT(T1.Id) FROM posts AS T1 INNER JOIN comments AS T2 ON T1.Id = T2.PostId WHERE T1.CommentCount = 1 AND T2.Score = 0\t----- bird -----\tcodebase_community",
    "345": "SELECT CAST(SUM(CASE WHEN T2.UpVotes = 0 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T2.UpVotes) FROM comments AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T1.Score BETWEEN 5 AND 10;\t----- bird -----\tcodebase_community",
    "346": "SELECT id FROM cards WHERE cardKingdomFoilId IS NOT NULL AND cardKingdomId IS NOT NULL\t----- bird -----\tcard_games",
    "347": "SELECT DISTINCT T1.name FROM cards AS T1 WHERE T1.borderColor = 'borderless' AND T1.cardKingdomFoilId IS NULL OR T1.cardKingdomId IS NULL\t----- bird -----\tcard_games",
    "348": "SELECT T1.name FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.rarity = 'mythic' AND T2.format = 'gladiator' AND T2.status = 'Banned'\t----- bird -----\tcard_games",
    "349": "SELECT T2.status FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.types = 'Artifact' AND T1.side IS NULL AND T2.format = 'vintage'\t----- bird -----\tcard_games",
    "350": "SELECT T1.id, T1.artist FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.power = '*' AND T2.format = 'commander' AND T2.status = 'Legal' UNION SELECT T1.id, T1.artist FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.power IS NULL AND T2.format = 'commander' AND T2.status = 'Legal'\t----- bird -----\tcard_games",
    "351": "SELECT T1.id FROM cards AS T1 INNER JOIN rulings AS T2 ON T2.uuid = T1.uuid WHERE T1.artist = 'Stephen Daniele' AND T1.hasContentWarning = 1 UNION SELECT T1.id FROM cards AS T1 INNER JOIN rulings AS T2 ON T2.uuid = T1.uuid WHERE T1.artist = 'Stephen Daniele' AND T1.hasContentWarning = 0;\t----- bird -----\tcard_games",
    "352": "SELECT T1.name, T1.artist, T1.isPromo FROM cards AS T1 INNER JOIN rulings AS T2 ON T1.uuid = T2.uuid GROUP BY T2.uuid ORDER BY COUNT(T2.uuid) DESC LIMIT 1\t----- bird -----\tcard_games",
    "353": "SELECT CAST(SUM(CASE WHEN T2.language = 'Chinese Simplified' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T2.id) FROM (SELECT * FROM foreign_data WHERE language = 'Chinese Simplified') AS T2\t----- bird -----\tcard_games",
    "354": "SELECT COUNT(*) FROM cards WHERE power = '*' ;\t----- bird -----\tcard_games",
    "355": "SELECT borderColor FROM cards WHERE name = 'Ancestor''s Chosen'\t----- bird -----\tcard_games",
    "356": "SELECT T2.text FROM cards AS T1 INNER JOIN rulings AS T2 ON T1.uuid = T2.uuid WHERE T1.name = 'Benalish Knight'\t----- bird -----\tcard_games",
    "357": "SELECT CAST(SUM(CASE WHEN borderColor = 'borderless' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(id) FROM cards\t----- bird -----\tcard_games",
    "358": "SELECT CAST(SUM(IIF(T2.language = 'French', 1, 0)) AS REAL) * 100 / COUNT(T1.id) FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.isStorySpotlight = 1\t----- bird -----\tcard_games",
    "359": "SELECT COUNT(*) FROM cards WHERE originalType = 'Summon - Angel' AND subtypes != 'Angel'\t----- bird -----\tcard_games",
    "360": "SELECT id FROM cards WHERE duelDeck = 'a'\t----- bird -----\tcard_games",
    "361": "SELECT COUNT(*) FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T2.status = 'Banned' AND T1.borderColor = 'white'\t----- bird -----\tcard_games",
    "362": "SELECT T1.uuid FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.colors = 'B' AND T1.originalType LIKE 'Artifact%'\t----- bird -----\tcard_games",
    "363": "SELECT manaCost FROM cards WHERE layout = 'normal' AND frameVersion = '2003' AND borderColor = 'black' AND availability = 'mtgo,paper'\t----- bird -----\tcard_games",
    "364": "SELECT CAST(SUM(CASE WHEN isStorySpotlight = 1 AND isTextless = 1 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) AS Percentage, id FROM cards WHERE isStorySpotlight = 1 AND isTextless = 1 GROUP BY id\t----- bird -----\tcard_games",
    "365": "SELECT COUNT(T1.id) FROM set_translations AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T2.block = 'Commander' AND T1.language = 'Portuguese (Brasil)'\t----- bird -----\tcard_games",
    "366": "SELECT DISTINCT T2.translation AS Subtypes , T3.translation AS Supertypes FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid INNER JOIN foreign_data AS T3 ON T1.uuid = T3.uuid WHERE T2.language = 'German' AND T3.language = 'German' AND T1.subtypes IS NOT NULL AND T1.supertypes IS NOT NULL\t----- bird -----\tcard_games",
    "367": "SELECT COUNT(*) FROM cards WHERE (power IS NULL OR power = '*') AND text LIKE '%triggered ability%'\t----- bird -----\tcard_games",
    "368": "SELECT COUNT(*) FROM legalities AS T1 INNER JOIN cards AS T2 ON T1.uuid = T2.uuid WHERE T1.format = 'premodern' AND T2.side IS NULL AND T2.text = 'This is a triggered mana ability.';\t----- bird -----\tcard_games",
    "369": "SELECT T2.name FROM foreign_data AS T2 INNER JOIN cards AS T1 ON T1.uuid = T2.uuid WHERE T1.layout = 'normal' AND T1.borderColor = 'black' AND T1.types = 'Creature' AND T2.language = 'French' AND T1.artist = 'Matthew D. Wilson'\t----- bird -----\tcard_games",
    "370": "SELECT T2.translation FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T1.baseSetSize = 180 AND T1.block = 'Ravnica'\t----- bird -----\tcard_games",
    "371": "SELECT CAST(SUM(CASE WHEN T1.hasContentWarning = 0 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.hasContentWarning) FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T2.format = 'commander' AND T2.status = 'legal'\t----- bird -----\tcard_games",
    "372": "SELECT CAST(SUM(IIF(T2.language = 'French', 1, 0)) AS REAL) * 100 / COUNT(T2.power) FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T2.power IS NULL OR T2.power = '*'\t----- bird -----\tcard_games",
    "373": "SELECT T.language FROM foreign_data AS T WHERE T.multiverseid = 149934;\t----- bird -----\tcard_games",
    "374": "SELECT CAST(SUM(CASE WHEN T1.isTextless = 1 AND T1.layout = 'normal' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.isTextless) FROM cards AS T1 WHERE T1.layout = 'normal'\t----- bird -----\tcard_games",
    "375": "SELECT T2.language FROM set_translations AS T2 INNER JOIN sets AS T1 ON T1.code = T2.setCode WHERE T1.mcmName = 'Archenemy' AND T1.code = 'ARC'\t----- bird -----\tcard_games",
    "376": "SELECT T2.language FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.name = 'A Pedra Fellwar'\t----- bird -----\tcard_games",
    "377": "SELECT T1.name FROM cards AS T1 INNER JOIN (SELECT MAX(convertedManaCost) AS maxCost FROM cards WHERE name IN ('Serra Angel', 'Shrine Keeper')) AS T2 WHERE T1.name IN ('Serra Angel', 'Shrine Keeper') AND T1.convertedManaCost = T2.maxCost;\t----- bird -----\tcard_games",
    "378": "SELECT T2.translation FROM cards AS T1 INNER JOIN set_translations AS T2 ON T1.setCode = T2.setCode WHERE T1.name = 'Ancestor''s Chosen' AND T2.language = 'Italian'\t----- bird -----\tcard_games",
    "379": "SELECT T2.name FROM foreign_data AS T1 INNER JOIN cards AS T2 ON T1.uuid = T2.uuid WHERE T2.name = 'Ancestor''s Chosen' AND T1.language = 'Korean'\t----- bird -----\tcard_games",
    "380": "SELECT COUNT(*) FROM cards AS T1 INNER JOIN set_translations AS T2 ON T1.setCode = T2.setCode WHERE T2.translation = 'Hauptset Zehnte Edition' AND T1.artist = 'Adam Rex'\t----- bird -----\tcard_games",
    "381": "SELECT T2.translation FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T1.name = 'Eighth Edition' AND T2.language = 'Chinese Simplified'\t----- bird -----\tcard_games",
    "382": "SELECT T1.mtgoCode IS NOT NULL AS appear_online FROM cards AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T1.name = 'Angel of Mercy'\t----- bird -----\tcard_games",
    "383": "SELECT COUNT(*) FROM (SELECT * FROM sets WHERE block = 'Ice Age') AS s JOIN (SELECT * FROM set_translations WHERE language = 'Italian') AS st ON s.code = st.setCode WHERE st.translation IS NOT NULL) AS result;\t----- bird -----\tcard_games",
    "384": "SELECT T1.name FROM cards AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T1.name = 'Adarkar Valkyrie' AND T2.isForeignOnly = 1\t----- bird -----\tcard_games",
    "385": "SELECT COUNT(T1.code) FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T2.language = 'Italian' AND T1.baseSetSize < 10 AND T2.translation IS NOT NULL\t----- bird -----\tcard_games",
    "386": "SELECT T1.artist FROM cards AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T2.name = 'Coldsnap' AND T1.artist IN ('Jeremy Jarvis', 'Aaron Miller', 'Chippy')\t----- bird -----\tcard_games",
    "387": "SELECT COUNT(*) FROM cards WHERE name = 'Coldsnap' AND convertedManaCost > 5 AND (power = '*' OR power IS NULL)\t----- bird -----\tcard_games",
    "388": "SELECT T2.flavorText FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T2.language = 'Italian' AND T1.name = 'Ancestor''s Chosen'\t----- bird -----\tcard_games",
    "389": "SELECT T2.text FROM cards AS T1 INNER JOIN rulings AS T2 ON T1.uuid = T2.uuid INNER JOIN set_translations AS T3 ON T3.setCode = T1.setCode WHERE T3.translation = 'Coldsnap' AND T2.language = 'Italian'\t----- bird -----\tcard_games",
    "390": "SELECT T2.translation FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T2.language = 'Italian' AND T1.name = 'Coldsnap' ORDER BY T1.convertedManaCost DESC LIMIT 1\t----- bird -----\tcard_games",
    "391": "SELECT CAST(SUM(IIF(T1.convertedManaCost = 7, 1, 0)) AS REAL) * 100 / COUNT(T1.convertedManaCost) FROM cards AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T2.name = 'Coldsnap'\t----- bird -----\tcard_games",
    "392": "SELECT CAST(SUM(CASE WHEN T1.cardKingdomFoilId IS NOT NULL AND T1.cardKingdomId IS NOT NULL THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.cardKingdomFoilId) FROM cards AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T2.name = 'Coldsnap'\t----- bird -----\tcard_games",
    "393": "SELECT T2.format , T1.uuid FROM legalities AS T1 INNER JOIN cards AS T2 ON T1.uuid = T2.uuid WHERE T1.status = 'Banned' GROUP BY T2.format ORDER BY COUNT(T1.status) DESC LIMIT 1\t----- bird -----\tcard_games",
    "394": "SELECT T1.name, T2.format FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.edhrecRank = 1 AND T2.status = 'banned'\t----- bird -----\tcard_games",
    "395": "SELECT DISTINCT T1.name, T3.format FROM cards AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code INNER JOIN legalities AS T3 ON T1.uuid = T3.uuid WHERE T2.name = 'Hour of Devastation' AND T3.status = 'Legal' ORDER BY T3.format;\t----- bird -----\tcard_games",
    "396": "SELECT DISTINCT T1.name FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T2.language = 'Korean' AND T1.name NOT LIKE '%Japanese%'\t----- bird -----\tcard_games",
    "397": "SELECT T1.frameVersion, T1.name, T2.status FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.artist = 'Allen Williams' AND T2.status = 'banned'\t----- bird -----\tcard_games",
    "398": "SELECT bond_type FROM bond GROUP BY bond_type ORDER BY COUNT(bond_type) DESC LIMIT 1\t----- bird -----\ttoxicology",
    "399": "SELECT AVG(T1.element = 'O') FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id INNER JOIN bond AS T3 ON T3.bond_id = T2.bond_id WHERE T3.bond_type = '-' AND T1.element = 'O'\t----- bird -----\ttoxicology",
    "400": "SELECT CAST(SUM(CASE WHEN T3.bond_type = '-' THEN 1 ELSE 0 END) AS REAL) / COUNT(T1.atom_id) FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id INNER JOIN bond AS T3 ON T3.bond_id = T2.bond_id INNER JOIN molecule AS T4 ON T4.molecule_id = T1.molecule_id WHERE T4.label = '+'\t----- bird -----\ttoxicology",
    "401": "SELECT T1.molecule_id FROM molecule AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.bond_type = '#' AND T1.label = '+'\t----- bird -----\ttoxicology",
    "402": "SELECT CAST(SUM(CASE WHEN T1.element = 'c' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.atom_id) FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id INNER JOIN bond AS T3 ON T2.bond_id = T3.bond_id WHERE T3.bond_type = '='\t----- bird -----\ttoxicology",
    "403": "SELECT T1.element FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id WHERE T2.bond_id = 'TR004_8_9' UNION SELECT T1.element FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id2 WHERE T2.bond_id = 'TR004_8_9'\t----- bird -----\ttoxicology",
    "404": "SELECT DISTINCT T1.element FROM atom AS T1 JOIN connected AS T2 ON T1.atom_id = T2.atom_id JOIN bond AS T3 ON T2.bond_id = T3.bond_id WHERE T3.bond_type = '='\t----- bird -----\ttoxicology",
    "405": "SELECT T2.label FROM atom AS T1 JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.element = 'H' GROUP BY T2.label ORDER BY COUNT(T2.label) DESC LIMIT 1\t----- bird -----\ttoxicology",
    "406": "SELECT T1.element FROM atom AS T1 JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = '-' GROUP BY T1.element ORDER BY COUNT(T1.element) ASC LIMIT 1\t----- bird -----\ttoxicology",
    "407": "SELECT T2.bond_type FROM connected AS T1 JOIN bond AS T2 ON T1.bond_id = T2.bond_id WHERE (T1.atom_id = 'TR004_8' AND T1.atom_id2 = 'TR004_20') OR (T1.atom_id = 'TR004_20' AND T1.atom_id2 = 'TR004_8')\t----- bird -----\ttoxicology",
    "408": "SELECT COUNT(DISTINCT CASE WHEN T1.element = 'i' THEN T1.atom_id ELSE NULL END) + COUNT(DISTINCT CASE WHEN T1.element = 's' THEN T1.atom_id ELSE NULL END) AS count FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id INNER JOIN bond AS T3 ON T2.bond_id = T3.bond_id WHERE T3.bond_type = '-'\t----- bird -----\ttoxicology",
    "409": "SELECT CAST(SUM(IIF(T1.element != 'f', 1, 0)) * 100 AS REAL) / COUNT(DISTINCT T1.atom_id) percentage FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = '+'\t----- bird -----\ttoxicology",
    "410": "SELECT CAST(SUM(CASE WHEN T3.bond_type = '#' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T3.bond_id) FROM molecule AS T1 INNER JOIN connected AS T2 ON T1.molecule_id = T2.molecule_id INNER JOIN bond AS T3 ON T2.bond_id = T3.bond_id WHERE T1.label = '+'\t----- bird -----\ttoxicology",
    "411": "SELECT DISTINCT T1.element FROM atom AS T1 WHERE T1.molecule_id = 'TR000' ORDER BY T1.element ASC LIMIT 3\t----- bird -----\ttoxicology",
    "412": "SELECT CAST(SUM(CASE WHEN T2.bond_type = '=' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T2.bond_id) FROM bond AS T2 WHERE T2.molecule_id = 'TR008'\t----- bird -----\ttoxicology",
    "413": "SELECT CAST(SUM(CASE WHEN T1.label = '+' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.molecule_id) AS percent FROM molecule AS T1\t----- bird -----\ttoxicology",
    "414": "SELECT CAST(SUM(IIF(T1.element = 'h', 1, 0)) AS REAL) * 100 / COUNT(T1.atom_id) FROM atom AS T1 WHERE T1.molecule_id = 'TR206'\t----- bird -----\ttoxicology",
    "415": "SELECT T1.element, T3.label FROM atom AS T1 JOIN connected AS T2 ON T1.atom_id = T2.atom_id JOIN molecule AS T3 ON T2.atom_id2 = T3.molecule_id WHERE T3.molecule_id = 'TR060'\t----- bird -----\ttoxicology",
    "416": "SELECT T2.bond_type, T2.bond_type AS majority_bond_type_in_molecule_TR010 FROM molecule AS T1 JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.molecule_id = 'TR010' AND T1.label = 'carcinogenic' GROUP BY T2.bond_type ORDER BY COUNT(T2.bond_id) DESC LIMIT 1\t----- bird -----\ttoxicology",
    "417": "SELECT T1.molecule_id FROM molecule AS T1 INNER JOIN connected AS T2 ON T1.molecule_id = T2.molecule_id INNER JOIN bond AS T3 ON T2.bond_id = T3.bond_id WHERE T3.bond_type = '-' AND T1.label = '-' ORDER BY T1.molecule_id LIMIT 3\t----- bird -----\ttoxicology",
    "418": "SELECT COUNT(*) FROM connected WHERE atom_id = 'TR009_12' OR atom_id2 = 'TR009_12' AND bond_id IN (SELECT bond_id FROM bond WHERE molecule_id = 'TR009')\t----- bird -----\ttoxicology",
    "419": "SELECT T1.bond_type ,  T3.atom_id ,  T4.atom_id2 FROM bond AS T1 INNER JOIN connected AS T2 ON T1.bond_id = T2.bond_id INNER JOIN atom AS T3 ON T2.atom_id = T3.atom_id INNER JOIN atom AS T4 ON T2.atom_id2 = T4.atom_id WHERE T1.bond_id = 'TR001_6_9'\t----- bird -----\ttoxicology",
    "420": "SELECT COUNT(*) FROM connected WHERE atom_id LIKE 'TR%_19' OR atom_id2 LIKE 'TR%_19'\t----- bird -----\ttoxicology",
    "421": "SELECT T1.element FROM atom AS T1 WHERE T1.molecule_id = 'TR004'\t----- bird -----\ttoxicology",
    "422": "SELECT DISTINCT T1.molecule_id FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE SUBSTR(T2.atom_id, 7, 2) BETWEEN '21' AND '25' AND T1.label = '+'\t----- bird -----\ttoxicology",
    "423": "SELECT T3.bond_id FROM atom AS T1 JOIN connected AS T2 ON T1.atom_id = T2.atom_id JOIN connected AS T4 ON T2.atom_id2 = T4.atom_id JOIN bond AS T3 ON T2.bond_id = T3.bond_id WHERE T1.element = 'p' AND T4.element = 'n' UNION SELECT T3.bond_id FROM atom AS T1 JOIN connected AS T2 ON T1.atom_id = T2.atom_id JOIN connected AS T4 ON T2.atom_id2 = T4.atom_id JOIN bond AS T3 ON T2.bond_id = T3.bond_id WHERE T1.element = 'n' AND T4.element = 'p'\t----- bird -----\ttoxicology",
    "424": "SELECT T1.label FROM molecule AS T1 JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.bond_type = ' =' GROUP BY T1.molecule_id ORDER BY COUNT(T2.bond_id) DESC LIMIT 1\t----- bird -----\ttoxicology",
    "425": "SELECT AVG(T2.bond_id) FROM atom AS T1 JOIN connected AS T2 ON T1.atom_id = T2.atom_id WHERE T1.element = 'I' GROUP BY T1.atom_id\t----- bird -----\ttoxicology",
    "426": "SELECT element FROM atom WHERE atom_id NOT IN (SELECT atom_id FROM connected) AND atom_id NOT IN (SELECT atom_id2 FROM connected)\t----- bird -----\ttoxicology",
    "427": "SELECT T3.atom_id, T3.atom_id2 FROM molecule AS T1 INNER JOIN connected AS T2 ON T1.molecule_id = T2.bond_id INNER JOIN bond AS T3 ON T2.bond_id = T3.bond_id WHERE T1.label = 'TR041' AND T3.bond_type = '#'\t----- bird -----\ttoxicology",
    "428": "SELECT T1.element FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id WHERE T2.bond_id = 'TR144_8_19' UNION SELECT T1.element FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id2 WHERE T2.bond_id = 'TR144_8_19'\t----- bird -----\ttoxicology",
    "429": "SELECT T1.element FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id INNER JOIN bond AS T3 ON T2.bond_id = T3.bond_id WHERE T3.bond_type = '#'\t----- bird -----\ttoxicology",
    "430": "SELECT CAST(SUM(CASE WHEN T1.label = '+' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T3.bond_id) FROM molecule AS T1 INNER JOIN connected AS T2 ON T1.molecule_id = T2.bond_id INNER JOIN bond AS T3 ON T3.bond_id = T2.bond_id WHERE T3.bond_type = '-'\t----- bird -----\ttoxicology",
    "431": "SELECT COUNT(*) FROM (SELECT DISTINCT molecule_id FROM atom WHERE element IN ('p', 'br') INTERSECT SELECT molecule_id FROM bond WHERE bond_type = '#') AS M JOIN atom A ON M.molecule_id = A.molecule_id JOIN connected C ON A.atom_id = C.atom_id JOIN bond B ON C.bond_id = B.bond_id WHERE A.element IN ('p', 'br') AND B.bond_type = '#'\t----- bird -----\ttoxicology",
    "432": "SELECT CAST(SUM(CASE WHEN T1.element = 'cl' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.atom_id) FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id2 INNER JOIN bond AS T3 ON T2.bond_id = T3.bond_id WHERE T3.bond_type = '-'\t----- bird -----\ttoxicology",
    "433": "SELECT T1.element FROM atom AS T1 JOIN connected AS T2 ON T1.atom_id = T2.atom_id WHERE T2.bond_id = 'TR001_10_11' UNION SELECT T1.element FROM atom AS T1 JOIN connected AS T2 ON T1.atom_id = T2.atom_id2 WHERE T2.bond_id = 'TR001_10_11'\t----- bird -----\ttoxicology",
    "434": "SELECT CAST(SUM(CASE WHEN T1.element = 'cl' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.atom_id) FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = '+'\t----- bird -----\ttoxicology",
    "435": "SELECT T1.element FROM atom AS T1 WHERE T1.atom_id LIKE 'mol%4' AND T1.molecule_id IN (SELECT T3.molecule_id FROM molecule AS T3 WHERE T3.label = '+')\t----- bird -----\ttoxicology",
    "436": "SELECT CAST(SUM(CASE WHEN T1.element = 'h' THEN 1 ELSE 0 END) AS REAL) / COUNT(T1.element) AS ratio ,  T3.label FROM atom AS T1 INNER JOIN molecule AS T3 ON T1.molecule_id = T3.molecule_id WHERE T1.molecule_id = 'TR006'\t----- bird -----\ttoxicology",
    "437": "SELECT T1.molecule_id FROM molecule AS T1 JOIN connected AS T2 ON T1.molecule_id = T2.atom_id JOIN atom AS T3 ON T2.atom_id2 = T3.atom_id WHERE T1.label = '-' GROUP BY T1.molecule_id HAVING COUNT(T1.molecule_id) > 5\t----- bird -----\ttoxicology",
    "438": "SELECT COUNT(*) FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE T1.AvgScrMath > 400 AND T2.Virtual = 'F'\t----- bird -----\tcalifornia_schools",
    "439": "SELECT CDSCode FROM frpm WHERE `Enrollment (K-12)` + `Enrollment (Ages 5-17)` > 500\t----- bird -----\tcalifornia_schools",
    "440": "SELECT MAX(T3.`Percent (%) Eligible Free (Ages 5-17)`) FROM (SELECT T1.cds, CAST(T1.NumGE1500 AS REAL) / T1.NumTstTakr AS ExcellenceRate FROM satscores AS T1 WHERE CAST(T1.NumGE1500 AS REAL) / T1.NumTstTakr > 0.3) AS T2 INNER JOIN frpm AS T3 ON T2.cds = T3.CDSCode\t----- bird -----\tcalifornia_schools",
    "441": "SELECT T2.CharterNum FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE T1.AvgScrWrite > 499 AND T2.CharterNum IS NOT NULL ORDER BY T1.AvgScrWrite DESC\t----- bird -----\tcalifornia_schools",
    "442": "SELECT T2.School, T2.Street, T2.City, T2.Zip, T2.State FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.`Enrollment (K-12)` - T1.`Enrollment (Ages 5-17)` > 30\t----- bird -----\tcalifornia_schools",
    "443": "SELECT T2.School FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode INNER JOIN frpm AS T3 ON T2.CDSCode = T3.CDSCode WHERE CAST(T3.`Free Meal Count (K-12)` AS REAL) / T3.`Enrollment (K-12)` > 0.1 AND T1.NumGE1500 >= 1500\t----- bird -----\tcalifornia_schools",
    "444": "SELECT T2.FundingType FROM (SELECT T1.CDSCode, AVG(T1.AvgScrMath) AS avgmath FROM satscores AS T1 WHERE T1.dname = 'Riverside' GROUP BY T1.CDSCode) AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.avgmath > 400\t----- bird -----\tcalifornia_schools",
    "445": "SELECT T3.School, T3.Street, T3.City, T3.State, T3.Zip FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode INNER JOIN (SELECT CDSCode, School, Street, City, State, Zip FROM schools WHERE County = 'Monterey') AS T3 ON T2.CDSCode = T3.CDSCode WHERE T1.`FRPM Count (Ages 5-17)` > 800 AND T2.GSserved LIKE '%12%'\t----- bird -----\tcalifornia_schools",
    "446": "SELECT T2.School, T2.AvgScrWrite, T2.Phone FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE T2.OpenDate > '1991-01-01' OR T2.ClosedDate < '2000-01-01'\t----- bird -----\tcalifornia_schools",
    "447": "SELECT T2.School, T2.DOCType FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.Enrollment - T1.`Enrollment (Ages 5-17)` > ( SELECT AVG(T1.Enrollment - T1.`Enrollment (Ages 5-17)`) FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.FundingType = 'Local' ) AND T2.FundingType = 'Local'\t----- bird -----\tcalifornia_schools",
    "448": "SELECT T2.`Free Meal Count (K-12)` / T2.`Enrollment (K-12)` FROM (SELECT T1.School, T2.`Enrollment (K-12)`, T2.`Free Meal Count (K-12)` FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode ORDER BY T2.`Enrollment (K-12)` DESC LIMIT 10 OFFSET 9) AS T1 INNER JOIN frpm AS T2 ON T1.School = T2.School ORDER BY T1.School ASC\t----- bird -----\tcalifornia_schools",
    "449": "SELECT T2.`Percent (%) Eligible FRPM (K-12)` FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.DOC = '66' ORDER BY T2.`FRPM Count (K-12)` DESC LIMIT 5 \t----- bird -----\tcalifornia_schools",
    "450": "SELECT T1.Street, T1.City, T1.Zip, T1.State FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE T2.cds = ( SELECT T2.cds FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds ORDER BY CAST(T2.NumGE1500 AS REAL) / T2.NumTstTakr LIMIT 1 )\t----- bird -----\tcalifornia_schools",
    "451": "SELECT T2.AdmFName1, T2.AdmLName1, T2.AdmFName2, T2.AdmLName2, T2.AdmFName3, T2.AdmLName3 FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE T1.NumGE1500 = ( SELECT MAX(T1.NumGE1500) FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode )\t----- bird -----\tcalifornia_schools",
    "452": "SELECT AVG(T2.NumTstTakr) FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE T1.OpenDate BETWEEN '1980-01-01' AND '1980-12-31' AND T1.County = 'FRESNO'\t----- bird -----\tcalifornia_schools",
    "453": "SELECT T3.Phone FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode INNER JOIN frpm AS T3 ON T1.cds = T3.CDSCode WHERE T2.District = 'Fresno Unified' ORDER BY T1.AvgScrRead ASC LIMIT 1\t----- bird -----\tcalifornia_schools",
    "454": "SELECT T2.School FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE T2.Virtual = 'F' AND T1.AvgScrRead IN (SELECT T1.AvgScrRead FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE T2.Virtual = 'F' GROUP BY T2.County ORDER BY T1.AvgScrRead DESC LIMIT 5) ORDER BY T2.County, T1.AvgScrRead DESC LIMIT 5\t----- bird -----\tcalifornia_schools",
    "455": "SELECT T2.AvgScrWrite, T1.School FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE T1.AdmFName1 = 'Ricci' AND T1.AdmLName1 = 'Ulrich' OR T1.AdmFName2 = 'Ricci' AND T1.AdmLName2 = 'Ulrich' OR T1.AdmFName3 = 'Ricci' AND T1.AdmLName3 = 'Ulrich'\t----- bird -----\tcalifornia_schools",
    "456": "SELECT T1.School FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.DOC = '31' AND T2.`Enrollment (K-12)` IS NOT NULL ORDER BY T2.`Enrollment (K-12)` DESC LIMIT 1\t----- bird -----\tcalifornia_schools",
    "457": "SELECT CAST(COUNT(T1.CDSCode) AS REAL) / 12 FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.OpenDate LIKE '1980%' AND T2.`County Name` = 'Alameda' AND T2.`District Type` = 'Elementary School District'\t----- bird -----\tcalifornia_schools",
    "458": "SELECT CAST(SUM(CASE WHEN T1.DOC = 54 THEN 1 ELSE 0 END) AS REAL) / SUM(CASE WHEN T1.DOC = 52 THEN 1 ELSE 0 END) FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.County = 'Orange' AND T1.District = 'Merged'\t----- bird -----\tcalifornia_schools",
    "459": "SELECT T2.Street FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE T1.AvgScrMath IS NOT NULL ORDER BY T1.AvgScrMath DESC LIMIT 6,1\t----- bird -----\tcalifornia_schools",
    "460": "SELECT SUM(CASE WHEN T1.PercentEligibleFreeK12 < 0.18 THEN 1 ELSE 0 END) FROM (SELECT T1.CDSCode, T1.PercentEligibleFreeK12, T2.School, T2.County, T2.District, T2.StatusType FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.County = 'Los Angeles' AND T1.PercentEligibleFreeK12 < 0.18 AND T2.Charter = 0) AS T1\t----- bird -----\tcalifornia_schools",
    "461": "SELECT T1.`Enrollment (Ages 5-17)` FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.EdOpsCode = 'SSS' AND T2.City = 'FREMONT' AND T1.`Academic Year` = '2014-15' AND T2.School = 'STATE SPECIAL SCHOOL'\t----- bird -----\tcalifornia_schools",
    "462": "SELECT T1.CDSCode, CAST(T1.`FRPM Count (Ages 5-17)` AS REAL) * 100 / T1.`Enrollment (Ages 5-17)` FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.County = 'Los Angeles' AND T1.`Low Grade` = 'KG' AND T1.`High Grade` = '09'\t----- bird -----\tcalifornia_schools",
    "463": "SELECT T1.County ,  COUNT(T1.County) AS num FROM (SELECT County FROM schools WHERE Virtual = 'F') AS T1 WHERE T1.County = 'San Diego' OR T1.County = 'Santa Barbara' GROUP BY T1.County ORDER BY num DESC LIMIT 1\t----- bird -----\tcalifornia_schools",
    "464": "SELECT GSoffered FROM schools WHERE ABS(Longitude) = (SELECT MAX(ABS(Longitude)) FROM schools)\t----- bird -----\tcalifornia_schools",
    "465": "SELECT T2.City , COUNT(T2.City) FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.`NSLP Provision Status` = 'Multiple Provision Types' AND T2.Magnet = 1 AND T1.`Low Grade` = 'KG' AND T1.`High Grade` = '8' GROUP BY T2.City\t----- bird -----\tcalifornia_schools",
    "466": "SELECT T2.`Free Meal Count (K-12)` / T2.`Enrollment (K-12)` * 100 , T2.`District Code` FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.AdmFName1 = 'Alusine'\t----- bird -----\tcalifornia_schools",
    "467": "SELECT T2.AdmEmail1, T2.AdmEmail2, T2.AdmEmail3 FROM (SELECT CDSCode FROM schools WHERE County = 'San Bernardino' AND City = 'San Bernardino City Unified' AND OpenDate BETWEEN '2009-01-01' AND '2010-12-31' AND (SOC = '62' OR DOC = '54')) AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.SOC = '62' OR T2.DOC = '54'\t----- bird -----\tcalifornia_schools",
    "468": "SELECT COUNT(T1.account_id) FROM account AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T2.A3 = 'East Bohemia' AND T1.frequency = 'POPLATEK PO OBRATU'\t----- bird -----\tfinancial",
    "469": "SELECT COUNT(T1.district_id) FROM district AS T1 INNER JOIN client AS T2 ON T1.district_id = T2.district_id WHERE T2.gender = 'F' AND T1.A11 BETWEEN 6000 AND 10000\t----- bird -----\tfinancial",
    "470": "SELECT COUNT(T1.client_id) FROM client AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T2.A3 = 'North Bohemia' AND T1.gender = 'M' AND T2.A11 > 8000\t----- bird -----\tfinancial",
    "471": "SELECT T2.account_id FROM client AS T1 INNER JOIN account AS T2 ON T1.district_id = T2.district_id WHERE T1.gender = 'F' AND T1.A11 = ( SELECT MIN(T1.A11) FROM client AS T1 INNER JOIN account AS T2 ON T1.district_id = T2.district_id WHERE T1.gender = 'F' ) AND ( SELECT MAX(T1.A11) FROM client AS T1 INNER JOIN account AS T2 ON T1.district_id = T2.district_id WHERE T1.gender = 'F' ) - ( SELECT MIN(T1.A11) FROM client AS T1 INNER JOIN account AS T2 ON T1.district_id = T2.district_id WHERE T1.gender = 'F' ) AS gap ORDER BY T1.birth_date LIMIT 1\t----- bird -----\tfinancial",
    "472": "SELECT T2.account_id FROM (SELECT T1.account_id, T1.A11 FROM district AS T1 WHERE T1.A11 = ( SELECT MAX(T1.A11) FROM district AS T1 INNER JOIN account AS T2 ON T1.district_id = T2.district_id INNER JOIN client AS T3 ON T2.account_id = T3.client_id GROUP BY T2.account_id, T3.birth_date ORDER BY T3.birth_date DESC LIMIT 1 ) ) AS T2 INNER JOIN account AS T3 ON T2.account_id = T3.account_id WHERE T2.A11 = ( SELECT MAX(T1.A11) FROM district AS T1 INNER JOIN account AS T2 ON T1.district_id = T2.district_id INNER JOIN client AS T3 ON T2.account_id = T3.client_id GROUP BY T2.account_id, T3.birth_date ORDER BY T3.birth_date DESC LIMIT 1 ) GROUP BY T2.account_id ORDER BY MIN(T3.date) LIMIT 1\t----- bird -----\tfinancial",
    "473": "SELECT T1.account_id FROM loan AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id WHERE T2.frequency = 'POPLATEK TYDNE' AND T1.date LIKE '1997%' AND T1.status = 'APPROVED' ORDER BY T1.amount ASC LIMIT 1\t----- bird -----\tfinancial",
    "474": "SELECT T1.account_id FROM loan AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id WHERE T1.duration > 12 AND T2.date LIKE '1993%' ORDER BY T1.amount DESC LIMIT 1\t----- bird -----\tfinancial",
    "475": "SELECT COUNT(T1.client_id) FROM client AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T2.A2 = 'Sokolov' AND T1.gender = 'F' AND T1.birth_date < '1950-01-01'\t----- bird -----\tfinancial",
    "476": "SELECT T2.A2 FROM client AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T1.gender = 'F' AND T1.birth_date = '1976-01-29'\t----- bird -----\tfinancial",
    "477": "SELECT CAST(SUM(IIF(T2.gender = 'M', 1, 0)) AS REAL) * 100 / COUNT(T2.gender) FROM district AS T1 INNER JOIN client AS T2 ON T1.district_id = T2.district_id WHERE T1.A3 = 'South Bohemia' AND T1.A4 = (SELECT MAX(T1.A4) FROM district AS T1 INNER JOIN client AS T2 ON T1.district_id = T2.district_id WHERE T1.A3 = 'South Bohemia')\t----- bird -----\tfinancial",
    "478": "SELECT ((SELECT T.balance FROM (SELECT T2.balance, T1.date FROM trans AS T1 INNER JOIN (SELECT account_id FROM loan WHERE date = '1993-07-05' AND status = 'approved' ORDER BY date ASC LIMIT 1) AS T3 ON T1.account_id = T3.account_id WHERE T1.date = '1998-12-27') AS T WHERE T.date = '1998-12-27') - (SELECT T.balance FROM (SELECT T2.balance, T1.date FROM trans AS T1 INNER JOIN (SELECT account_id FROM loan WHERE date = '1993-07-05' AND status = 'approved' ORDER BY date ASC LIMIT 1) AS T3 ON T1.account_id = T3.account_id WHERE T1.date = '1993-03-22') AS T WHERE T.date = '1993-03-22')) * 100 / (SELECT T.balance FROM (SELECT T2.balance, T1.date FROM trans AS T1 INNER JOIN (SELECT account_id FROM loan WHERE date = '1993-07-05' AND status = 'approved' ORDER BY date ASC LIMIT 1) AS T3 ON T1.account_id = T3.account_id WHERE T1.date = '1993-03-22') AS T WHERE T.date = '1993-03-22')\t----- bird -----\tfinancial",
    "479": "SELECT CAST(SUM(IIF(T1.status = 'A', T1.amount, 0)) AS REAL) * 100 / SUM(T1.amount) FROM loan AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id WHERE T2.frequency = 'MONTHLY'\t----- bird -----\tfinancial",
    "480": "SELECT CAST(SUM(CASE WHEN T1.amount < 100000 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.amount) FROM loan AS T1 WHERE T1.status = 'C'\t----- bird -----\tfinancial",
    "481": "SELECT T1.A2, ((T1.A13 - T1.A12) * 100) / T1.A12 FROM district AS T1 INNER JOIN client AS T2 ON T1.district_id = T2.district_id INNER JOIN account AS T3 ON T3.district_id = T2.district_id INNER JOIN loan AS T4 ON T4.account_id = T3.account_id WHERE T4.status = 'D'\t----- bird -----\tfinancial",
    "482": "SELECT T2.A2 FROM client AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T1.gender = 'F' GROUP BY T2.A2 ORDER BY COUNT(T1.client_id) DESC LIMIT 9\t----- bird -----\tfinancial",
    "483": "SELECT COUNT(*) FROM loan AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id WHERE T1.amount >= 250000 AND T1.date BETWEEN '1995-01-01' AND '1997-12-31' AND T2.frequency = 'POPLATEK MESICNE'\t----- bird -----\tfinancial",
    "484": "SELECT COUNT(*) FROM account WHERE account_id IN (SELECT account_id FROM disp WHERE disp_id IN (SELECT disp_id FROM client WHERE district_id = 1)) AND frequency = 'C'\t----- bird -----\tfinancial",
    "485": "SELECT COUNT(T1.client_id) FROM client AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T1.gender = 'M' AND T2.A15 = (SELECT A15 FROM district ORDER BY A15 DESC LIMIT 1, 1)\t----- bird -----\tfinancial",
    "486": "SELECT T2.A2 FROM account AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id INNER JOIN trans AS T3 ON T1.account_id = T3.account_id WHERE T3.date LIKE '1996-01%' AND T3.type = 'VYDAJ' ORDER BY T3.amount DESC LIMIT 10\t----- bird -----\tfinancial",
    "487": "SELECT COUNT(*) FROM account WHERE district_id = 1 AND frequency = 'C' OR frequency = 'D'\t----- bird -----\tfinancial",
    "488": "SELECT COUNT(T1.client_id) FROM client AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T1.gender = 'M' AND T2.A15 = (SELECT MAX(T2.A15) FROM district AS T2 INNER JOIN client AS T1 ON T1.district_id = T2.district_id WHERE T1.gender = 'M' GROUP BY T2.district_id ORDER BY T2.A15 DESC LIMIT 1 OFFSET 1) GROUP BY T2.district_id\t----- bird -----\tfinancial",
    "489": "SELECT T2.client_id FROM trans AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id WHERE T1.date LIKE '1998%' AND T1.amount < ( SELECT AVG(amount) FROM trans WHERE operation = 'VYBER KARTOU' ) AND T1.type = 'VYBER KARTOU' GROUP BY T2.client_id\t----- bird -----\tfinancial",
    "490": "SELECT T1.type FROM disp AS T1 INNER JOIN district AS T2 ON T1.account_id = T2.district_id WHERE T2.A11 > 8000 AND T2.A11 <= 9000 AND T1.type != 'OWNER' GROUP BY T1.type\t----- bird -----\tfinancial",
    "491": "SELECT CAST(SUM(T1.A15) AS REAL) / COUNT(T1.A3) FROM district AS T1 INNER JOIN account AS T2 ON T1.district_id = T2.district_id WHERE T1.A15 > 4000 AND STRFTIME('%Y', T2.date) >= '1997'\t----- bird -----\tfinancial",
    "492": "SELECT T1.trans_id FROM trans AS T1 INNER JOIN disp AS T2 ON T1.account_id = T2.account_id INNER JOIN client AS T3 ON T3.client_id = T2.client_id WHERE T3.client_id = 3356 AND T1.operation = 'VYBER'\t----- bird -----\tfinancial",
    "493": "SELECT CAST(SUM(IIF(T1.gender = 'F', 1, 0)) AS REAL) * 100 / COUNT(T1.gender) FROM client AS T1 INNER JOIN account AS T2 ON T1.client_id = T2.account_id INNER JOIN district AS T3 ON T1.district_id = T3.district_id WHERE T3.A11 > 10000\t----- bird -----\tfinancial",
    "494": "SELECT CAST((SUM(CASE WHEN strftime('%Y', T2.date) = '1997' THEN T2.amount ELSE 0 END) - SUM(CASE WHEN strftime('%Y', T2.date) = '1996' THEN T2.amount ELSE 0 END)) AS REAL) * 100 / SUM(CASE WHEN strftime('%Y', T2.date) = '1996' THEN T2.amount ELSE 0 END) FROM client AS T1 INNER JOIN loan AS T2 ON T1.client_id = T2.account_id WHERE T1.gender = 'M'\t----- bird -----\tfinancial",
    "495": "SELECT T1.k_symbol FROM `order` AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id WHERE T2.account_id = 3 AND T1.amount = 3539\t----- bird -----\tfinancial",
    "496": "SELECT CAST(SUM(IIF(T2.gender = 'M', 1, 0)) AS REAL) * 100 / COUNT(T2.gender) FROM account AS T1 INNER JOIN client AS T2 ON T1.district_id = T2.district_id WHERE T1.frequency = 'POPLATEK TYDNE'\t----- bird -----\tfinancial",
    "497": "SELECT T2.account_id FROM client AS T1 INNER JOIN account AS T2 ON T1.district_id = T2.district_id INNER JOIN district AS T3 ON T1.district_id = T3.district_id WHERE T1.gender = 'F' AND T1.birth_date = (SELECT MIN(T.birth_date) FROM client AS T WHERE T.gender = 'F') AND T3.A11 = (SELECT MIN(T4.A11) FROM client AS T5 INNER JOIN district AS T4 ON T5.district_id = T4.district_id WHERE T5.gender = 'F') GROUP BY T2.account_id\t----- bird -----\tfinancial",
    "498": "SELECT AVG(T1.amount) FROM loan AS T1 WHERE T1.status = 'C' OR T1.status = 'D' AND T1.duration IN (SELECT T2.duration FROM loan AS T2 WHERE T2.type = 'POPLATEK PO OBRATU')\t----- bird -----\tfinancial",
    "499": "SELECT T4.client_id, (strftime('%Y', 'now') - strftime('%Y', T4.birth_date)) FROM card AS T1 INNER JOIN disp AS T2 ON T1.disp_id = T2.disp_id INNER JOIN account AS T3 ON T2.account_id = T3.account_id INNER JOIN client AS T4 ON T2.client_id = T4.client_id WHERE T1.type = 'gold' AND T2.type = 'OWNER'\t----- bird -----\tfinancial"
}