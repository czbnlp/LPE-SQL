{
    "0": "SELECT CAST(SUM(CASE WHEN Currency = 'EUR' THEN 1 ELSE 0 END) AS REAL) / SUM(CASE WHEN Currency = 'CZK' THEN 1 ELSE 0 END) FROM customers\t----- bird -----\tdebit_card_specializing",
    "1": "SELECT T1.CustomerID FROM customers AS T1 JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE SUBSTR(T2.Date, 1, 4) BETWEEN '201201' AND '201212' AND T1.Segment = 'LAM' ORDER BY T2.Consumption ASC LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "2": "SELECT AVG(T1.Consumption) / 12 FROM yearmonth AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Segment = 'SME' AND strftime('%Y', T1.Date) = '2013'\t----- bird -----\tdebit_card_specializing",
    "3": "SELECT (SELECT SUM(Consumption) FROM yearmonth WHERE substr(Date,1,4) BETWEEN '201201' AND '201212' AND CustomerID IN(SELECT CustomerID FROM customers WHERE Currency = 'CZK')) - (SELECT SUM(Consumption) FROM yearmonth WHERE substr(Date,1,4) BETWEEN '201201' AND '201212' AND CustomerID IN(SELECT CustomerID FROM customers WHERE Currency = 'EUR'))\t----- bird -----\tdebit_card_specializing",
    "4": "SELECT strftime('%Y', Date) AS Year FROM yearmonth WHERE Currency = 'CZK' GROUP BY Year ORDER BY SUM(Consumption) DESC LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "5": "SELECT Date FROM yearmonth WHERE CustomerID IN (SELECT CustomerID FROM customers WHERE Segment = 'SME') AND Date BETWEEN '201301' AND '201312' GROUP BY Date ORDER BY SUM(Consumption) DESC LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "6": "SELECT\n    (SELECT AVG(T1.Consumption) FROM\n        (SELECT AVG(T1.Consumption) AS Consumption, T1.CustomerID FROM\n            (SELECT T1.CustomerID, T2.Date, T2.Consumption FROM customers AS T1 JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE strftime('%Y', T2.Date) = '2013' AND T1.Currency = 'CZK' AND T1.Segment = 'SME') AS T1\n        GROUP BY T1.CustomerID\n        ORDER BY AVG(T1.Consumption) ASC\n        LIMIT 1) AS T1\n    ) - (SELECT AVG(T1.Consumption) FROM\n        (SELECT AVG(T1.Consumption) AS Consumption, T1.CustomerID FROM\n            (SELECT T1.CustomerID, T2.Date, T2.Consumption FROM customers AS T1 JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE strftime('%Y', T2.Date) = '2013' AND T1.Currency = 'CZK' AND T1.Segment = 'LAM') AS T1\n        GROUP BY T1.CustomerID\n        ORDER BY AVG(T1.Consumption) ASC\n        LIMIT 1) AS T1\n    ) AS Diff1,\n    (SELECT AVG(T1.Consumption) FROM\n        (SELECT AVG(T1.Consumption) AS Consumption, T1.CustomerID FROM\n            (SELECT T1.CustomerID, T2.Date, T2.Consumption FROM customers AS T1 JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE strftime('%Y', T2.Date) = '2013' AND T1.Currency = 'CZK' AND T1.Segment = 'LAM') AS T1\n        GROUP BY T1.CustomerID\n        ORDER BY AVG(T1.Consumption) ASC\n        LIMIT 1) AS T1\n    ) - (SELECT AVG(T1.Consumption) FROM\n        (SELECT AVG(T1.Consumption) AS Consumption, T1.CustomerID FROM\n            (SELECT T1.CustomerID, T2.Date, T2.Consumption FROM customers AS T1 JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE strftime('%Y', T2.Date) = '2013' AND T1.Currency = 'CZK' AND T1.Segment = 'KAM') AS T1\n        GROUP BY T1.CustomerID\n        ORDER BY AVG(T1.Consumption) ASC\n        LIMIT 1) AS T1\n    ) AS Diff2,\n    (SELECT AVG(T1.Consumption) FROM\n        (SELECT AVG(T1.Consumption) AS Consumption, T1.CustomerID FROM\n            (SELECT T1.CustomerID, T2.Date, T2.Consumption FROM customers AS T1 JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE strftime('%Y', T2.Date) = '2013' AND T1.Currency = 'CZK' AND T1.Segment = 'KAM') AS T1\n        GROUP BY T1.CustomerID\n        ORDER BY AVG(T1.Consumption) ASC\n        LIMIT 1) AS T1\n    ) - (SELECT AVG(T1.Consumption) FROM\n        (SELECT AVG(T1.Consumption) AS Consumption, T1.CustomerID FROM\n            (SELECT T1.CustomerID, T2.Date, T2.Consumption FROM customers AS T1 JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE strftime('%Y', T2.Date) = '2013' AND T1.Currency = 'CZK' AND T1.Segment = 'SME') AS T1\n        GROUP BY T1.CustomerID\n        ORDER BY AVG(T1.Consumption) ASC\n        LIMIT 1) AS T1\n    ) AS Diff3\nFROM\n    (SELECT 1 AS \"x\") AS T1\nLIMIT 1\t----- bird -----\tdebit_card_specializing",
    "7": "SELECT T1.Segment ,  (CAST(SUM(CASE WHEN T2.Date LIKE '2013%' THEN T2.Consumption ELSE 0 END) - SUM(CASE WHEN T2.Date LIKE '2012%' THEN T2.Consumption ELSE 0 END) AS REAL) / SUM(CASE WHEN T2.Date LIKE '2013%' THEN T2.Consumption ELSE 0 END)) * 100 AS PercentageIncrease FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Currency = 'EUR' GROUP BY T1.Segment ORDER BY PercentageIncrease DESC LIMIT 1 UNION ALL SELECT T1.Segment ,  (CAST(SUM(CASE WHEN T2.Date LIKE '2013%' THEN T2.Consumption ELSE 0 END) - SUM(CASE WHEN T2.Date LIKE '2012%' THEN T2.Consumption ELSE 0 END) AS REAL) / SUM(CASE WHEN T2.Date LIKE '2013%' THEN T2.Consumption ELSE 0 END)) * 100 AS PercentageIncrease FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Currency = 'EUR' GROUP BY T1.Segment ORDER BY PercentageIncrease ASC LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "8": "SELECT SUM(Consumption) FROM yearmonth WHERE CustomerID = 6 AND Date BETWEEN '201308' AND '201311'\t----- bird -----\tdebit_card_specializing",
    "9": "SELECT (SELECT COUNT(*) FROM gasstations WHERE Country = 'CZE' AND Segment = 'Discount') - (SELECT COUNT(*) FROM gasstations WHERE Country = 'SVK' AND Segment = 'Discount') AS Difference_In_Discount_Stations\t----- bird -----\tdebit_card_specializing",
    "10": "SELECT (SELECT COUNT(T1.CustomerID) FROM customers AS T1 WHERE T1.Segment = 'SME' AND T1.Currency = 'CZK') - (SELECT COUNT(T1.CustomerID) FROM customers AS T1 WHERE T1.Segment = 'SME' AND T1.Currency = 'EUR') AS difference;\t----- bird -----\tdebit_card_specializing",
    "11": "SELECT CAST(SUM(IIF(T1.Consumption > 46.73, 1, 0)) AS REAL) * 100 / COUNT(T1.CustomerID) FROM yearmonth AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Segment = 'LAM'\t----- bird -----\tdebit_card_specializing",
    "12": "SELECT CAST(SUM(CASE WHEN T1.Consumption > 528.3 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.CustomerID) FROM yearmonth AS T1 WHERE substr(T1.Date,1,6) = '201202'\t----- bird -----\tdebit_card_specializing",
    "13": "SELECT MAX(Consumption) FROM yearmonth WHERE substr(Date, 1, 4) = '2012'\t----- bird -----\tdebit_card_specializing",
    "14": "SELECT T1.Description FROM products AS T1 INNER JOIN transactions_1k AS T2 ON T1.ProductID = T2.ProductID INNER JOIN yearmonth AS T3 ON T2.CustomerID = T3.CustomerID WHERE SUBSTR(T3.Date, 1, 4) = '2013' AND SUBSTR(T3.Date, 6, 2) = '09'\t----- bird -----\tdebit_card_specializing",
    "15": "SELECT T2.Country FROM `transactions_1k` AS T1 INNER JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID WHERE SUBSTR(T1.Date, 1, 7) = '2013-06' GROUP BY T2.Country\t----- bird -----\tdebit_card_specializing",
    "16": "SELECT COUNT(T1.CustomerID) FROM customers AS T1 JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Currency = 'EUR' AND T2.Consumption > 1000 GROUP BY T1.CustomerID\t----- bird -----\tdebit_card_specializing",
    "17": "SELECT T3.Description FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID INNER JOIN products AS T3 ON T1.ProductID = T3.ProductID WHERE T2.Country = 'CZE'\t----- bird -----\tdebit_card_specializing",
    "18": "SELECT DISTINCT T1.Date FROM `yearmonth` AS T1 JOIN `transactions_1k` AS T2 ON T1.CustomerID = T2.CustomerID JOIN gasstations AS T3 ON T2.GasStationID = T3.GasStationID WHERE T3.ChainID = 11\t----- bird -----\tdebit_card_specializing",
    "19": "SELECT COUNT(*) FROM `transactions_1k` WHERE GasStationID IN (SELECT GasStationID FROM gasstations WHERE Country = 'CZE') AND Date > '2012-01-01'\t----- bird -----\tdebit_card_specializing",
    "20": "SELECT T1.Currency FROM customers AS T1 INNER JOIN `transactions_1k` AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Date = '2012-08-24' AND T2.Time = '16:25:00'\t----- bird -----\tdebit_card_specializing",
    "21": "SELECT T1.Segment FROM customers AS T1 INNER JOIN transactions_1k AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Date = '2012-08-23' AND T2.Time = '21:20:00'\t----- bird -----\tdebit_card_specializing",
    "22": "SELECT COUNT(*) FROM transactions_1k WHERE Date = '2012-08-26' AND Time BETWEEN '08:00:00' AND '09:00:00' AND GasStationID IN (SELECT GasStationID FROM gasstations WHERE Country = 'CZE')\t----- bird -----\tdebit_card_specializing",
    "23": "SELECT T1.Currency FROM customers AS T1 INNER JOIN `transactions_1k` AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Date = '2012-08-24' AND T2.Price * T2.Amount = 548.4\t----- bird -----\tdebit_card_specializing",
    "24": "SELECT CAST(SUM(CASE WHEN T1.Currency = 'EUR' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.CustomerID) FROM customers AS T1 INNER JOIN `yearmonth` AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Date = '2012-08-25'\t----- bird -----\tdebit_card_specializing",
    "25": "SELECT (SUM(c1.Consumption) - SUM(c2.Consumption)) / SUM(c1.Consumption) AS ConsumptionDecreaseRate FROM (SELECT * FROM yearmonth WHERE Date LIKE '2012%' AND CustomerID = (SELECT CustomerID FROM transactions_1k WHERE Date = '2012-08-25' AND Price * Amount = 634.8)) AS c1, (SELECT * FROM yearmonth WHERE Date LIKE '2013%' AND CustomerID = (SELECT CustomerID FROM transactions_1k WHERE Date = '2012-08-25' AND Price * Amount = 634.8)) AS c2 WHERE c1.CustomerID = c2.CustomerID\t----- bird -----\tdebit_card_specializing",
    "26": "SELECT CAST(SUM(CASE WHEN T2.Segment = 'premium' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM gasstations AS T2 WHERE T2.Country = 'SVK'\t----- bird -----\tdebit_card_specializing",
    "27": "SELECT SUM(T1.Amount * T1.Price) FROM `transactions_1k` AS T1 WHERE T1.CustomerID = 38508 AND strftime('%Y%m', T1.Date) = '201201'\t----- bird -----\tdebit_card_specializing",
    "28": "SELECT T1.CustomerID, SUM(T2.Price) / SUM(T2.Amount) AS avg_price, T1.Currency FROM customers AS T1 JOIN `transactions_1k` AS T2 ON T1.CustomerID = T2.CustomerID GROUP BY T1.CustomerID ORDER BY SUM(T2.Price) DESC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "29": "SELECT T1.Consumption FROM yearmonth AS T1 INNER JOIN transactions_1k AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.ProductID = 5 AND T2.Price / T2.Amount > 29.00 AND T1.Date = '201208'\t----- bird -----\tdebit_card_specializing",
    "30": "SELECT T2.major_name FROM member AS T1 JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.first_name = 'Angela' AND T1.last_name = 'Sanders'\t----- bird -----\tstudent_club",
    "31": "SELECT COUNT(*) FROM member WHERE t_shirt_size = 'Medium' AND member_id IN (SELECT link_to_member FROM attendance WHERE link_to_event IN (SELECT event_id FROM event WHERE event_name = 'Women''s Soccer'))\t----- bird -----\tstudent_club",
    "32": "SELECT COUNT(*) FROM (SELECT T1.event_id FROM event AS T1 INNER JOIN attendance AS T2 ON T1.event_id = T2.link_to_event WHERE T1.type = 'Meeting' GROUP BY T1.event_id HAVING COUNT(T2.link_to_member) > 10) AS T3\t----- bird -----\tstudent_club",
    "33": "SELECT T1.event_name FROM event AS T1 INNER JOIN attendance AS T2 ON T1.event_id = T2.link_to_event GROUP BY T1.event_id HAVING COUNT(T2.link_to_member) > 20 EXCEPT SELECT T1.event_name FROM event AS T1 INNER JOIN attendance AS T2 ON T1.event_id = T2.link_to_event WHERE T1.type = 'fundraiser' GROUP BY T1.event_id HAVING COUNT(T2.link_to_member) > 20\t----- bird -----\tstudent_club",
    "34": "SELECT T1.amount FROM income AS T1 JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T2.position = 'Vice President'\t----- bird -----\tstudent_club",
    "35": "SELECT T1.first_name, T1.last_name FROM member AS T1 INNER JOIN zip_code AS T2 ON T1.zip = T2.zip_code WHERE T2.state = 'Illinois'\t----- bird -----\tstudent_club",
    "36": "SELECT T3.approved FROM event AS T1 JOIN attendance AS T2 ON T1.event_id = T2.link_to_event JOIN expense AS T3 ON T2.link_to_member = T3.link_to_member WHERE T1.event_name = 'October Meeting' AND T1.event_date = '2019-10-08'\t----- bird -----\tstudent_club",
    "37": "SELECT AVG(T2.cost) FROM (SELECT T1.member_id, T2.cost FROM member AS T1 INNER JOIN expense AS T2 ON T1.member_id = T2.link_to_member WHERE T1.first_name = 'Elijah' AND T1.last_name = 'Allen' AND strftime('%m', T2.expense_date) = '09' OR strftime('%m', T2.expense_date) = '10') AS T2\t----- bird -----\tstudent_club",
    "38": "SELECT (SELECT SUM(T2.spent) FROM event AS T1 JOIN budget AS T2 ON T1.event_id = T2.link_to_event WHERE strftime('%Y', T1.event_date) = '2019') - (SELECT SUM(T2.spent) FROM event AS T1 JOIN budget AS T2 ON T1.event_id = T2.link_to_event WHERE strftime('%Y', T1.event_date) = '2020')\t----- bird -----\tstudent_club",
    "39": "SELECT T1.notes FROM income AS T1 WHERE T1.source = 'Fundraising' AND T1.date_received = '2019-09-14'\t----- bird -----\tstudent_club",
    "40": "SELECT T1.phone FROM member AS T1 WHERE T1.first_name = 'Carlo' AND T1.last_name = 'Jacobs'\t----- bird -----\tstudent_club",
    "41": "SELECT T1.event_status FROM budget AS T1 INNER JOIN expense AS T2 ON T2.link_to_budget = T1.budget_id WHERE T2.expense_description = 'Post Cards, Posters' AND T2.expense_date = '2019-08-20'\t----- bird -----\tstudent_club",
    "42": "SELECT T2.major_name FROM member AS T1 JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.first_name = 'Brent' AND T1.last_name = 'Thomason'\t----- bird -----\tstudent_club",
    "43": "SELECT COUNT(*) FROM member WHERE link_to_major IN(SELECT major_id FROM major WHERE major_name = 'Business') AND t_shirt_size = 'Medium'\t----- bird -----\tstudent_club",
    "44": "SELECT T2.department FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.position = 'President'\t----- bird -----\tstudent_club",
    "45": "SELECT T1.date_received FROM income AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T2.first_name = 'Connor' AND T2.last_name = 'Hilton' AND T1.source = 'Dues'\t----- bird -----\tstudent_club",
    "46": "SELECT CASE WHEN ( SELECT SUM(T1.amount) FROM budget AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T2.event_name = 'Yearly Kickoff' AND T1.category = 'Advertisement' ) / ( SELECT SUM(T1.amount) FROM budget AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T2.event_name = 'October Meeting' AND T1.category = 'Advertisement' ) > 1 THEN 1 ELSE 0 END AS result\t----- bird -----\tstudent_club",
    "47": "SELECT SUM(T1.cost) FROM expense AS T1 WHERE T1.expense_description = 'Pizza'\t----- bird -----\tstudent_club",
    "48": "SELECT COUNT(DISTINCT city) FROM zip_code WHERE county = 'Orange' AND state = 'Virginia'\t----- bird -----\tstudent_club",
    "49": "SELECT T2.major_name FROM member AS T1 JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.phone = '809-555-3360'\t----- bird -----\tstudent_club",
    "50": "SELECT COUNT(T2.link_to_member) FROM event AS T1 INNER JOIN attendance AS T2 ON T1.event_id = T2.link_to_event WHERE T1.event_name = 'Women's Soccer'\t----- bird -----\tstudent_club",
    "51": "SELECT T1.first_name, T1.last_name FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.department = 'School of Applied Sciences, Technology and Education'\t----- bird -----\tstudent_club",
    "52": "SELECT T1.event_name FROM event AS T1 JOIN budget AS T2 ON T1.event_id = T2.link_to_event WHERE T1.status = 'Closed' AND CAST(T2.spent AS REAL) / T2.amount = (SELECT MAX(CAST(T2.spent AS REAL) / T2.amount) FROM event AS T1 JOIN budget AS T2 ON T1.event_id = T2.link_to_event WHERE T1.status = 'Closed')\t----- bird -----\tstudent_club",
    "53": "SELECT MAX(spent) FROM budget WHERE link_to_event IN (SELECT event_id FROM event)\t----- bird -----\tstudent_club",
    "54": "SELECT SUM(T1.spent) FROM budget AS T1 WHERE T1.category = 'Food'\t----- bird -----\tstudent_club",
    "55": "SELECT T1.first_name, T1.last_name FROM member AS T1 INNER JOIN attendance AS T2 ON T1.member_id = T2.link_to_member GROUP BY T1.member_id HAVING COUNT(T2.link_to_event) > 7\t----- bird -----\tstudent_club",
    "56": "SELECT T1.first_name, T1.last_name FROM member AS T1 INNER JOIN attendance AS T2 ON T1.member_id = T2.link_to_member INNER JOIN event AS T3 ON T2.link_to_event = T3.event_id INNER JOIN budget AS T4 ON T3.event_id = T4.link_to_event INNER JOIN expense AS T5 ON T4.budget_id = T5.link_to_budget WHERE T3.event_name = 'Yearly Kickoff'\t----- bird -----\tstudent_club",
    "57": "SELECT T1.event_name FROM event AS T1 JOIN attendance AS T2 ON T1.event_id = T2.link_to_event JOIN expense AS T3 ON T2.link_to_member = T3.link_to_member ORDER BY T3.cost LIMIT 1\t----- bird -----\tstudent_club",
    "58": "SELECT CAST(SUM(CASE WHEN T1.event_name = 'Yearly Kickoff' THEN T3.cost ELSE 0 END) AS REAL) * 100 / SUM(T3.cost) FROM event AS T1 INNER JOIN budget AS T2 ON T1.event_id = T2.link_to_event INNER JOIN expense AS T3 ON T2.budget_id = T3.link_to_budget\t----- bird -----\tstudent_club",
    "59": "SELECT source FROM income WHERE date_received BETWEEN '2019-09-01' AND '2019-09-30' GROUP BY source ORDER BY SUM(amount) DESC LIMIT 1\t----- bird -----\tstudent_club",
    "60": "SELECT COUNT(*) FROM member WHERE link_to_major IN (SELECT major_id FROM major WHERE major_name = 'Physics Teaching')\t----- bird -----\tstudent_club",
    "61": "SELECT T1.event_name FROM event AS T1 JOIN budget AS T2 ON T1.event_id = T2.link_to_event WHERE T2.category = 'Advertisement' ORDER BY T2.spent DESC LIMIT 1\t----- bird -----\tstudent_club",
    "62": "SELECT T3.event_name FROM attendance AS T1 JOIN member AS T2 ON T1.link_to_member = T2.member_id JOIN event AS T3 ON T1.link_to_event = T3.event_id WHERE T2.first_name = 'Maya' AND T2.last_name = 'Mclean' AND T3.event_name = 'Women''s Soccer'\t----- bird -----\tstudent_club",
    "63": "SELECT T3.cost FROM event AS T1 JOIN expense AS T3 ON T1.event_id = T3.link_to_event WHERE T1.event_name = 'September Speaker' AND T3.expense_description = 'Posters'\t----- bird -----\tstudent_club",
    "64": "SELECT T1.event_name FROM event AS T1 INNER JOIN budget AS T2 ON T1.event_id = T2.link_to_event WHERE T1.status = 'Closed' AND T2.remaining < 0 ORDER BY T2.remaining LIMIT 1\t----- bird -----\tstudent_club",
    "65": "SELECT SUM(T2.cost) FROM event AS T1 JOIN expense AS T2 ON T1.event_id = T2.link_to_budget WHERE T1.event_name = 'October Meeting' AND T2.approved = 'yes'\t----- bird -----\tstudent_club",
    "66": "SELECT T2.category , SUM(T2.amount) FROM event AS T1 JOIN budget AS T2 ON T1.event_id = T2.link_to_event WHERE T1.event_name = 'April Speaker' GROUP BY T2.category ORDER BY SUM(T2.amount) ASC\t----- bird -----\tstudent_club",
    "67": "SELECT SUM(cost) FROM expense WHERE expense_date = '2019-08-20'\t----- bird -----\tstudent_club",
    "68": "SELECT T1.first_name, T1.last_name, SUM(T3.cost) FROM member AS T1 INNER JOIN expense AS T2 ON T1.member_id = T2.link_to_member INNER JOIN (SELECT link_to_member, SUM(cost) AS cost FROM expense GROUP BY link_to_member) AS T3 ON T1.member_id = T3.link_to_member WHERE T1.member_id = 'rec4BLdZHS2Blfp4v'\t----- bird -----\tstudent_club",
    "69": "SELECT T2.expense_description FROM member AS T1 JOIN expense AS T2 ON T1.member_id = T2.link_to_member WHERE T1.first_name = 'Sacha' AND T1.last_name = 'Harrison'\t----- bird -----\tstudent_club",
    "70": "SELECT T1.type FROM event AS T1 WHERE T1.location = 'MU 215'\t----- bird -----\tstudent_club",
    "71": "SELECT T2.last_name, T3.department, T3.college FROM major AS T1 JOIN member AS T2 ON T1.major_id = T2.link_to_major JOIN major AS T3 ON T3.major_name = 'Environmental Engineering' WHERE T1.major_name = T3.major_name\t----- bird -----\tstudent_club",
    "72": "SELECT T2.category FROM event AS T1 JOIN budget AS T2 ON T1.event_id = T2.link_to_event WHERE T1.location = 'MU 215' AND T1.type = 'Guest Speaker' AND T2.spent = 0\t----- bird -----\tstudent_club",
    "73": "SELECT CAST(SUM(CASE WHEN T4.amount = 50 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.member_id) FROM member AS T1 INNER JOIN income AS T3 ON T1.member_id = T3.link_to_member INNER JOIN zip_code AS T2 ON T1.zip = T2.zip_code INNER JOIN budget AS T4 ON T3.income_id = T4.link_to_event WHERE T1.t_shirt_size = 'Medium' AND T1.position = 'Member' AND T4.category = 'Student_Club'\t----- bird -----\tstudent_club",
    "74": "SELECT event_name FROM event WHERE type = 'Game' AND status = 'Closed' AND event_date BETWEEN '2019-03-15' AND '2020-03-20'\t----- bird -----\tstudent_club",
    "75": "SELECT T1.first_name, T1.last_name, T1.phone FROM member AS T1 INNER JOIN expense AS T2 ON T1.member_id = T2.link_to_member WHERE T2.cost > (SELECT AVG(cost) FROM expense)\t----- bird -----\tstudent_club",
    "76": "SELECT T1.first_name, T1.last_name, T2.cost FROM member AS T1 INNER JOIN expense AS T2 ON T1.member_id = T2.link_to_member WHERE T2.expense_description = 'Water, Veggie tray, supplies'\t----- bird -----\tstudent_club",
    "77": "SELECT T2.first_name, T2.last_name, T1.amount FROM income AS T1 JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T1.date_received = '9/9/2019'\t----- bird -----\tstudent_club",
    "78": "SELECT CAST(COUNT(CASE WHEN T1.SEX = 'M' AND T1.Admission = '+' THEN T1.ID ELSE NULL END) AS REAL) * 100 / COUNT(CASE WHEN T1.SEX = 'M' AND T1.Admission = '-' THEN T1.ID ELSE NULL END) - 100 FROM Patient AS T1 WHERE T1.SEX = 'M' AND T1.Admission IN ('+', '-')\t----- bird -----\tthrombosis_prediction",
    "79": "SELECT CAST(SUM(CASE WHEN strftime('%Y', T1.Birthday) > '1930' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.ID) FROM Patient AS T1 WHERE T1.SEX = 'F'\t----- bird -----\tthrombosis_prediction",
    "80": "SELECT CAST(SUM(CASE WHEN T1.Admission = '+' THEN 1 ELSE 0 END) AS REAL) / SUM(CASE WHEN T1.Admission = '-' THEN 1 ELSE 0 END) FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.Diagnosis = 'SLE' AND T2.Diagnosis = 'SLE'\t----- bird -----\tthrombosis_prediction",
    "81": "SELECT T2.Diagnosis , T1.Date FROM Laboratory AS T1 JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T2.ID = 30609\t----- bird -----\tthrombosis_prediction",
    "82": "SELECT T1.ID ,  T1.SEX ,  T1.Birthday FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID  =  T2.ID WHERE T2.LDH > 500\t----- bird -----\tthrombosis_prediction",
    "83": "SELECT T2.ID, strftime('%Y', T1.`Examination Date`) - strftime('%Y', T2.Birthday) AS age FROM Examination AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.RVVT = '+' GROUP BY T2.ID, T2.Birthday\t----- bird -----\tthrombosis_prediction",
    "84": "SELECT T1.ID, T1.SEX, T1.Diagnosis FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T2.Thrombosis = 2;\t----- bird -----\tthrombosis_prediction",
    "85": "SELECT COUNT(*) FROM Patient WHERE SEX = 'F' AND Admission = '-' AND strftime('%Y', `Description`) = '1997'\t----- bird -----\tthrombosis_prediction",
    "86": "SELECT COUNT(*) FROM Patient AS T1 JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'F' AND T2.Thrombosis = 1 AND strftime('%Y', T2.`Examination Date`) = '1997'\t----- bird -----\tthrombosis_prediction",
    "87": "SELECT T1.Symptoms, T1.Diagnosis FROM (SELECT * FROM Patient WHERE ID IN (SELECT ID FROM Examination WHERE Symptoms IS NOT NULL) ORDER BY Birthday DESC LIMIT 1) AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.Diagnosis = T2.Diagnosis;\t----- bird -----\tthrombosis_prediction",
    "88": "SELECT T2.Date ,  ( strftime('%Y',T1.First_Date) - strftime('%Y',T1.Birthday) ) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Diagnosis = 'SJS' ORDER BY T1.Birthday DESC LIMIT 1\t----- bird -----\tthrombosis_prediction",
    "89": "SELECT CAST(SUM(IIF(T2.SEX = 'M' AND T2.UA <= 8.0 , 1 , 0 )) AS REAL) / SUM(IIF(T2.SEX = 'F' AND T2.UA <= 6.5 , 1 , 0 )) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.SEX = T1.SEX\t----- bird -----\tthrombosis_prediction",
    "90": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 JOIN Examination AS T2 ON T1.ID = T2.ID WHERE strftime('%Y', T1.Birthday) < '1972' AND strftime('%Y', T2.`Examination Date`) BETWEEN '1990' AND '1993'\t----- bird -----\tthrombosis_prediction",
    "91": "SELECT T3.Birthday ,  T1.Diagnosis FROM ( SELECT T1.Diagnosis ,  T1.`Examination Date` ,  T3.Birthday ,  T2.HGB FROM Examination AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID INNER JOIN Patient AS T3 ON T1.ID = T3.ID ) AS T1 WHERE T1.HGB = ( SELECT MAX(T2.HGB) FROM Examination AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID ) ORDER BY (strftime('%Y' ,T1.`Examination Date`) - strftime('%Y' ,T3.Birthday)) DESC LIMIT 1\t----- bird -----\tthrombosis_prediction",
    "92": "SELECT T2.`aCL IgM` FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.Diagnosis = 'SLE' AND T1.`First Date` = '1994-02-19' AND T2.`Examination Date` = '1993-11-12'\t----- bird -----\tthrombosis_prediction",
    "93": "SELECT CAST((SUM(CASE WHEN T1.Birthday = '1959-02-18' AND T2.Date LIKE '1981-11-%' THEN T2.`T-CHO` ELSE 0 END) - SUM(CASE WHEN T1.Birthday = '1959-02-18' AND T2.Date LIKE '1981-12-%' THEN T2.`T-CHO` ELSE 0 END)) AS REAL) / SUM(CASE WHEN T1.Birthday = '1959-02-18' AND T2.Date LIKE '1981-12-%' THEN T2.`T-CHO` ELSE 0 END) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Birthday = '1959-02-18' AND T2.Date LIKE '1981-%'\t----- bird -----\tthrombosis_prediction",
    "94": "SELECT T1.ID FROM Patient AS T1 JOIN Examination AS T2 ON T1.ID = T2.ID JOIN Laboratory AS T3 ON T1.ID = T3.ID WHERE T2.`Examination Date` BETWEEN '1987-07-06' AND '1996-01-31' AND T3.GPT > 30 AND T3.ALB < 4 ORDER BY T1.ID\t----- bird -----\tthrombosis_prediction",
    "95": "SELECT COUNT(*) FROM (SELECT T1.ID FROM `Examination` AS T1 JOIN `Patient` AS T2 ON T1.ID = T2.ID WHERE T1.`ANA Pattern` = 'S' AND T1.Thrombosis = 2 AND T1.`aCL IgM` > (SELECT AVG(`aCL IgM`) * 1.2 FROM `Examination`) GROUP BY T1.ID)\t----- bird -----\tthrombosis_prediction",
    "96": "SELECT T1.ID FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Admission = '-' AND T2.Date LIKE '1991-10%' AND T2.`T-BIL` < 2.0\t----- bird -----\tthrombosis_prediction",
    "97": "SELECT AVG(T1.ALB) FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T2.SEX = 'F' AND T1.PLT > 400 AND T2.Diagnosis = 'SLE'\t----- bird -----\tthrombosis_prediction",
    "98": "SELECT COUNT(T1.ID) FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'F' AND T2.Diagnosis = 'APS'\t----- bird -----\tthrombosis_prediction",
    "99": "SELECT CAST(SUM(CASE WHEN T1.SEX = 'F' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.SEX) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE strftime('%Y', T1.Birthday) = '1980' AND T1.Diagnosis = 'RA'\t----- bird -----\tthrombosis_prediction",
    "100": "SELECT CASE WHEN T2.UA > 8.0 AND T1.SEX = 'M' OR T2.UA > 6.5 AND T1.SEX = 'F' THEN 'Yes' ELSE 'No' END AS Result FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.ID = 57266\t----- bird -----\tthrombosis_prediction",
    "101": "SELECT T1.ID FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'M' AND T2.GPT >= 60\t----- bird -----\tthrombosis_prediction",
    "102": "SELECT T2.Diagnosis FROM (SELECT ID FROM Laboratory WHERE GPT > 60) AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID ORDER BY T2.Birthday ASC\t----- bird -----\tthrombosis_prediction",
    "103": "SELECT T1.ID, T1.SEX, T1.Birthday FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.UN = 29\t----- bird -----\tthrombosis_prediction",
    "104": "SELECT GROUP_CONCAT(DISTINCT T2.ID) AS ID ,  T1.SEX FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.`T-BIL` >= 2.0 GROUP BY T1.SEX\t----- bird -----\tthrombosis_prediction",
    "105": "SELECT AVG(CAST((strftime('%Y', 'now') - strftime('%Y', T1.Birthday)) AS INT)) AS avg_age FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'M' AND T2.`T-CHO` >= 250;\t----- bird -----\tthrombosis_prediction",
    "106": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.TG >= 200 AND strftime('%Y', datetime('now')) - strftime('%Y', T1.Birthday) > 50\t----- bird -----\tthrombosis_prediction",
    "107": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'M' AND T1.Birthday BETWEEN '1936-01-01' AND '1956-12-31' AND T2.CPK >= 250\t----- bird -----\tthrombosis_prediction",
    "108": "SELECT T1.ID, T1.SEX, (strftime('%Y', 'now') - strftime('%Y', T1.Birthday)) AS age FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.GLU >= 180 AND T2.`T-CHO` < 250;\t----- bird -----\tthrombosis_prediction",
    "109": "SELECT T1.ID, T1.Diagnosis, strftime('%Y', 'now') - strftime('%Y', T1.Birthday) AS age FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.RBC < 3.5\t----- bird -----\tthrombosis_prediction",
    "110": "SELECT T1.ID ,  T1.SEX FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID  =  T2.ID WHERE T1.Diagnosis  =  'SLE' AND T2.HGB BETWEEN 10 AND 17 ORDER BY T1.Birthday ASC LIMIT 1\t----- bird -----\tthrombosis_prediction",
    "111": "SELECT T1.ID, (strftime('%Y', CURRENT_TIMESTAMP) - strftime('%Y', T1.Birthday)) AS age FROM Patient AS T1 JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.HCT >= 52 GROUP BY T1.ID HAVING COUNT(T2.ID) > 2\t----- bird -----\tthrombosis_prediction",
    "112": "SELECT (SELECT COUNT(*) FROM Laboratory WHERE PLT < 100) - (SELECT COUNT(*) FROM Laboratory WHERE PLT > 400) AS DIFFERENCE_BETWEEN_LOWER_AND_HIGHER_PLATELET_LEVEL\t----- bird -----\tthrombosis_prediction",
    "113": "SELECT T1.ID FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.PLT BETWEEN 100 AND 400 AND strftime('%Y', CURRENT_TIMESTAMP) - strftime('%Y', T1.Birthday) < 50 AND strftime('%Y', T2.Date) = '1984'\t----- bird -----\tthrombosis_prediction",
    "114": "SELECT CAST(SUM(CASE WHEN T1.SEX = 'F' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.SEX) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.PT >= 14 AND (strftime('%Y', 'now') - strftime('%Y', T1.Birthday)) > 55;\t----- bird -----\tthrombosis_prediction",
    "115": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'M' AND T2.WBC BETWEEN 3.5 AND 9 AND (T2.FG <= 150 OR T2.FG >= 450)\t----- bird -----\tthrombosis_prediction",
    "116": "SELECT COUNT(DISTINCT T1.ID) FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.IGG >= 2000;\t----- bird -----\tthrombosis_prediction",
    "117": "SELECT COUNT(*) FROM Examination WHERE `aCL IgG` > 900 AND `aCL IgG` < 2000 AND Symptoms IS NOT NULL;\t----- bird -----\tthrombosis_prediction",
    "118": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.IGA > 80 AND T2.IGA < 500 AND strftime('%Y', T1.`First Date`) >= '1990'\t----- bird -----\tthrombosis_prediction",
    "119": "SELECT Diagnosis FROM (\nSELECT Diagnosis, COUNT(Diagnosis) as cnt FROM (\nSELECT T1.Diagnosis FROM Patient AS T1 JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.IGM <= 40 OR T2.IGM >= 400\n) GROUP BY Diagnosis\n) ORDER BY cnt DESC LIMIT 1\t----- bird -----\tthrombosis_prediction",
    "120": "SELECT COUNT(*) FROM Patient WHERE ID IN (SELECT ID FROM Laboratory WHERE CRP = '+') AND Description IS NULL\t----- bird -----\tthrombosis_prediction",
    "121": "SELECT COUNT(*) FROM Patient WHERE ID IN (SELECT ID FROM Laboratory WHERE CRE >= 1.5) AND (strftime('%Y', 'now') - strftime('%Y', Birthday)) < 70\t----- bird -----\tthrombosis_prediction",
    "122": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.RNP IN ('-', '+-') AND T1.Admission = '+'\t----- bird -----\tthrombosis_prediction",
    "123": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T2.Symptoms = '-' OR T2.Symptoms = '+-' AND T2.Thrombosis = 0\t----- bird -----\tthrombosis_prediction",
    "124": "COUNT(DISTINCT T1.ID) FROM Patient AS T1 JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.SC170 IN('negative', '0') AND T1.SEX = 'F' AND T2.Symptoms IS NULL\t----- bird -----\tthrombosis_prediction",
    "125": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'M' AND T2.CENTROMEA IN ('-', '+-') AND T2.SSB IN ('-', '+-')\t----- bird -----\tthrombosis_prediction",
    "126": "SELECT T1.Birthday FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.GOT >= 60 ORDER BY T1.Birthday DESC LIMIT 1\t----- bird -----\tthrombosis_prediction",
    "127": "SELECT COUNT(T1.ID) FROM Patient AS T1 JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T2.CPK < 250 AND (T2.KCT = '+' OR T2.RVVT = '+' OR T2.LAC = '+')\t----- bird -----\tthrombosis_prediction",
    "128": "SELECT T2.name FROM (SELECT SUM((home_team_goal + away_team_goal)) AS total_goals, league_id FROM Match WHERE season = '2015/2016' GROUP BY league_id) AS subquery JOIN League AS T2 ON subquery.league_id = T2.id ORDER BY total_goals DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "129": "SELECT T.team_long_name FROM (SELECT away_team_api_id, COUNT(*) AS wins FROM Match WHERE season = '2009/2010' AND (away_team_goal > home_team_goal) AND league_id IN (SELECT id FROM League WHERE name = 'Scotland Premier League') GROUP BY away_team_api_id) AS subquery JOIN Team T ON subquery.away_team_api_id = T.team_api_id WHERE wins = (SELECT MAX(wins) FROM (SELECT COUNT(*) AS wins FROM Match WHERE season = '2009/2010' AND (away_team_goal > home_team_goal) AND league_id IN (SELECT id FROM League WHERE name = 'Scotland Premier League') GROUP BY away_team_api_id))\t----- bird -----\teuropean_football_2",
    "130": "SELECT T1.buildUpPlaySpeed FROM Team_Attributes AS T1 JOIN (SELECT team_api_id, MAX(buildUpPlaySpeed) AS buildUpPlaySpeed FROM Team_Attributes GROUP BY team_api_id ORDER BY buildUpPlaySpeed DESC LIMIT 4) AS T2 ON T1.team_api_id = T2.team_api_id AND T1.buildUpPlaySpeed = T2.buildUpPlaySpeed ORDER BY T1.buildUpPlaySpeed DESC LIMIT 4\t----- bird -----\teuropean_football_2",
    "131": "SELECT T2.name FROM (SELECT league_id, COUNT(*) AS draw_count FROM Match WHERE season = '2015/2016' AND home_team_goal = away_team_goal GROUP BY league_id) AS T1 JOIN League AS T2 ON T1.league_id = T2.id ORDER BY draw_count DESC LIMIT 1\t----- bird -----\teuropean_football_2",
    "132": "SELECT (strftime('%Y', 'now') - strftime('%Y', T1.birthday)) - (strftime('%m', 'now') < strftime('%m', T1.birthday)) + (strftime('%m', 'now') = strftime('%m', T1.birthday) AND strftime('%d', 'now') < strftime('%d', T1.birthday) ? -1 : 0) AS age FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.sprint_speed >= 97 AND strftime('%Y', T2.date) BETWEEN '2013' AND '2015'\t----- bird -----\teuropean_football_2",
    "133": "SELECT T2.name ,  COUNT(*) AS num_matches FROM `Match` AS T1 JOIN League AS T2 ON T1.league_id = T2.id GROUP BY T1.league_id ORDER BY num_matches DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "134": "SELECT team_fifa_api_id FROM Team_Attributes WHERE buildUpPlaySpeed > 50 AND buildUpPlaySpeed < 60;\t----- bird -----\teuropean_football_2",
    "135": "SELECT T1.team_long_name FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T2.buildUpPlayPassing > (SELECT AVG(buildUpPlayPassing) FROM Team_Attributes WHERE strftime('%Y', date) = '2012' AND buildUpPlayPassing IS NOT NULL) AND strftime('%Y', T2.date) = '2012'\t----- bird -----\teuropean_football_2",
    "136": "SELECT CAST(SUM(IIF(T2.preferred_foot = 'left', 1, 0)) AS REAL) * 100 / COUNT(T2.player_fifa_api_id) FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_fifa_api_id = T2.player_fifa_api_id WHERE T1.birthday BETWEEN '1987-01-01' AND '1992-12-31'\t----- bird -----\teuropean_football_2",
    "137": "SELECT AVG(T2.long_shots) FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.player_name = 'Ahmed Samir Farag'\t----- bird -----\teuropean_football_2",
    "138": "SELECT T1.player_name FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.height > 180 GROUP BY T2.player_fifa_api_id ORDER BY AVG(T2.heading_accuracy) DESC LIMIT 10\t----- bird -----\teuropean_football_2",
    "139": "SELECT T2.name FROM (SELECT SUM(home_team_goal) AS home ,  SUM(away_team_goal) AS away ,  T1.league_id FROM Match AS T1 WHERE T1.season = '2009/2010' GROUP BY T1.league_id) AS T1 JOIN League AS T2 ON T1.league_id = T2.id WHERE T1.home > T1.away\t----- bird -----\teuropean_football_2",
    "140": "SELECT player_name FROM Player WHERE substr(birthday, 1, 7) = '1970-10';\t----- bird -----\teuropean_football_2",
    "141": "SELECT overall_rating FROM Player_Attributes WHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Gabriel Tamas') AND strftime('%Y', date) = '2011'\t----- bird -----\teuropean_football_2",
    "142": "SELECT AVG(T1.home_team_goal) FROM `Match` AS T1 INNER JOIN Country AS T2 ON T1.country_id = T2.id WHERE T2.name = 'Poland' AND T1.season = '2010/2011'\t----- bird -----\teuropean_football_2",
    "143": "SELECT T1.player_name FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id GROUP BY T1.player_api_id ORDER BY AVG(T2.finishing) DESC LIMIT 1 UNION SELECT T1.player_name FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id GROUP BY T1.player_api_id ORDER BY AVG(T2.finishing) DESC , T1.height LIMIT 1 UNION SELECT T1.player_name FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id GROUP BY T1.player_api_id ORDER BY AVG(T2.finishing) DESC , T1.height DESC LIMIT 1\t----- bird -----\teuropean_football_2",
    "144": "SELECT SUM(T2.overall_rating) / COUNT(T2.id) FROM (SELECT * FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.height > 170 AND strftime('%Y', T2.date) BETWEEN '2010' AND '2015') AS T2\t----- bird -----\teuropean_football_2",
    "145": "SELECT (SUM(CASE WHEN T1.player_name = 'Abdou Diallo' THEN T2.ball_control ELSE 0 END) / COUNT(CASE WHEN T1.player_name = 'Abdou Diallo' THEN T2.id ELSE NULL END)) - (SUM(CASE WHEN T1.player_name = 'Aaron Appindangoye' THEN T2.ball_control ELSE 0 END) / COUNT(CASE WHEN T1.player_name = 'Aaron Appindangoye' THEN T2.id ELSE NULL END)) FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id\t----- bird -----\teuropean_football_2",
    "146": "SELECT player_name FROM Player WHERE player_name = 'Aaron Lennon' AND birthday < (SELECT birthday FROM Player WHERE player_name = 'Abdelaziz Barrada') OR player_name = 'Abdelaziz Barrada' AND birthday > (SELECT birthday FROM Player WHERE player_name = 'Aaron Lennon') LIMIT 1\t----- bird -----\teuropean_football_2",
    "147": "SELECT player_name FROM Player WHERE height = (SELECT MAX(height) FROM Player)\t----- bird -----\teuropean_football_2",
    "148": "SELECT COUNT(*) FROM Player_Attributes WHERE preferred_foot = 'left' AND attacking_work_rate = 'low'\t----- bird -----\teuropean_football_2",
    "149": "SELECT COUNT(DISTINCT T1.player_api_id) FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE strftime('%Y', T1.birthday) < '1986' AND T2.defensive_work_rate = 'high'\t----- bird -----\teuropean_football_2",
    "150": "SELECT T2.player_name FROM Player_Attributes AS T1 JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.volleys > 70 AND T1.dribbling > 70\t----- bird -----\teuropean_football_2",
    "151": "SELECT COUNT(*) FROM Match WHERE league_id IN (SELECT id FROM League WHERE name = 'Belgium Jupiler League') AND SUBSTR(date, 1, 7) = '2009-04'\t----- bird -----\teuropean_football_2",
    "152": "SELECT T2.name FROM (SELECT league_id, COUNT(*) AS count FROM Match WHERE season = '2008/2009' GROUP BY league_id ORDER BY count DESC LIMIT 1) AS T1 JOIN League AS T2 ON T1.league_id = T2.id\t----- bird -----\teuropean_football_2",
    "153": "SELECT (100 * ( (SELECT overall_rating FROM Player_Attributes AS PA1 WHERE PA1.player_name = 'Ariel Borysiuk') - (SELECT overall_rating FROM Player_Attributes AS PA2 WHERE PA2.player_name = 'Paulin Puel') ) / (SELECT overall_rating FROM Player_Attributes WHERE player_name = 'Paulin Puel'))\t----- bird -----\teuropean_football_2",
    "154": "SELECT AVG(T1.overall_rating) FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.player_name = 'Pietro Marino'\t----- bird -----\teuropean_football_2",
    "155": "SELECT MAX(T1.chanceCreationPassing), T1.chanceCreationPassingClass FROM Team_Attributes AS T1 JOIN Team AS T2 ON T1.team_api_id = T2.team_api_id WHERE T2.team_long_name = 'Ajax'\t----- bird -----\teuropean_football_2",
    "156": "SELECT T1.player_name FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.overall_rating = 77 AND T2.date LIKE '2016-06-23%' ORDER BY STRFTIME('%Y', T1.birthday) ASC LIMIT 1\t----- bird -----\teuropean_football_2",
    "157": "SELECT T2.overall_rating FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.player_name = 'Aaron Mooy' AND T2.date LIKE '2016-02-04%'\t----- bird -----\teuropean_football_2",
    "158": "SELECT T2.attacking_work_rate FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.player_name = 'Francesco Migliore' AND T2.date LIKE '2015-05-01%'\t----- bird -----\teuropean_football_2",
    "159": "SELECT T1.date FROM Player_Attributes AS T1 JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.player_name = 'Kevin Constant' AND T1.crossing = ( SELECT MAX(T1.crossing) FROM Player_Attributes AS T1 JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.player_name = 'Kevin Constant' )\t----- bird -----\teuropean_football_2",
    "160": "SELECT T2.buildUpPlayPassingClass FROM `Team` AS T1 INNER JOIN `Team_Attributes` AS T2 ON T1.team_api_id = T2.team_api_id WHERE T1.team_long_name = 'FC Lorient' AND T2.date LIKE '2010-02-22%'\t----- bird -----\teuropean_football_2",
    "161": "SELECT T2.defenceAggressionClass FROM Team AS T1 JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T1.team_long_name = 'Hannover 96' AND T2.date LIKE '2015-09-10%'\t----- bird -----\teuropean_football_2",
    "162": "SELECT AVG(T2.overall_rating) FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.player_name = 'Marko Arnautovic' AND T2.date BETWEEN '2007-02-22' AND '2016-04-21'\t----- bird -----\teuropean_football_2",
    "163": "SELECT CAST((T1.overall_rating - T2.overall_rating) AS REAL) * 100 / T1.overall_rating FROM Player_Attributes AS T1 JOIN Player_Attributes AS T2 ON T1.player_fifa_api_id = (SELECT player_fifa_api_id FROM Player WHERE player_name = 'Landon Donovan') AND T2.player_fifa_api_id = (SELECT player_fifa_api_id FROM Player WHERE player_name = 'Jordan Bowery') WHERE T1.date = '2013-07-12' AND T2.date = '2013-07-12'\t----- bird -----\teuropean_football_2",
    "164": "SELECT player_name FROM Player WHERE height = (SELECT MAX(height) FROM Player) AND height IN (SELECT MAX(height) FROM Player GROUP BY height ORDER BY height DESC LIMIT 1)\t----- bird -----\teuropean_football_2",
    "165": "SELECT T1.player_name FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id ORDER BY T2.strength DESC LIMIT 1\t----- bird -----\teuropean_football_2",
    "166": "SELECT DISTINCT T1.player_name FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.attacking_work_rate = 'high'\t----- bird -----\teuropean_football_2",
    "167": "SELECT T1.team_short_name FROM Team AS T1 JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T2.chanceCreationPassingClass = 'Safe'\t----- bird -----\teuropean_football_2",
    "168": "SELECT COUNT(*) FROM Player WHERE player_name LIKE 'Aaron%' AND birthday > '1990'\t----- bird -----\teuropean_football_2",
    "169": "SELECT (SELECT jumping FROM Player_Attributes WHERE player_fifa_api_id = (SELECT player_fifa_api_id FROM Player WHERE id = 6)) - (SELECT jumping FROM Player_Attributes WHERE player_fifa_api_id = (SELECT player_fifa_api_id FROM Player WHERE id = 23)) AS difference\t----- bird -----\teuropean_football_2",
    "170": "SELECT T1.player_api_id FROM Player_Attributes AS T1 JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.preferred_foot = 'right' ORDER BY T1.potential LIMIT 4\t----- bird -----\teuropean_football_2",
    "171": "SELECT COUNT(*) FROM Player_Attributes WHERE preferred_foot = 'left' AND attacking_work_rate = 'high' AND crossing = (SELECT MAX(crossing) FROM Player_Attributes)\t----- bird -----\teuropean_football_2",
    "172": "SELECT T1.home_team_goal , T1.away_team_goal FROM Match AS T1 JOIN League AS T2 ON T1.league_id = T2.id WHERE T2.name = 'Belgium Jupiler League' AND T1.date LIKE '2008-09-24%'\t----- bird -----\teuropean_football_2",
    "173": "SELECT T2.buildUpPlaySpeedClass FROM Team AS T1 JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T1.team_long_name = 'KSV Cercle Brugge'\t----- bird -----\teuropean_football_2",
    "174": "SELECT T1.finishing, T1.curve FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.weight = (SELECT MAX(weight) FROM Player) LIMIT 1;\t----- bird -----\teuropean_football_2",
    "175": "SELECT T4.name FROM (SELECT T3.name, COUNT(T2.id) AS num_games FROM (SELECT T1.id, T1.name, T1.country_id FROM League AS T1 WHERE T1.id IN (SELECT T5.league_id FROM (SELECT league_id, COUNT(*) AS league_count FROM Match WHERE season = '2015/2016' GROUP BY league_id ORDER BY league_count DESC LIMIT 4) AS T5)) AS T4 JOIN Match AS T2 ON T2.league_id = T4.id WHERE T2.season = '2015/2016' GROUP BY T4.id) AS T3 ORDER BY T3.num_games DESC LIMIT 4\t----- bird -----\teuropean_football_2",
    "176": "SELECT T2.team_long_name FROM `Match` AS T1 JOIN Team AS T2 ON T1.away_team_api_id = T2.team_api_id WHERE T1.away_team_goal = (SELECT MAX(away_team_goal) FROM `Match`)\t----- bird -----\teuropean_football_2",
    "177": "SELECT T1.player_name FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.overall_rating = (SELECT MAX(overall_rating) FROM Player_Attributes) LIMIT 1\t----- bird -----\teuropean_football_2",
    "178": "SELECT CAST(SUM(CASE WHEN T1.height < 180 AND T2.strength > 70 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.id) FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id\t----- bird -----\teuropean_football_2",
    "179": "SELECT T1.driverRef FROM drivers AS T1 JOIN qualifying AS T2 ON T1.driverId = T2.driverId WHERE T2.raceId = 20 ORDER BY T2.q1 DESC LIMIT 5\t----- bird -----\tformula_1",
    "180": "SELECT T1.surname FROM drivers AS T1 INNER JOIN (SELECT driverId, MIN(q2) AS bestq2 FROM qualifying WHERE raceId = 19) AS T2 ON T1.driverId = T2.driverId WHERE T2.bestq2 = (SELECT MIN(q2) FROM qualifying WHERE raceId = 19)\t----- bird -----\tformula_1",
    "181": "SELECT T2.name FROM circuits AS T1 JOIN races AS T2 ON T1.circuitId = T2.circuitId WHERE T1.country = 'Germany'\t----- bird -----\tformula_1",
    "182": "SELECT T1.lat, T1.lng FROM circuits AS T1 JOIN races AS T2 ON T1.circuitId = T2.circuitId WHERE T2.name = 'Australian Grand Prix'\t----- bird -----\tformula_1",
    "183": "SELECT T1.lat, T1.lng FROM circuits AS T1 JOIN races AS T2 ON T1.circuitid = T2.circuitid WHERE T2.name = 'Abu Dhabi Grand Prix'\t----- bird -----\tformula_1",
    "184": "SELECT T1.q1 FROM (SELECT T2.q1,T3.forename,T3.surname,T2.raceid FROM qualifying AS T1 JOIN drivers AS T3 ON T1.driverid = T3.driverid JOIN races AS T2 ON T1.raceid = T2.raceid WHERE T2.raceid = 354 AND T3.forename = 'Bruno' AND T3.surname = 'Senna') AS T1 WHERE T1.q1 NOT NULL;\t----- bird -----\tformula_1",
    "185": "SELECT T1.number FROM drivers AS T1 JOIN qualifying AS T2 ON T1.driverId = T2.driverId WHERE T2.raceId = 903 AND T2.q3 LIKE '0:01:54%'\t----- bird -----\tformula_1",
    "186": "SELECT COUNT(*) FROM results WHERE raceId = (SELECT raceId FROM races WHERE name = 'Bahrain Grand Prix' AND year = 2007) AND time IS NOT NULL\t----- bird -----\tformula_1",
    "187": "SELECT T1.surname , T1.forename FROM drivers AS T1 JOIN results AS T2 ON T1.driverId = T2.driverId WHERE T2.raceId = 592 AND T2.time IS NOT NULL ORDER BY T1.dob LIMIT 1\t----- bird -----\tformula_1",
    "188": "SELECT T1.url FROM drivers AS T1 JOIN lapTimes AS T2 ON T1.driverId = T2.driverId JOIN races AS T3 ON T2.raceId = T3.raceId WHERE T3.raceId = 161 AND T2.time LIKE '01:27%'\t----- bird -----\tformula_1",
    "189": "SELECT T1.lat, T1.lng FROM circuits AS T1 JOIN races AS T2 ON T1.circuitId = T2.circuitId WHERE T2.name = 'Malaysian Grand Prix'\t----- bird -----\tformula_1",
    "190": "SELECT T1.url FROM constructors AS T1 JOIN constructorResults AS T2 ON T1.constructorId = T2.constructorId JOIN races AS T3 ON T2.raceId = T3.raceId WHERE T3.raceId = 9 ORDER BY T2.points DESC LIMIT 1\t----- bird -----\tformula_1",
    "191": "SELECT T1.code FROM drivers AS T1 JOIN qualifying AS T2 ON T1.driverId = T2.driverId WHERE T2.q3 LIKE '0:01:33%' AND T2.raceId = 45\t----- bird -----\tformula_1",
    "192": "SELECT T1.url FROM seasons AS T1 JOIN races AS T2 ON T1.year = T2.year WHERE T2.raceId = 901;\t----- bird -----\tformula_1",
    "193": "SELECT T1.driverId FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId WHERE T2.raceId = 872 AND T2.time IS NOT NULL ORDER BY T1.dob DESC LIMIT 1\t----- bird -----\tformula_1",
    "194": "SELECT T1.nationality FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId WHERE T2.fastestLapSpeed = (SELECT MAX(`fastestLapSpeed`) FROM results)\t----- bird -----\tformula_1",
    "195": "SELECT CAST((T1.fastestLapSpeed - T2.fastestLapSpeed) AS REAL) * 100 / T1.fastestLapSpeed FROM (SELECT results.raceId, MIN(lapTimes.milliseconds) AS fastestLapSpeed FROM results JOIN lapTimes ON results.raceId = lapTimes.raceId AND results.driverId = lapTimes.driverId WHERE results.driverId = (SELECT driverId FROM drivers WHERE forename = 'Paul' AND surname = 'di Resta') AND results.raceId = 853 GROUP BY results.raceId) T1, (SELECT results.raceId, MIN(lapTimes.milliseconds) AS fastestLapSpeed FROM results JOIN lapTimes ON results.raceId = lapTimes.raceId AND results.driverId = lapTimes.driverId WHERE results.driverId = (SELECT driverId FROM drivers WHERE forename = 'Paul' AND surname = 'di Resta') AND results.raceId = 854 GROUP BY results.raceId) T2\t----- bird -----\tformula_1",
    "196": "SELECT CAST(SUM(CASE WHEN T1.time IS NOT NULL THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.driverId) FROM results AS T1 JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T2.date = '1983-07-16'\t----- bird -----\tformula_1",
    "197": "SELECT T1.name FROM races AS T1 JOIN seasons AS T2 ON T1.year = T2.year WHERE T2.year = (SELECT strftime('%Y', MIN(date)) FROM races) AND strftime('%m', T1.date) = (SELECT strftime('%m', MIN(date)) FROM races)\t----- bird -----\tformula_1",
    "198": "SELECT T1.forename, T1.surname, T2.points FROM drivers AS T1 INNER JOIN driverStandings AS T2 ON T1.driverId = T2.driverId WHERE T2.points = ( SELECT MAX(T2.points) FROM drivers AS T1 INNER JOIN driverStandings AS T2 ON T1.driverId = T2.driverId )\t----- bird -----\tformula_1",
    "199": "SELECT drivers.forename, drivers.surname, races.name, MIN(lapTimes.milliseconds) AS best_lap_time FROM lapTimes JOIN races ON lapTimes.raceId = races.raceId JOIN drivers ON lapTimes.driverId = drivers.driverId GROUP BY lapTimes.raceId, lapTimes.driverId ORDER BY best_lap_time LIMIT 1;\t----- bird -----\tformula_1",
    "200": "SELECT AVG(T2.milliseconds) FROM races AS T1 INNER JOIN lapTimes AS T2 ON T1.raceId = T2.raceId INNER JOIN drivers AS T3 ON T2.driverId = T3.driverId WHERE T1.year = 2009 AND T1.name = 'Malaysian Grand Prix' AND T3.forename = 'Lewis' AND T3.surname = 'Hamilton'\t----- bird -----\tformula_1",
    "201": "SELECT CAST(SUM(CASE WHEN T1.surname = 'Hamilton' AND T3.position > 1 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.surname) FROM drivers AS T1 JOIN results AS T2 ON T1.driverId = T2.driverId JOIN driverStandings AS T3 ON T1.driverId = T3.driverId AND T2.raceId = T3.raceId JOIN races AS T4 ON T2.raceId = T4.raceId WHERE T4.year >= 2010\t----- bird -----\tformula_1",
    "202": "SELECT T1.forename, T1.surname, T1.nationality, MAX(T2.wins), MAX(T2.points) FROM drivers AS T1 INNER JOIN driverStandings AS T2 ON T1.driverId = T2.driverId GROUP BY T1.driverId ORDER BY MAX(T2.wins) DESC LIMIT 1;\t----- bird -----\tformula_1",
    "203": "SELECT T1.surname, T1.forename, (strftime('%Y', 'now') - strftime('%Y', T1.dob)) as age FROM drivers AS T1 WHERE T1.nationality = 'Japanese' ORDER BY T1.dob DESC LIMIT 1\t----- bird -----\tformula_1",
    "204": "SELECT races.name, circuits.name, circuits.location FROM races JOIN circuits ON races.circuitId = circuits.circuitId WHERE strftime('%Y', races.date) = '2005' AND strftime('%m', races.date) = '09'\t----- bird -----\tformula_1",
    "205": "SELECT T1.raceId FROM races AS T1 JOIN results AS T2 ON T1.raceId = T2.raceId JOIN drivers AS T3 ON T2.driverId = T3.driverId WHERE T3.forename = 'Alex' AND T3.surname = 'Yoong' AND T2.position < 20\t----- bird -----\tformula_1",
    "206": "SELECT T3.name, T3.year FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId INNER JOIN races AS T3 ON T2.raceId = T3.raceId INNER JOIN (SELECT raceId, MIN(milliseconds) AS fastestlap FROM lapTimes GROUP BY raceId) AS T4 ON T3.raceId = T4.raceId WHERE T1.forename = 'Michael' AND T1.surname = 'Schumacher' AND T2.fastestLap = T4.fastestlap;\t----- bird -----\tformula_1",
    "207": "SELECT T1.name, T2.points FROM (SELECT raceId, name, MIN(year) AS minYear FROM races GROUP BY raceId) AS T1 JOIN results AS T2 ON T1.raceId = T2.raceId JOIN drivers AS T3 ON T2.driverId = T3.driverId WHERE T3.forename = 'Lewis' AND T3.surname = 'Hamilton' AND T1.minYear = (SELECT MIN(year) FROM races) LIMIT 1;\t----- bird -----\tformula_1",
    "208": "SELECT CAST(SUM(IIF(T2.country = 'Germany', 1, 0)) AS REAL) * 100 / COUNT(T1.raceId) FROM races AS T1 JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T1.name = 'European Grand Prix'\t----- bird -----\tformula_1",
    "209": "SELECT lat, lng FROM circuits WHERE name = 'Silverstone Circuit'\t----- bird -----\tformula_1",
    "210": "SELECT circuitRef FROM circuits WHERE name = 'Marina Bay Street Circuit'\t----- bird -----\tformula_1",
    "211": "SELECT nationality FROM drivers WHERE driverId IN (SELECT driverId FROM drivers WHERE dob = (SELECT MIN(dob) FROM drivers))\t----- bird -----\tformula_1",
    "212": "SELECT T1.driverRef FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId INNER JOIN races AS T3 ON T2.raceId = T3.raceId WHERE T3.name = 'Canadian Grand Prix' AND T3.year = 2007 AND T2.position = 1;\t----- bird -----\tformula_1",
    "213": "SELECT T1.raceId FROM races AS T1 JOIN results AS T2 ON T1.raceId = T2.raceId JOIN drivers AS T3 ON T2.driverId = T3.driverId WHERE T3.forename = 'Lewis' AND T3.surname = 'Hamilton' ORDER BY T2.rank LIMIT 1\t----- bird -----\tformula_1",
    "214": "SELECT MAX(T1.fastestLapSpeed) FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T2.name = 'Spanish Grand Prix' AND T2.year = 2009\t----- bird -----\tformula_1",
    "215": "SELECT T4.positionOrder FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId INNER JOIN races AS T3 ON T2.raceId = T3.raceId INNER JOIN results AS T4 ON T2.resultId = T4.resultId WHERE T1.forename = 'Lewis' AND T1.surname = 'Hamilton' AND T3.name = 'Chinese Grand Prix' AND T3.year = 2008\t----- bird -----\tformula_1",
    "216": "SELECT T2.time FROM (SELECT raceId FROM races WHERE year = 2008 AND name = 'Australian Grand Prix') AS T1 JOIN results AS T2 ON T1.raceId = T2.raceId WHERE position = 2\t----- bird -----\tformula_1",
    "217": "SELECT COUNT(DISTINCT T1.driverId) FROM results AS T1 JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T2.year = 2008 AND T2.name = 'Chinese Grand Prix' AND T1.time NOT NULL AND T1.time != '' AND EXISTS (SELECT * FROM results WHERE raceId IN (SELECT raceId FROM races WHERE year > 2008) AND driverId = T1.driverId)\t----- bird -----\tformula_1",
    "218": "SELECT CAST((T1.milliseconds - T2.milliseconds) AS REAL) * 100 / T2.milliseconds FROM (SELECT SUM(milliseconds) AS milliseconds FROM results WHERE raceId = (SELECT raceId FROM races WHERE year = 2008 AND name = 'Australian Grand Prix') AND position = 1) AS T1, (SELECT SUM(milliseconds) AS milliseconds FROM results WHERE raceId = (SELECT raceId FROM races WHERE year = 2008 AND name = 'Australian Grand Prix') AND position = (SELECT MAX(position) FROM results WHERE raceId = (SELECT raceId FROM races WHERE year = 2008 AND name = 'Australian Grand Prix'))) AS T2\t----- bird -----\tformula_1",
    "219": "SELECT COUNT(*) FROM circuits WHERE location = 'Adelaide' AND country = 'Australia';\t----- bird -----\tformula_1",
    "220": "SELECT MAX(T2.points) FROM constructors AS T1 JOIN constructorStandings AS T2 ON T1.constructorId = T2.constructorId WHERE T1.nationality = 'British'\t----- bird -----\tformula_1",
    "221": "SELECT T1.name FROM constructors AS T1 JOIN constructorResults AS T2 ON T1.constructorId = T2.constructorId WHERE T2.raceId = 291 AND T2.points = 0\t----- bird -----\tformula_1",
    "222": "SELECT COUNT(*) FROM constructorStandings WHERE constructorId IN (SELECT constructorId FROM constructors WHERE nationality = 'Japanese') AND points = 0 AND raceId IN (SELECT raceId FROM races GROUP BY raceId HAVING COUNT(raceId) = 2)\t----- bird -----\tformula_1",
    "223": "SELECT CAST(SUM(CASE WHEN T2.time IS NOT NULL THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T2.time) FROM races AS T1 JOIN results AS T2 ON T1.raceId = T2.raceId JOIN drivers AS T3 ON T2.driverId = T3.driverId WHERE T1.year BETWEEN 2007 AND 2009 AND T3.nationality = 'Japanese'\t----- bird -----\tformula_1",
    "224": "SELECT AVG(CAST(SUBSTR(T2.time,7,2) AS REAL) * 3600 + CAST(SUBSTR(T2.time,4,2) AS REAL) * 60 + CAST(SUBSTR(T2.time,1,2) AS REAL) + CAST(SUBSTR(T2.time,10,3) AS REAL) / 1000) FROM results AS T1 JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T2.year < 1975 AND T1.position = 1 AND T1.time LIKE '%:%' AND T1.time LIKE '%.%'\t----- bird -----\tformula_1",
    "225": "SELECT T1.fastestLap FROM results AS T1 JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T2.year = 2009 AND T1.position = 1 ORDER BY T1.milliseconds ASC LIMIT 1;\t----- bird -----\tformula_1",
    "226": "SELECT AVG(T2.fastestLapSpeed) FROM races AS T1 JOIN results AS T2 ON T1.raceId = T2.raceId WHERE T1.name = 'Spanish Grand Prix' AND T1.year = 2009\t----- bird -----\tformula_1",
    "227": "SELECT CAST(SUM(IIF(T1.dob < '1985-01-01' AND T2.laps > 50, 1, 0)) AS REAL) * 100 / COUNT(T3.driverId) FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId INNER JOIN races AS T3 ON T2.raceId = T3.raceId WHERE T3.year BETWEEN 2000 AND 2005;\t----- bird -----\tformula_1",
    "228": "SELECT COUNT(DISTINCT T1.driverId) FROM drivers AS T1 JOIN lapTimes AS T2 ON T1.driverId = T2.driverId WHERE T1.nationality = 'French' AND T2.time < '02:00.00' AND T2.milliseconds < 120000;\t----- bird -----\tformula_1",
    "229": "SELECT code FROM drivers WHERE nationality = 'American'\t----- bird -----\tformula_1",
    "230": "SELECT T1.number FROM drivers AS T1 WHERE T1.nationality = 'Dutch' ORDER BY T1.dob ASC LIMIT 3\t----- bird -----\tformula_1",
    "231": "SELECT driverRef FROM drivers WHERE nationality = 'German' AND dob IS NOT NULL ORDER BY dob ASC LIMIT 1;\t----- bird -----\tformula_1",
    "232": "SELECT T1.driverId, T1.code FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId WHERE strftime('%Y', T1.dob) = '1971' AND T2.fastestLapTime IS NOT NULL\t----- bird -----\tformula_1",
    "233": "SELECT COUNT(*) FROM results WHERE raceId BETWEEN 50 AND 100 AND statusId = 2 AND time IS NOT NULL;\t----- bird -----\tformula_1",
    "234": "SELECT T1.name, T1.location, T1.lat, T1.lng FROM circuits AS T1 INNER JOIN races AS T2 ON T1.circuitId = T2.circuitId WHERE T1.country = 'Austria' GROUP BY T1.name\t----- bird -----\tformula_1",
    "235": "SELECT T3.year, T3.name, T3.time FROM (SELECT T1.driverId, T2.raceId, T2.date FROM drivers AS T1 INNER JOIN (SELECT driverId, MIN(date) AS date FROM (SELECT driverId, date FROM races INNER JOIN qualifying ON races.raceId = qualifying.raceId) GROUP BY driverId) AS T2 ON T1.driverId = T2.driverId) AS T3 INNER JOIN races AS T4 ON T3.raceId = T4.raceId INNER JOIN (SELECT driverId, MIN(dob) AS dob FROM drivers GROUP BY driverId) AS T5 ON T3.driverId = T5.driverId ORDER BY T5.dob DESC LIMIT 1\t----- bird -----\tformula_1",
    "236": "SELECT T1.forename, T1.surname FROM drivers AS T1 JOIN pitStops AS T2 ON T1.driverId = T2.driverId WHERE T1.nationality = 'German' AND strftime('%Y', T1.dob) BETWEEN '1980' AND '1985' GROUP BY T2.driverId ORDER BY AVG(T2.duration) LIMIT 3\t----- bird -----\tformula_1",
    "237": "SELECT T1.driverId , T1.time FROM results AS T1 JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T2.name = 'Canadian Grand Prix' AND T2.year = 2008 AND T1.position = 1\t----- bird -----\tformula_1",
    "238": "SELECT T2.constructorRef, T2.url FROM results AS T1 JOIN constructors AS T2 ON T1.constructorId = T2.constructorId WHERE T1.raceId = (SELECT raceId FROM races WHERE name = 'Singapore Grand Prix' AND year = 2009) AND T1.position = 1\t----- bird -----\tformula_1",
    "239": "SELECT T3.power_name FROM superhero AS T1 JOIN hero_power AS T2 ON T1.id = T2.hero_id JOIN superpower AS T3 ON T3.id = T2.power_id WHERE T1.superhero_name = '3-D Man'\t----- bird -----\tsuperhero",
    "240": "SELECT T1.points, T2.name, T2.nationality FROM constructorStandings AS T1 JOIN constructors AS T2 ON T1.constructorId = T2.constructorId JOIN races AS T3 ON T1.raceId = T3.raceId WHERE T3.name = 'Monaco Grand Prix' AND T3.year BETWEEN 1980 AND 2010 ORDER BY T1.points DESC LIMIT 1;\t----- bird -----\tformula_1",
    "241": "SELECT T4.forename, T4.surname FROM races AS T1 JOIN qualifying AS T2 ON T1.raceId = T2.raceId JOIN constructors AS T3 ON T2.constructorId = T3.constructorId JOIN drivers AS T4 ON T2.driverId = T4.driverId WHERE T1.year = 2008 AND T1.circuitId = (SELECT circuitId FROM circuits WHERE name = 'Marina Bay Street Circuit') AND T2.position = 1 AND T2.q3 = (SELECT MIN(q3) FROM qualifying WHERE raceId = T1.raceId AND position = 1)\t----- bird -----\tformula_1",
    "242": "SELECT T1.forename, T1.surname, T1.nationality, T3.name FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId INNER JOIN races AS T3 ON T2.raceId = T3.raceId WHERE T1.dob = (SELECT MAX(T1.dob) FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId)\t----- bird -----\tformula_1",
    "243": "SELECT COUNT(*) FROM results WHERE statusId = 3 AND raceId = (SELECT raceId FROM races WHERE name = 'Canadian Grand Prix') GROUP BY driverId ORDER BY COUNT(*) DESC LIMIT 1\t----- bird -----\tformula_1",
    "244": "SELECT T4.forename, T4.surname FROM (SELECT T1.driverId, T1.time FROM (SELECT driverId, MIN(time) AS time FROM (SELECT driverId, time FROM lapTimes WHERE time NOT NULL) GROUP BY driverId) AS T1 WHERE T1.time IN (SELECT MIN(time) FROM (SELECT driverId, time FROM lapTimes WHERE time NOT NULL) GROUP BY driverId) LIMIT 20) AS T2 JOIN results AS T3 ON T2.driverId = T3.driverId JOIN drivers AS T4 ON T3.driverId = T4.driverId\t----- bird -----\tformula_1",
    "245": "SELECT T1.driverId, T1.raceId, T1.lap, T1.position, T1.time, T1.milliseconds FROM lapTimes AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId INNER JOIN circuits AS T3 ON T2.circuitId = T3.circuitId WHERE T3.country = 'Italy' ORDER BY T1.milliseconds LIMIT 10\t----- bird -----\tformula_1",
    "246": "SELECT COUNT(*) FROM hero_power AS T1 JOIN superhero AS T2 ON T1.hero_id = T2.id JOIN superpower AS T3 ON T1.power_id = T3.id WHERE T3.power_name = 'Super Strength' AND T2.height_cm > 200\t----- bird -----\tsuperhero",
    "247": "SELECT COUNT(*) FROM superhero AS T1 JOIN hero_power AS T2 ON T1.id = T2.hero_id JOIN superpower AS T3 ON T2.power_id = T3.id JOIN colour AS T4 ON T1.eye_colour_id = T4.id WHERE T4.colour = 'Blue' AND T3.power_name = 'Agility'\t----- bird -----\tsuperhero",
    "248": "SELECT T1.superhero_name FROM superhero AS T1 JOIN colour AS T2 ON T1.eye_colour_id = T2.id JOIN colour AS T3 ON T1.hair_colour_id = T3.id WHERE T2.colour = 'Blue' AND T3.colour = 'Blond'\t----- bird -----\tsuperhero",
    "249": "SELECT T1.superhero_name FROM superhero AS T1 JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T2.publisher_name = 'Marvel Comics' ORDER BY T1.height_cm DESC\t----- bird -----\tsuperhero",
    "250": "SELECT T1.id, T1.superhero_name, T3.colour FROM superhero AS T1 INNER JOIN colour AS T3 ON T1.eye_colour_id = T3.id INNER JOIN publisher AS T4 ON T1.publisher_id = T4.id WHERE T4.publisher_name = 'Marvel Comics' GROUP BY T1.id, T1.superhero_name, T3.colour ORDER BY COUNT(T1.id) DESC\t----- bird -----\tsuperhero",
    "251": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id INNER JOIN publisher AS T4 ON T1.publisher_id = T4.id WHERE T3.power_name = 'Super Strength' AND T4.publisher_name = 'Marvel Comics'\t----- bird -----\tsuperhero",
    "252": "SELECT T5.publisher_name FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id INNER JOIN attribute AS T3 ON T2.attribute_id = T3.id INNER JOIN publisher AS T5 ON T1.publisher_id = T5.id WHERE T3.attribute_name = 'Speed' ORDER BY T2.attribute_value ASC LIMIT 1\t----- bird -----\tsuperhero",
    "253": "SELECT COUNT(*) FROM superhero WHERE publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics') AND eye_colour_id = (SELECT id FROM colour WHERE colour = 'Gold')\t----- bird -----\tsuperhero",
    "254": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id INNER JOIN attribute AS T3 ON T2.attribute_id = T3.id WHERE T3.attribute_name = 'Intelligence' ORDER BY T2.attribute_value LIMIT 1\t----- bird -----\tsuperhero",
    "255": "SELECT T2.race FROM superhero AS T1 JOIN race AS T2 ON T1.race_id = T2.id WHERE T1.superhero_name = 'Copycat'\t----- bird -----\tsuperhero",
    "256": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id INNER JOIN attribute AS T3 ON T2.attribute_id = T3.id WHERE T3.attribute_name = 'Durability' AND T2.attribute_value < 50\t----- bird -----\tsuperhero",
    "257": "SELECT T1.superhero_name FROM superhero AS T1 JOIN hero_power AS T2 ON T1.id = T2.hero_id JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T3.power_name = 'Death Touch'\t----- bird -----\tsuperhero",
    "258": "SELECT COUNT(*) FROM superhero AS T1 JOIN hero_attribute AS T2 ON T1.id = T2.hero_id JOIN attribute AS T3 ON T2.attribute_id = T3.id WHERE T3.attribute_name = 'Strength' AND T2.attribute_value = 100 AND T1.gender_id = (SELECT id FROM gender WHERE gender = 'Female')\t----- bird -----\tsuperhero",
    "259": "SELECT CAST(SUM(CASE WHEN T1.alignment = 'Bad' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.id), SUM(CASE WHEN T1.alignment = 'Bad' AND T3.publisher_name = 'Marvel Comics' THEN 1 ELSE 0 END) FROM alignment AS T1 INNER JOIN superhero AS T2 ON T1.id = T2.alignment_id INNER JOIN publisher AS T3 ON T3.id = T2.publisher_id\t----- bird -----\tsuperhero",
    "260": "SELECT SUM(CASE WHEN T1.publisher_name = 'Marvel Comics' THEN 1 ELSE 0 END) - SUM(CASE WHEN T1.publisher_name = 'DC Comics' THEN 1 ELSE 0 END) FROM publisher AS T1 INNER JOIN superhero AS T2 ON T1.id = T2.publisher_id\t----- bird -----\tsuperhero",
    "261": "SELECT id FROM publisher WHERE publisher_name = 'Star Trek'\t----- bird -----\tsuperhero",
    "262": "SELECT COUNT(*) FROM superhero WHERE full_name IS NULL\t----- bird -----\tsuperhero",
    "263": "SELECT AVG(T1.weight_kg) FROM superhero AS T1 INNER JOIN gender AS T2 ON T1.gender_id = T2.id WHERE T2.gender = 'Female'\t----- bird -----\tsuperhero",
    "264": "SELECT T3.power_name FROM superhero AS T1 JOIN gender AS T2 ON T1.gender_id = T2.id JOIN hero_power AS T4 ON T1.id = T4.hero_id JOIN superpower AS T3 ON T3.id = T4.power_id WHERE T2.gender = 'Male' LIMIT 5\t----- bird -----\tsuperhero",
    "265": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T1.height_cm BETWEEN 170 AND 190 AND T2.colour = 'No Colour'\t----- bird -----\tsuperhero",
    "266": "SELECT T3.colour FROM superhero AS T1 JOIN colour AS T3 ON T1.hair_colour_id = T3.id JOIN race AS T4 ON T1.race_id = T4.id WHERE T1.height_cm = 185 AND T4.race = 'human'\t----- bird -----\tsuperhero",
    "267": "SELECT CAST(SUM(CASE WHEN T2.publisher_name = 'Marvel Comics' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T2.publisher_name) FROM superhero AS T1 JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T1.height_cm BETWEEN 150 AND 180\t----- bird -----\tsuperhero",
    "268": "SELECT T1.superhero_name FROM superhero AS T1 JOIN gender AS T2 ON T1.gender_id = T2.id WHERE T2.gender = 'Male' AND T1.weight_kg > (SELECT AVG(T1.weight_kg) * 0.79 FROM superhero AS T1 JOIN gender AS T2 ON T1.gender_id = T2.id WHERE T2.gender = 'Male')\t----- bird -----\tsuperhero",
    "269": "SELECT T2.power_name FROM hero_power AS T1 INNER JOIN superpower AS T2 ON T1.power_id = T2.id WHERE T1.hero_id = 1\t----- bird -----\tsuperhero",
    "270": "SELECT COUNT(*) FROM hero_power WHERE power_id IN (SELECT id FROM superpower WHERE power_name = 'Stealth')\t----- bird -----\tsuperhero",
    "271": "SELECT T3.full_name FROM hero_attribute AS T1 JOIN attribute AS T2 ON T1.attribute_id = T2.id JOIN superhero AS T3 ON T1.hero_id = T3.id WHERE T2.attribute_name = 'strength' ORDER BY T1.attribute_value DESC LIMIT 1\t----- bird -----\tsuperhero",
    "272": "SELECT T1.superhero_name FROM superhero AS T1 JOIN hero_attribute AS T2 ON T1.id = T2.hero_id JOIN attribute AS T3 ON T2.attribute_id = T3.id JOIN publisher AS T4 ON T1.publisher_id = T4.id WHERE T3.attribute_name = 'durability' AND T4.publisher_name = 'Dark Horse Comics' ORDER BY T2.attribute_value DESC LIMIT 1\t----- bird -----\tsuperhero",
    "273": "SELECT T3.colour, T4.colour, T5.colour FROM superhero AS T1 JOIN gender AS T2 ON T1.gender_id = T2.id JOIN colour AS T3 ON T1.eye_colour_id = T3.id JOIN colour AS T4 ON T1.hair_colour_id = T4.id JOIN colour AS T5 ON T1.skin_colour_id = T5.id JOIN publisher AS T6 ON T1.publisher_id = T6.id WHERE T2.gender = 'Female' AND T6.publisher_name = 'Dark Horse Comics'\t----- bird -----\tsuperhero",
    "274": "SELECT T1.superhero_name, T3.publisher_name FROM superhero AS T1 INNER JOIN publisher AS T3 ON T1.publisher_id = T3.id WHERE T1.eye_colour_id = T1.skin_colour_id AND T1.hair_colour_id = T1.skin_colour_id\t----- bird -----\tsuperhero",
    "275": "SELECT CAST(SUM(CASE WHEN T3.colour = 'Blue' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T2.gender) FROM superhero AS T1 JOIN gender AS T2 ON T1.gender_id = T2.id JOIN colour AS T3 ON T1.skin_colour_id = T3.id WHERE T2.gender = 'Female' AND T3.colour = 'Blue'\t----- bird -----\tsuperhero",
    "276": "SELECT COUNT(*) FROM hero_power WHERE hero_id = (SELECT id FROM superhero WHERE superhero_name = 'Amazo')\t----- bird -----\tsuperhero",
    "277": "SELECT T1.height_cm FROM superhero AS T1 JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T2.colour = 'Amber'\t----- bird -----\tsuperhero",
    "278": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id AND T1.hair_colour_id = T2.id WHERE T2.colour = 'Black'\t----- bird -----\tsuperhero",
    "279": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN alignment AS T2 ON T1.alignment_id = T2.id WHERE T2.alignment = 'Neutral'\t----- bird -----\tsuperhero",
    "280": "SELECT COUNT(*) FROM hero_attribute WHERE attribute_value IN (SELECT MAX(attribute_value) FROM hero_attribute WHERE attribute_id IN (SELECT id FROM attribute WHERE attribute_name = 'Strength')) AND attribute_id IN (SELECT id FROM attribute WHERE attribute_name = 'Strength')\t----- bird -----\tsuperhero",
    "281": "SELECT CAST(SUM(CASE WHEN T3.gender = 'Female' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T5.publisher_name) FROM superhero AS T1 INNER JOIN publisher AS T5 ON T1.publisher_id = T5.id INNER JOIN gender AS T3 ON T1.gender_id = T3.id WHERE T5.publisher_name = 'Marvel Comics'\t----- bird -----\tsuperhero",
    "282": "SELECT (SELECT weight_kg FROM superhero WHERE full_name = 'Emil Blonsky') - (SELECT weight_kg FROM superhero WHERE full_name = 'Charles Chandler') AS difference\t----- bird -----\tsuperhero",
    "283": "SELECT AVG(height_cm) FROM superhero WHERE height_cm IS NOT NULL\t----- bird -----\tsuperhero",
    "284": "SELECT T3.power_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T1.superhero_name = 'Abomination'\t----- bird -----\tsuperhero",
    "285": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id INNER JOIN attribute AS T3 ON T2.attribute_id = T3.id WHERE T3.attribute_name = 'Speed' ORDER BY T2.attribute_value DESC LIMIT 1\t----- bird -----\tsuperhero",
    "286": "SELECT T3.attribute_name, T2.attribute_value FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id INNER JOIN attribute AS T3 ON T2.attribute_id = T3.id WHERE T1.superhero_name = '3-D Man'\t----- bird -----\tsuperhero",
    "287": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id INNER JOIN colour AS T3 ON T1.hair_colour_id = T3.id WHERE T2.colour = 'Blue' AND T3.colour = 'Brown'\t----- bird -----\tsuperhero",
    "288": "SELECT T.publisher_name FROM publisher AS T WHERE T.id IN (SELECT T1.publisher_id FROM superhero AS T1 WHERE T1.superhero_name IN ('Hawkman', 'Karate Kid', 'Speedy')) GROUP BY T.publisher_name HAVING COUNT(*) = 3\t----- bird -----\tsuperhero",
    "289": "SELECT CAST(SUM(CASE WHEN T2.colour = 'Blue' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.superhero_name) FROM superhero AS T1 JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T2.id = 7\t----- bird -----\tsuperhero",
    "290": "SELECT CAST(SUM(CASE WHEN T2.gender = 'Male' THEN 1 ELSE 0 END) AS REAL) / SUM(CASE WHEN T2.gender = 'Female' THEN 1 ELSE 0 END) FROM superhero AS T1 INNER JOIN gender AS T2 ON T1.gender_id = T2.id WHERE T2.gender IN ('Male', 'Female')\t----- bird -----\tsuperhero",
    "291": "SELECT T2.colour FROM superhero AS T1 JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T1.full_name = 'Karen Beecher-Duncan'\t----- bird -----\tsuperhero",
    "292": "SELECT (SELECT COUNT(*) FROM superhero WHERE eye_colour_id = 7 AND (weight_kg = 0 OR weight_kg IS NULL)) - (SELECT COUNT(*) FROM superhero WHERE eye_colour_id = 1 AND (weight_kg = 0 OR weight_kg IS NULL)) AS difference\t----- bird -----\tsuperhero",
    "293": "SELECT COUNT(*) FROM superhero WHERE skin_colour_id IN (SELECT id FROM colour WHERE colour = 'Green') AND alignment_id IN (SELECT id FROM alignment WHERE alignment = 'Bad')\t----- bird -----\tsuperhero",
    "294": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T3.power_name = 'Wind Control' ORDER BY T1.superhero_name ASC\t----- bird -----\tsuperhero",
    "295": "SELECT T4.gender FROM hero_power AS T1 JOIN superpower AS T2 ON T1.power_id = T2.id JOIN superhero AS T3 ON T1.hero_id = T3.id JOIN gender AS T4 ON T3.gender_id = T4.id WHERE T2.power_name = 'Phoenix Force'\t----- bird -----\tsuperhero",
    "296": "SELECT SUM(CASE WHEN T2.publisher_name = 'DC Comics' THEN 1 ELSE 0 END) - SUM(CASE WHEN T2.publisher_name = 'Marvel Comics' THEN 1 ELSE 0 END) FROM superhero AS T1 JOIN publisher AS T2 ON T1.publisher_id = T2.id\t----- bird -----\tsuperhero",
    "297": "SELECT MAX(Reputation) FROM users WHERE DisplayName = 'Harlan' OR DisplayName = 'Jarrod Dixon' AND DisplayName IN ('Harlan', 'Jarrod Dixon')\t----- bird -----\tcodebase_community",
    "298": "SELECT DisplayName FROM users WHERE STRFTIME('%Y', CreationDate) = '2011'\t----- bird -----\tcodebase_community",
    "299": "SELECT COUNT(*) FROM users WHERE LastAccessDate > '2014-09-01'\t----- bird -----\tcodebase_community",
    "300": "SELECT T1.DisplayName FROM users AS T1 INNER JOIN posts AS T2 ON T1.Id = T2.OwnerUserId WHERE T2.Title = 'Eliciting priors from experts'\t----- bird -----\tcodebase_community",
    "301": "SELECT COUNT(*) FROM posts WHERE OwnerUserId = (SELECT Id FROM users WHERE DisplayName = 'csgillespie')\t----- bird -----\tcodebase_community",
    "302": "SELECT T2.DisplayName FROM posts AS T1 JOIN users AS T2 ON T1.LastEditorUserId = T2.Id WHERE T1.Title = 'Examples for teaching: Correlation does not mean causation'\t----- bird -----\tcodebase_community",
    "303": "SELECT COUNT(*) FROM posts WHERE OwnerUserId IN (SELECT Id FROM users WHERE Age > 65) AND Score >= 20;\t----- bird -----\tcodebase_community",
    "304": "SELECT T1.Body FROM posts AS T1 INNER JOIN tags AS T2 ON T1.Id = T2.ExcerptPostId WHERE T2.TagName = 'bayesian'\t----- bird -----\tcodebase_community",
    "305": "SELECT AVG(T1.Score) FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.DisplayName = 'csgillespie'\t----- bird -----\tcodebase_community",
    "306": "SELECT CAST(SUM(CASE WHEN T2.Age > 65 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.Id) FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T1.Score > 5\t----- bird -----\tcodebase_community",
    "307": "SELECT COUNT(*) FROM (SELECT T1.PostId AS PostId FROM postLinks AS T1 INNER JOIN comments AS T2 ON T1.PostId = T2.PostId WHERE T2.UserId = 3025 AND T2.CreationDate = '2014-04-23 20:29:39' GROUP BY T1.PostId) AS T1 INNER JOIN posts AS T2 ON T1.PostId = T2.Id WHERE T2.FavoriteCount IS NOT NULL\t----- bird -----\tcodebase_community",
    "308": "SELECT CASE WHEN T2.ClosedDate IS NULL THEN 'not well-finished' ELSE 'well-finished' END FROM (SELECT PostId FROM comments WHERE UserId = 23853 AND CreationDate = '2013-07-12 09:08:18.0') AS T1 INNER JOIN posts AS T2 ON T1.PostId = T2.Id\t----- bird -----\tcodebase_community",
    "309": "SELECT COUNT(*) FROM posts WHERE OwnerUserId = (SELECT Id FROM users WHERE DisplayName = 'Tiago Pasqualini')\t----- bird -----\tcodebase_community",
    "310": "SELECT T2.DisplayName FROM votes AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T1.Id = 6347\t----- bird -----\tcodebase_community",
    "311": "SELECT CAST(COUNT(T1.Id) AS REAL) / COUNT(T2.Id) FROM posts AS T1 INNER JOIN votes AS T2 ON T1.OwnerUserId = T2.UserId WHERE T1.OwnerUserId = 24\t----- bird -----\tcodebase_community",
    "312": "SELECT ViewCount FROM posts WHERE Title = 'Integration of Weka and/or RapidMiner into Informatica PowerCenter/Developer'\t----- bird -----\tcodebase_community",
    "313": "SELECT Text FROM comments WHERE Score = 17;\t----- bird -----\tcodebase_community",
    "314": "SELECT T1.DisplayName FROM users AS T1 INNER JOIN comments AS T2 ON T1.Id = T2.UserId WHERE T2.Text = 'thank you user93!'\t----- bird -----\tcodebase_community",
    "315": "SELECT T2.DisplayName, T2.Reputation FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T1.Title = 'Understanding what Dassault iSight is doing?'\t----- bird -----\tcodebase_community",
    "316": "SELECT T2.DisplayName FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T1.Title = 'Open source tools for visualizing multi-dimensional data'\t----- bird -----\tcodebase_community",
    "317": "SELECT c.Text FROM comments c JOIN postHistory ph ON c.PostId = ph.PostId WHERE ph.Comment LIKE '%Why square the difference instead of taking the absolute value in standard deviation?%'\t----- bird -----\tcodebase_community",
    "318": "SELECT T3.DisplayName FROM votes AS T1 INNER JOIN posts AS T2 ON T1.PostId = T2.Id INNER JOIN users AS T3 ON T1.UserId = T3.Id WHERE T1.BountyAmount = 50 AND T2.Title LIKE '%variance%'\t----- bird -----\tcodebase_community",
    "319": "SELECT T1.Title, T2.Text, AVG(T1.ViewCount) AS AverageViewCount FROM posts AS T1 INNER JOIN comments AS T2 ON T1.Id = T2.PostId WHERE T1.Tags LIKE '%<humor>%' GROUP BY T1.Id, T2.Text\t----- bird -----\tcodebase_community",
    "320": "SELECT COUNT(*) FROM (SELECT UserId, COUNT(*) AS badge_count FROM badges GROUP BY UserId HAVING badge_count > 5)\t----- bird -----\tcodebase_community",
    "321": "SELECT UserId FROM postHistory WHERE PostId IN (SELECT Id FROM posts WHERE ViewCount >= 1000) GROUP BY UserId HAVING COUNT(*) = 1\t----- bird -----\tcodebase_community",
    "322": "SELECT CAST((SUM(CASE WHEN strftime('%Y', T1.Date) = '2010' THEN 1 ELSE 0 END) - SUM(CASE WHEN strftime('%Y', T1.Date) = '2011' THEN 1 ELSE 0 END)) AS REAL) * 100 / SUM(CASE WHEN T1.Name = 'Student' THEN 1 ELSE 0 END) FROM badges AS T1 WHERE T1.Name = 'Student'\t----- bird -----\tcodebase_community",
    "323": "SELECT CAST(SUM(T2.UpVotes) AS REAL) / COUNT(T2.Id) AS AvgUpVotes, CAST(SUM(T1.Age) AS REAL) / COUNT(T1.Id) AS AvgAge FROM users AS T1 INNER JOIN (SELECT OwnerUserId, COUNT(Id) AS cnt, SUM(CASE WHEN PostTypeId = 1 THEN 1 ELSE 0 END) AS question, SUM(CASE WHEN PostTypeId = 2 THEN 1 ELSE 0 END) AS answer FROM posts GROUP BY OwnerUserId HAVING COUNT(Id) > 10) AS T2 ON T1.Id = T2.OwnerUserId WHERE T1.Id = T2.OwnerUserId\t----- bird -----\tcodebase_community",
    "324": "SELECT CAST(SUM(CASE WHEN STRFTIME('%Y', CreationDate) = '2010' THEN 1 ELSE 0 END) AS REAL) / SUM(CASE WHEN STRFTIME('%Y', CreationDate) = '2011' THEN 1 ELSE 0 END) FROM votes WHERE STRFTIME('%Y', CreationDate) IN ('2010', '2011')\t----- bird -----\tcodebase_community",
    "325": "SELECT T1.Id FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.DisplayName = 'slashnick' AND T1.AnswerCount = (SELECT MAX(T3.AnswerCount) FROM posts AS T3 INNER JOIN users AS T4 ON T3.OwnerUserId = T4.Id WHERE T4.DisplayName = 'slashnick')\t----- bird -----\tcodebase_community",
    "326": "SELECT OwnerUserId, SUM(ViewCount) as TotalViewCount FROM posts WHERE OwnerUserId IN (SELECT Id FROM users WHERE DisplayName = 'Harvey Motulsky' OR DisplayName = 'Noah Snyder') GROUP BY OwnerUserId ORDER BY TotalViewCount DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "327": "SELECT T1.TagName FROM tags AS T1 INNER JOIN posts AS T2 ON T1.Id = T2.Tags WHERE T2.CommentCount = 0 AND T2.OwnerUserId IN (SELECT Id FROM users WHERE DisplayName = 'Mark Meckes')\t----- bird -----\tcodebase_community",
    "328": "SELECT CAST(SUM(CASE WHEN T3.TagName = 'r' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.Id) FROM Posts AS T1 INNER JOIN PostTags AS T2 ON T1.Id = T2.PostId INNER JOIN Tags AS T3 ON T3.Id = T2.TagId WHERE T1.OwnerUserId = (SELECT Id FROM Users WHERE DisplayName = 'Community')\t----- bird -----\tcodebase_community",
    "329": "SELECT (SELECT SUM(T1.ViewCount) FROM posts AS T1 WHERE T1.OwnerDisplayName = 'Mornington') - (SELECT SUM(T2.ViewCount) FROM posts AS T2 WHERE T2.OwnerDisplayName = 'Amos') AS difference;\t----- bird -----\tcodebase_community",
    "330": "SELECT CAST(COUNT(T1.Id) AS REAL) / 12 FROM postLinks AS T1 JOIN posts AS T2 ON T1.PostId = T2.Id WHERE STRFTIME('%Y', T1.CreationDate) = '2010' AND T2.AnswerCount <= 2\t----- bird -----\tcodebase_community",
    "331": "SELECT MIN(CreationDate) FROM votes WHERE UserId IN (SELECT Id FROM users WHERE DisplayName = 'chl')\t----- bird -----\tcodebase_community",
    "332": "SELECT T2.DisplayName FROM badges AS T1 JOIN users AS T2 ON T1.UserId = T2.Id WHERE T1.Name = 'Autobiographer' ORDER BY T1.Date ASC LIMIT 1\t----- bird -----\tcodebase_community",
    "333": "SELECT COUNT(DISTINCT u.Id) FROM users u WHERE u.Location = 'United Kingdom' AND EXISTS (SELECT 1 FROM posts p WHERE p.OwnerUserId = u.Id AND p.FavoriteCount >= 4)\t----- bird -----\tcodebase_community",
    "334": "SELECT T1.Id, T1.Title FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.DisplayName = 'Harvey Motulsky' AND T1.ViewCount = (SELECT MAX(ViewCount) FROM posts WHERE OwnerUserId = (SELECT Id FROM users WHERE DisplayName = 'Harvey Motulsky'))\t----- bird -----\tcodebase_community",
    "335": "SELECT T1.Id, T2.DisplayName FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE strftime('%Y', T1.CreationDate) = '2010' ORDER BY T1.FavoriteCount DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "336": "SELECT CAST(SUM(CASE WHEN T2.Reputation > 1000 AND strftime('%Y', T1.CreationDate) = '2011' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.Id) FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T1.CreationDate BETWEEN '2011-01-01 00:00:00' AND '2011-12-31 23:59:59'\t----- bird -----\tcodebase_community",
    "337": "SELECT T1.ViewCount, T3.DisplayName FROM posts AS T1 INNER JOIN users AS T3 ON T1.OwnerUserId = T3.Id INNER JOIN comments AS T2 ON T1.Id = T2.PostId WHERE T2.Text = 'Computer Game Datasets' ORDER BY T1.LastEditDate DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "338": "SELECT COUNT(*) FROM comments WHERE PostId = (SELECT Id FROM posts WHERE Score = (SELECT MAX(Score) FROM posts));\t----- bird -----\tcodebase_community",
    "339": "SELECT c.Text, u.DisplayName FROM comments c JOIN users u ON c.UserId = u.Id JOIN posts p ON c.PostId = p.Id WHERE p.Title = 'Analysing wind data with R' ORDER BY c.CreationDate DESC LIMIT 10\t----- bird -----\tcodebase_community",
    "340": "SELECT CAST(SUM(CASE WHEN p.Score > 50 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(p.Id) FROM posts AS p JOIN users AS u ON p.OwnerUserId = u.Id WHERE u.Reputation = (SELECT MAX(Reputation) FROM users)\t----- bird -----\tcodebase_community",
    "341": "SELECT ExcerptPostId, WikiPostId FROM tags WHERE TagName = 'sample'\t----- bird -----\tcodebase_community",
    "342": "SELECT T2.Reputation, T2.UpVotes FROM comments AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T1.Text = 'fine, you win :)'\t----- bird -----\tcodebase_community",
    "343": "SELECT T2.Text FROM (SELECT PostId, MAX(Score) AS Score FROM comments WHERE PostId IN (SELECT Id FROM posts WHERE ViewCount BETWEEN 100 AND 150) GROUP BY PostId) AS T1 JOIN comments AS T2 ON T1.PostId = T2.PostId AND T1.Score = T2.Score WHERE T2.Score = (SELECT MAX(Score) FROM (SELECT PostId, MAX(Score) AS Score FROM comments WHERE PostId IN (SELECT Id FROM posts WHERE ViewCount BETWEEN 100 AND 150) GROUP BY PostId))\t----- bird -----\tcodebase_community",
    "344": "SELECT COUNT(*) FROM (SELECT c.PostId FROM comments c JOIN posts p ON c.PostId = p.Id WHERE c.Score = 0 AND p.CommentCount = 1 GROUP BY c.PostId)\t----- bird -----\tcodebase_community",
    "345": "SELECT CAST(SUM(CASE WHEN T2.UpVotes = 0 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T2.UpVotes) FROM (SELECT UserId FROM comments WHERE Score BETWEEN 5 AND 10) AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id\t----- bird -----\tcodebase_community",
    "346": "SELECT id FROM cards WHERE cardKingdomFoilId IS NOT NULL AND cardKingdomId IS NOT NULL;\t----- bird -----\tcard_games",
    "347": "SELECT name FROM cards WHERE borderColor = 'borderless' AND cardKingdomFoilId IS NULL OR cardKingdomId IS NULL;\t----- bird -----\tcard_games",
    "348": "SELECT c.name FROM cards AS c JOIN legalities AS l ON c.uuid = l.uuid WHERE c.rarity = 'mythic' AND l.format = 'gladiator' AND l.status = 'Banned'\t----- bird -----\tcard_games",
    "349": "SELECT T2.status FROM cards AS T1 JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.types = 'Artifact' AND T1.side IS NULL AND T2.format = 'vintage'\t----- bird -----\tcard_games",
    "350": "SELECT T1.id, T1.artist FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.power = '*' OR T1.power IS NULL AND T2.format = 'commander' AND T2.status = 'Legal'\t----- bird -----\tcard_games",
    "351": "SELECT T1.uuid FROM cards AS T1 INNER JOIN rulings AS T2 ON T1.uuid = T2.uuid WHERE T1.artist = 'Stephen Daniel' AND T1.hasContentWarning = 1;\t----- bird -----\tcard_games",
    "352": "SELECT T1.name, T1.artist, T1.isPromo FROM cards AS T1 INNER JOIN (SELECT uuid, COUNT(uuid) AS cnt FROM rulings GROUP BY uuid ORDER BY cnt DESC LIMIT 1) AS T2 ON T1.uuid = T2.uuid\t----- bird -----\tcard_games",
    "353": "SELECT CAST(SUM(CASE WHEN T2.language = 'Chinese Simplified' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T2.language) FROM (SELECT * FROM foreign_data WHERE language = 'Chinese Simplified') AS T2\t----- bird -----\tcard_games",
    "354": "SELECT COUNT(*) FROM cards WHERE power = '*'\t----- bird -----\tcard_games",
    "355": "SELECT borderColor FROM cards WHERE name = 'Ancestor''s Chosen';\t----- bird -----\tcard_games",
    "356": "SELECT T2.format FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.name = 'Benalish Knight'\t----- bird -----\tcard_games",
    "357": "SELECT CAST(SUM(CASE WHEN borderColor = 'borderless' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(id) FROM cards\t----- bird -----\tcard_games",
    "358": "SELECT CAST(SUM(CASE WHEN T2.language = 'French' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.id) FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.isStorySpotlight = 1 AND T2.language = 'French' UNION SELECT COUNT(id) FROM cards WHERE isStorySpotlight = 1;\t----- bird -----\tcard_games",
    "359": "SELECT COUNT(*) FROM cards WHERE originalType = 'Summon - Angel' AND uuid NOT IN (SELECT uuid FROM cards WHERE subtypes = 'Angel')\t----- bird -----\tcard_games",
    "360": "SELECT id FROM cards WHERE duelDeck = 'a';\t----- bird -----\tcard_games",
    "361": "SELECT COUNT(*) FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T2.status = 'Banned' AND T1.borderColor = 'white'\t----- bird -----\tcard_games",
    "362": "SELECT c.name, c.uuid, fd.language FROM cards AS c JOIN foreign_data AS fd ON c.uuid = fd.uuid WHERE c.originalType = 'Artifact' AND c.colors = 'B' AND fd.language IS NOT NULL\t----- bird -----\tcard_games",
    "363": "SELECT T1.manaCost FROM cards AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T1.layout = 'normal' AND T1.frameVersion = '2003' AND T1.borderColor = 'black' AND T2.type = 'mtgo,paper'\t----- bird -----\tcard_games",
    "364": "SELECT CAST(SUM(CASE WHEN isStorySpotlight = 1 AND isTextless = 0 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM cards WHERE isStorySpotlight = 1 AND isTextless = 0;\t----- bird -----\tcard_games",
    "365": "SELECT COUNT(*) FROM set_translations WHERE language = 'Portuguese (Brasil)' AND set_translations.setCode IN (SELECT id FROM sets WHERE block = 'Commander')\t----- bird -----\tcard_games",
    "366": "SELECT DISTINCT T1.subtypes, T1.supertypes FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T2.language = 'German' AND T1.subtypes IS NOT NULL AND T1.supertypes IS NOT NULL\t----- bird -----\tcard_games",
    "367": "SELECT COUNT(*) FROM cards WHERE (power IS NULL OR power = '*') AND text LIKE '%triggered ability%'\t----- bird -----\tcard_games",
    "368": "SELECT COUNT(*) FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T2.format = 'premodern' AND T1.side IS NULL AND EXISTS(SELECT * FROM rulings AS T3 WHERE T3.uuid = T1.uuid AND T3.text = 'This is a triggered mana ability.')\t----- bird -----\tcard_games",
    "369": "SELECT T2.name FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.layout = 'normal' AND T1.borderColor = 'black' AND T1.type = 'Creature' AND T2.language = 'French' AND T1.artist = 'Matthew D. Wilson'\t----- bird -----\tcard_games",
    "370": "SELECT T2.translation FROM sets AS T1 JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T1.baseSetSize = 180 AND T1.block = 'Ravnica'\t----- bird -----\tcard_games",
    "371": "SELECT CAST(SUM(IIF(T2.format = 'commander' AND T3.status = 'legal' AND T1.hasContentWarning = 0, 1, 0)) AS REAL) * 100 / COUNT(T1.id) FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid INNER JOIN legalities AS T3 ON T1.uuid = T3.uuid WHERE T2.format = 'commander' AND T3.status = 'legal'\t----- bird -----\tcard_games",
    "372": "SELECT CAST(SUM(CASE WHEN T2.language = 'French' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.power) FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.power IS NULL OR T1.power = '*'\t----- bird -----\tcard_games",
    "373": "SELECT language FROM foreign_data WHERE multiverseid = 149934;\t----- bird -----\tcard_games",
    "374": "SELECT CAST(SUM(IIF(isTextless = 1 AND layout = 'normal', 1, 0)) AS REAL) * 100 / COUNT(*) FROM cards WHERE layout = 'normal'\t----- bird -----\tcard_games",
    "375": "SELECT T2.language FROM sets AS T1 JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T1.mcmName = 'Archenemy' AND T1.code = 'ARC'\t----- bird -----\tcard_games",
    "376": "SELECT T2.language FROM foreign_data AS T2 INNER JOIN cards AS T1 ON T2.uuid = T1.uuid WHERE T1.name = 'A Pedra Fellwar'\t----- bird -----\tcard_games",
    "377": "SELECT name FROM cards WHERE name IN ('Serra Angel', 'Shrine Keeper') AND convertedManaCost = (SELECT MAX(convertedManaCost) FROM cards WHERE name IN ('Serra Angel', 'Shrine Keeper'))\t----- bird -----\tcard_games",
    "378": "SELECT T2.translation FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T1.name = 'Ancestor''s Chosen' AND T2.language = 'Italian'\t----- bird -----\tcard_games",
    "379": "SELECT EXISTS(SELECT 1 FROM foreign_data WHERE uuid IN (SELECT uuid FROM cards WHERE name = 'Ancestor''s Chosen') AND language = 'Korean') AS isKoreanVersionAvailable\t----- bird -----\tcard_games",
    "380": "SELECT COUNT(*) FROM cards JOIN sets ON cards.setCode = sets.code JOIN set_translations ON sets.code = set_translations.setCode WHERE set_translations.translation = 'Hauptset Zehnte Edition' AND cards.artist = 'Adam Rex'\t----- bird -----\tcard_games",
    "381": "SELECT T2.translation FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T1.name = 'Eighth Edition' AND T2.language = 'Chinese Simplified'\t----- bird -----\tcard_games",
    "382": "SELECT T1.uuid FROM cards AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T1.name = 'Angel of Mercy' AND T2.mtgoCode IS NOT NULL\t----- bird -----\tcard_games",
    "383": "SELECT COUNT(*) FROM sets AS T1 JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T1.block = 'Ice Age' AND T2.language = 'Italian' AND T2.translation IS NOT NULL\t----- bird -----\tcard_games",
    "384": "SELECT T1.name FROM cards AS T1 WHERE T1.name = 'Adarkar Valkyrie' AND T1.isForeignOnly = 1\t----- bird -----\tcard_games",
    "385": "SELECT COUNT(*) FROM sets WHERE code IN (SELECT setCode FROM set_translations WHERE language = 'Italian' AND translation IS NOT NULL) AND baseSetSize < 100;\t----- bird -----\tcard_games",
    "386": "SELECT T1.artist FROM cards AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T2.name = 'Coldsnap' AND T1.artist IN ('Jeremy Jarvis', 'Aaron Miller', 'Chippy')\t----- bird -----\tcard_games",
    "387": "SELECT COUNT(*) FROM cards WHERE convertedManaCost > 5 AND (power = '*' OR power IS NULL) AND setCode = 'CNS'\t----- bird -----\tcard_games",
    "388": "SELECT flavorText FROM foreign_data WHERE uuid IN (SELECT uuid FROM cards WHERE name = 'Ancestor''s Chosen') AND language = 'Italian'\t----- bird -----\tcard_games",
    "389": "SELECT T2.text FROM cards AS T1 INNER JOIN rulings AS T2 ON T1.uuid = T2.uuid INNER JOIN set_translations AS T3 ON T3.setCode = T1.setCode WHERE T3.translation = 'Coldsnap' GROUP BY T2.text ORDER BY T2.date DESC LIMIT 100\t----- bird -----\tcard_games",
    "390": "SELECT T2.name FROM foreign_data AS T2 INNER JOIN cards AS T1 ON T1.uuid = T2.uuid WHERE T1.setCode = 'Coldsnap' AND T2.language = 'Italian' AND T1.convertedManaCost = (SELECT MAX(T1.convertedManaCost) FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.setCode = 'Coldsnap' AND T2.language = 'Italian')\t----- bird -----\tcard_games",
    "391": "SELECT CAST(SUM(CASE WHEN T1.convertedManaCost = 7 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM cards AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T2.name = 'Coldsnap'\t----- bird -----\tcard_games",
    "392": "SELECT CAST(SUM(IIF(T1.cardKingdomFoilId IS NOT NULL AND T1.cardKingdomId IS NOT NULL, 1, 0)) AS REAL) * 100 / COUNT(T1.cardKingdomId) FROM cards AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T2.name = 'Coldsnap'\t----- bird -----\tcard_games",
    "393": "SELECT T1.format, T2.name FROM legalities AS T1 JOIN cards AS T2 ON T1.uuid = T2.uuid WHERE T1.status = 'Banned' GROUP BY T1.format ORDER BY COUNT(T1.status) DESC LIMIT 1\t----- bird -----\tcard_games",
    "394": "SELECT T1.name, T2.format FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.edhrecRank = 1 AND T2.status = 'Banned'\t----- bird -----\tcard_games",
    "395": "SELECT T1.name, T3.format FROM cards AS T1 INNER JOIN legalities AS T3 ON T1.uuid = T3.uuid INNER JOIN sets AS T2 ON T2.code = T1.setCode WHERE T2.name = 'Hour of Devastation' AND T3.status = 'Legal' GROUP BY T3.format, T1.name\t----- bird -----\tcard_games",
    "396": "SELECT T2.name FROM set_translations AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T1.language = 'Korean' AND NOT EXISTS(SELECT * FROM set_translations WHERE T2.code = setCode AND language LIKE '%Japanese%') GROUP BY T2.name\t----- bird -----\tcard_games",
    "397": "SELECT T1.frameVersion, T1.name, T2.status FROM cards AS T1 JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.artist = 'Allen Williams' AND T2.status = 'Banned' UNION SELECT DISTINCT T1.frameVersion, T1.name, 'Not Banned' AS status FROM cards AS T1 WHERE T1.artist = 'Allen Williams' AND NOT T1.uuid IN (SELECT uuid FROM legalities WHERE status = 'Banned')\t----- bird -----\tcard_games",
    "398": "SELECT bond_type FROM bond GROUP BY bond_type ORDER BY COUNT(bond_type) DESC LIMIT 1\t----- bird -----\ttoxicology",
    "399": "SELECT AVG(T1.element = 'O') FROM atom AS T1 JOIN connected AS T2 ON T1.atom_id = T2.atom_id JOIN bond AS T3 ON T3.bond_id = T2.bond_id WHERE T3.bond_type = '-' GROUP BY T3.bond_id\t----- bird -----\ttoxicology",
    "400": "SELECT CAST(SUM(CASE WHEN T4.bond_type = '-' THEN 1 ELSE 0 END) AS REAL) / COUNT(T1.atom_id) FROM atom AS T1 JOIN connected AS T2 ON T1.atom_id = T2.atom_id JOIN molecule AS T3 ON T1.molecule_id = T3.molecule_id JOIN bond AS T4 ON T2.bond_id = T4.bond_id WHERE T3.label = '+'\t----- bird -----\ttoxicology",
    "401": "SELECT T1.molecule_id FROM molecule AS T1 JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.bond_type = '#' AND T1.label = '+' GROUP BY T1.molecule_id HAVING COUNT(T2.bond_id) >= 3\t----- bird -----\ttoxicology",
    "402": "SELECT CAST(SUM(CASE WHEN T1.element = 'c' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.atom_id) FROM atom AS T1 JOIN connected AS T2 ON T1.atom_id = T2.atom_id JOIN bond AS T3 ON T3.bond_id = T2.bond_id WHERE T3.bond_type = '='\t----- bird -----\ttoxicology",
    "403": "SELECT T1.element FROM atom AS T1 JOIN connected AS T2 ON T1.atom_id = T2.atom_id JOIN bond AS T3 ON T2.bond_id = T3.bond_id WHERE T3.bond_id = 'TR004_8_9' UNION SELECT T1.element FROM atom AS T1 JOIN connected AS T2 ON T1.atom_id = T2.atom_id2 JOIN bond AS T3 ON T2.bond_id = T3.bond_id WHERE T3.bond_id = 'TR004_8_9'\t----- bird -----\ttoxicology",
    "404": "SELECT DISTINCT T1.element FROM atom AS T1 JOIN connected AS T2 ON T1.atom_id = T2.atom_id JOIN bond AS T3 ON T3.bond_id = T2.bond_id WHERE T3.bond_type = '='\t----- bird -----\ttoxicology",
    "405": "SELECT T1.label FROM molecule AS T1 JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.element = 'h' GROUP BY T1.label ORDER BY COUNT(T1.label) DESC LIMIT 1\t----- bird -----\ttoxicology",
    "406": "SELECT element FROM atom WHERE molecule_id IN (SELECT molecule_id FROM molecule WHERE label = '-') GROUP BY element ORDER BY COUNT(element) ASC LIMIT 1\t----- bird -----\ttoxicology",
    "407": "SELECT T2.bond_type FROM connected AS T1 JOIN bond AS T2 ON T1.bond_id = T2.bond_id WHERE (T1.atom_id = 'TR004_8' AND T1.atom_id2 = 'TR004_20') OR (T1.atom_id = 'TR004_20' AND T1.atom_id2 = 'TR004_8')\t----- bird -----\ttoxicology",
    "408": "SELECT COUNT(DISTINCT a1.atom_id) + COUNT(DISTINCT a2.atom_id) FROM atom a1 JOIN connected c ON a1.atom_id = c.atom_id JOIN bond b ON b.bond_id = c.bond_id JOIN atom a2 ON a2.atom_id = c.atom_id2 WHERE (a1.element = 'i' OR a2.element = 'i') AND (a1.element = 's' OR a2.element = 's') AND b.bond_type = '-' GROUP BY a1.atom_id, a2.atom_id;\t----- bird -----\ttoxicology",
    "409": "SELECT CAST(SUM(IIF(T1.element = 'F', 1, 0)) * 100 / COUNT(DISTINCT CASE WHEN T3.label = '+' THEN T2.atom_id END) AS REAL) FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id2 INNER JOIN molecule AS T3 ON T2.atom_id = T1.atom_id WHERE T3.label = '+'\t----- bird -----\ttoxicology",
    "410": "SELECT CAST(SUM(CASE WHEN T2.bond_type = '#' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T2.bond_id) AS percent FROM (SELECT T1.molecule_id FROM molecule AS T1 JOIN connected AS T3 ON T1.molecule_id = T3.molecule_id JOIN bond AS T2 ON T3.bond_id = T2.bond_id WHERE T1.label = '+' GROUP BY T1.molecule_id) AS T4 JOIN connected AS T5 ON T4.molecule_id = T5.molecule_id JOIN bond AS T2 ON T5.bond_id = T2.bond_id WHERE T2.bond_type = '#'\t----- bird -----\ttoxicology",
    "411": "SELECT DISTINCT T1.element FROM atom AS T1 JOIN connected AS T2 ON T1.atom_id = T2.atom_id WHERE T2.atom_id2 IN (SELECT atom_id FROM atom WHERE molecule_id = 'TR000') UNION SELECT DISTINCT T1.element FROM atom AS T1 JOIN connected AS T2 ON T1.atom_id = T2.atom_id2 WHERE T2.atom_id IN (SELECT atom_id FROM atom WHERE molecule_id = 'TR000') ORDER BY T1.element ASC LIMIT 3\t----- bird -----\ttoxicology",
    "412": "SELECT CAST(SUM(CASE WHEN T2.bond_type = '=' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T2.bond_id) AS percent FROM molecule AS T1 JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.molecule_id = 'TR008' GROUP BY T1.molecule_id HAVING COUNT(T2.bond_id) > 0 ORDER BY percent DESC LIMIT 1;\t----- bird -----\ttoxicology",
    "413": "SELECT CAST(SUM(CASE WHEN label = '+' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(molecule_id) AS percent FROM molecule WHERE label IN ('+', '-')\t----- bird -----\ttoxicology",
    "414": "SELECT CAST(SUM(CASE WHEN T1.element = 'h' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.atom_id) FROM atom AS T1 WHERE T1.molecule_id = 'TR206'\t----- bird -----\ttoxicology",
    "415": "SELECT T1.element, T3.label FROM atom AS T1 JOIN connected AS T2 ON T1.atom_id = T2.atom_id JOIN molecule AS T3 ON T2.molecule_id = T3.molecule_id WHERE T3.molecule_id = 'TR060'\t----- bird -----\ttoxicology",
    "416": "SELECT bond_type, COUNT(bond_type) AS bond_count FROM bond WHERE molecule_id = 'TR010' GROUP BY bond_type ORDER BY bond_count DESC LIMIT 1;\nSELECT label FROM molecule WHERE molecule_id = 'TR010';\t----- bird -----\ttoxicology",
    "417": "SELECT T1.molecule_id FROM molecule AS T1 JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.bond_type = '-' AND T1.label = '-' GROUP BY T1.molecule_id ORDER BY T1.molecule_id ASC LIMIT 3\t----- bird -----\ttoxicology",
    "418": "SELECT COUNT(*) FROM connected WHERE (atom_id = 'TR009_12' OR atom_id2 = 'TR009_12') AND bond_id IN (SELECT bond_id FROM bond WHERE molecule_id = 'TR009')\t----- bird -----\ttoxicology",
    "419": "SELECT bond_type, atom_id, atom_id2 FROM bond AS T1 JOIN connected AS T2 ON T1.bond_id = T2.bond_id WHERE T2.bond_id = 'TR001_6_9'\t----- bird -----\ttoxicology",
    "420": "SELECT COUNT(*) FROM connected WHERE atom_id = 'TR%_19' OR atom_id2 = 'TR%_19'\t----- bird -----\ttoxicology",
    "421": "SELECT DISTINCT T1.element FROM atom AS T1 WHERE T1.molecule_id = 'TR004'\t----- bird -----\ttoxicology",
    "422": "SELECT DISTINCT T1.molecule_id FROM molecule AS T1 JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE SUBSTR(T2.atom_id, 7, 2) BETWEEN '21' AND '25' AND T1.label = '+'\t----- bird -----\ttoxicology",
    "423": "SELECT bond_id FROM connected WHERE atom_id IN (SELECT atom_id FROM atom WHERE element = 'p') AND atom_id2 IN (SELECT atom_id FROM atom WHERE element = 'n')\t----- bird -----\ttoxicology",
    "424": "SELECT T1.label FROM molecule AS T1 JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.bond_type = ' =' GROUP BY T1.molecule_id ORDER BY COUNT(T2.bond_id) DESC LIMIT 1\t----- bird -----\ttoxicology",
    "425": "SELECT AVG(T3.bond_id) FROM atom AS T1 JOIN connected AS T2 ON T1.atom_id = T2.atom_id JOIN bond AS T3 ON T2.bond_id = T3.bond_id WHERE T1.element = 'I'\t----- bird -----\ttoxicology",
    "426": "SELECT element FROM atom WHERE atom_id NOT IN (SELECT atom_id FROM connected) AND atom_id NOT IN (SELECT atom_id2 FROM connected)\t----- bird -----\ttoxicology",
    "427": "SELECT atom1.atom_id, atom2.atom_id FROM atom AS atom1 JOIN connected ON atom1.atom_id = connected.atom_id JOIN atom AS atom2 ON connected.atom_id2 = atom2.atom_id JOIN bond ON connected.bond_id = bond.bond_id JOIN molecule ON atom1.molecule_id = molecule.molecule_id WHERE molecule.molecule_id = 'TR041' AND bond.bond_type = '#'\t----- bird -----\ttoxicology",
    "428": "SELECT T1.element FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id WHERE T2.bond_id = 'TR144_8_19' UNION SELECT T1.element FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id2 WHERE T2.bond_id = 'TR144_8_19'\t----- bird -----\ttoxicology",
    "429": "SELECT a.element FROM atom a JOIN connected c ON a.atom_id = c.atom_id JOIN bond b ON c.bond_id = b.bond_id WHERE b.bond_type = '#'\t----- bird -----\ttoxicology",
    "430": "SELECT CAST(SUM(CASE WHEN T4.label = '+' THEN 1 ELSE 0 END) * 100.0 / COUNT(T3.bond_id) AS REAL) AS percentage FROM bond AS T3 JOIN connected AS T2 ON T3.bond_id = T2.bond_id JOIN atom AS T1 ON T2.atom_id = T1.atom_id JOIN molecule AS T4 ON T3.molecule_id = T4.molecule_id WHERE T3.bond_type = '-'\t----- bird -----\ttoxicology",
    "431": "SELECT COUNT(*) FROM (SELECT a.atom_id FROM atom a JOIN connected c ON a.atom_id = c.atom_id JOIN bond b ON c.bond_id = b.bond_id WHERE a.element IN ('p', 'br') AND b.bond_type = '#' GROUP BY a.atom_id)\t----- bird -----\ttoxicology",
    "432": "SELECT CAST(SUM(CASE WHEN T1.element = 'cl' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.atom_id) FROM atom AS T1 JOIN connected AS T2 ON T1.atom_id = T2.atom_id JOIN bond AS T3 ON T3.bond_id = T2.bond_id WHERE T3.bond_type = '-'\t----- bird -----\ttoxicology",
    "433": "SELECT T1.element FROM atom AS T1 JOIN connected AS T2 ON T1.atom_id = T2.atom_id OR T1.atom_id = T2.atom_id2 WHERE T2.bond_id = 'TR001_10_11' GROUP BY T1.element ORDER BY T1.element\t----- bird -----\ttoxicology",
    "434": "SELECT CAST(SUM(CASE WHEN T1.element = 'cl' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.atom_id) FROM atom AS T1 JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = '+'\t----- bird -----\ttoxicology",
    "435": "SELECT a.element FROM atom AS a JOIN connected AS c ON a.atom_id = c.atom_id JOIN molecule AS m ON a.molecule_id = m.molecule_id WHERE m.label = '+' AND substr(a.atom_id, 7, 1) = '4' GROUP BY a.molecule_id\t----- bird -----\ttoxicology",
    "436": "SELECT 'Hydrogen Ratio' AS Label ,  SUM(CASE WHEN T1.element = 'h' THEN 1 ELSE 0 END) * 1.0 / COUNT(T1.element) FROM atom AS T1 WHERE T1.molecule_id = 'TR006'\t----- bird -----\ttoxicology",
    "437": "SELECT T1.molecule_id FROM molecule AS T1 JOIN (SELECT molecule_id FROM connected GROUP BY molecule_id HAVING COUNT(atom_id2) > 5) AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.label = '-'\t----- bird -----\ttoxicology",
    "438": "SELECT COUNT(*) FROM satscores WHERE AvgScrMath > 400 AND cds IN (SELECT CDSCode FROM schools WHERE Virtual = 'F')\t----- bird -----\tcalifornia_schools",
    "439": "SELECT CDSCode FROM frpm WHERE `Enrollment (K-12)` + `Enrollment (Ages 5-17)` > 500\t----- bird -----\tcalifornia_schools",
    "440": "SELECT MAX(T1.`Percent (%) Eligible Free (Ages 5-17)`) FROM frpm AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE CAST(T2.NumGE1500 AS REAL) / T2.NumTstTakr > 0.3\t----- bird -----\tcalifornia_schools",
    "441": "SELECT T2.CharterNum FROM satscores AS T1 JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE T1.AvgScrWrite > 499 ORDER BY T1.AvgScrWrite DESC\t----- bird -----\tcalifornia_schools",
    "442": "SELECT T1.School, T1.Street, T1.City, T1.Zip, T1.State FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.`Enrollment (K-12)` - T2.`Enrollment (Ages 5-17)` > 30\t----- bird -----\tcalifornia_schools",
    "443": "SELECT T2.School FROM frpm AS T1 JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode JOIN satscores AS T3 ON T3.cds = T2.CDSCode WHERE T1.`Percent (%) Eligible Free (K-12)` > 0.1 AND T3.NumGE1500 >= 1500\t----- bird -----\tcalifornia_schools",
    "444": "SELECT T1.FundingType FROM schools AS T1 JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE T1.County = 'Riverside' GROUP BY T1.FundingType HAVING AVG(T2.AvgScrMath) > 400\t----- bird -----\tcalifornia_schools",
    "445": "SELECT T1.School, T1.Street, T1.City, T1.State, T1.Zip FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.County = 'Monterey' AND T1.School LIKE '%High%' AND T2.`Free Meal Count (Ages 5-17)` > 800\t----- bird -----\tcalifornia_schools",
    "446": "SELECT T2.School, T1.AvgScrWrite, T2.Phone FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE T2.OpenDate > '1991-01-01' OR T2.ClosedDate < '2000-01-01'\t----- bird -----\tcalifornia_schools",
    "447": "SELECT T1.`School Name`, T1.DOCType FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.IRC = 1 AND (T1.`Enrollment (K-12)` - T1.`Enrollment (Ages 5-17)`) > (SELECT AVG(`Enrollment (K-12)` - `Enrollment (Ages 5-17)`) FROM frpm WHERE IRC = 1)\t----- bird -----\tcalifornia_schools",
    "448": "SELECT T1.`Percent (%) Eligible Free (K-12)` FROM frpm AS T1 WHERE T1.CDSCode IN (SELECT T2.cds FROM satscores AS T2 WHERE T2.rtype = 'School' ORDER BY T2.NumTstTakr DESC LIMIT 10) ORDER BY T1.`Enrollment (K-12)` DESC LIMIT 2\t----- bird -----\tcalifornia_schools",
    "449": "SELECT T2.School, T1.`Percent (%) Eligible FRPM (K-12)` FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.DOC = '66' ORDER BY T1.`FRPM Count (K-12)` DESC LIMIT 5\t----- bird -----\tcalifornia_schools",
    "450": "SELECT T1.Street, T1.City, T1.Zip, T1.State FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE T2.NumGE1500 / T2.NumTstTakr = (SELECT MIN(T2.NumGE1500 / T2.NumTstTakr) FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds)\t----- bird -----\tcalifornia_schools",
    "451": "SELECT T3.AdmFName1, T3.AdmLName1 FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode INNER JOIN (SELECT CDSCode, MAX(NumGE1500) AS max_numge1500 FROM satscores) AS T4 ON T1.CDSCode = T4.CDSCode WHERE T1.NumGE1500 = T4.max_numge1500 AND T3.CDSCode = T2.CDSCode LIMIT 1\t----- bird -----\tcalifornia_schools",
    "452": "SELECT AVG(T2.NumTstTakr) FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE T1.County = 'FRESNO' AND T1.OpenDate BETWEEN '1980-01-01' AND '1980-12-31'\t----- bird -----\tcalifornia_schools",
    "453": "SELECT T3.Phone FROM (SELECT T1.cds, T1.AvgScrRead FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE T2.District = 'FRESNO UNIFIED') AS T1 WHERE T1.AvgScrRead = (SELECT MIN(T1.AvgScrRead) FROM (SELECT T1.cds, T1.AvgScrRead FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE T2.District = 'FRESNO UNIFIED') AS T2) AND T1.cds IN (SELECT CDSCode FROM schools WHERE District = 'FRESNO UNIFIED') AS T3 WHERE T3.CDSCode = T1.cds;\t----- bird -----\tcalifornia_schools",
    "454": "SELECT T3.School FROM (SELECT T1.School, T2.AvgScrRead, RANK() OVER (PARTITION BY T1.County ORDER BY T2.AvgScrRead DESC) AS Rank FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE T1.Virtual = 'F') AS T3 WHERE T3.Rank <= 5\t----- bird -----\tcalifornia_schools",
    "455": "SELECT T2.School, T1.AvgScrWrite FROM satscores AS T1 JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE T2.AdmFName1 = 'Ricci' AND T2.AdmLName1 = 'Ulrich' GROUP BY T2.School\t----- bird -----\tcalifornia_schools",
    "456": "SELECT T1.School , T1.Enroll12 FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.DOC = '31' AND T2.`Enrollment (K-12)` IS NOT NULL ORDER BY T2.`Enrollment (K-12)` DESC LIMIT 1\t----- bird -----\tcalifornia_schools",
    "457": "SELECT CAST(COUNT(T1.CDSCode) AS REAL) / 12 FROM schools AS T1 INNER JOIN ( SELECT DISTINCT District FROM schools WHERE DOC = '52' AND County = 'Alameda' ) AS T2 ON T1.District = T2.District WHERE strftime('%Y', T1.OpenDate) = '1980' GROUP BY strftime('%m', T1.OpenDate)\t----- bird -----\tcalifornia_schools",
    "458": "SELECT CAST(SUM(CASE WHEN T1.DOC = 54 THEN 1 ELSE 0 END) AS REAL) / SUM(CASE WHEN T1.DOC = 52 THEN 1 ELSE 0 END) FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.County = 'Orange' AND T1.District = 'Merged' AND T1.DOCType = 'Unified School District' OR T1.District = 'Merged' AND T1.DOCType = 'Elementary School District' AND T2.DOC = T1.DOC\t----- bird -----\tcalifornia_schools",
    "459": "SELECT T2.MailStreet FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode ORDER BY T1.AvgScrMath DESC LIMIT 6,1\t----- bird -----\tcalifornia_schools",
    "460": "SELECT SUM(T2.Enrollment) FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.`Percent (%) Eligible Free (K-12)` < 0.18 AND T2.County = 'LOS ANGELES' AND T1.Charter = 0\t----- bird -----\tcalifornia_schools",
    "461": "SELECT T1.`Enrollment (Ages 5-17)` FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.`Academic Year` = '2014-15' AND T2.School = 'State Special School' AND T2.City = 'FREMONT' AND T2.EdOpsCode = 'SSS'\t----- bird -----\tcalifornia_schools",
    "462": "SELECT T1.`School Name`, T1.`Percent (%) Eligible FRPM (Ages 5-17)` FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.`County Name` = 'LOS ANGELES' AND T1.`Low Grade` = 'KG' AND T1.`High Grade` = '09'\t----- bird -----\tcalifornia_schools",
    "463": "SELECT County ,  COUNT(*) AS amount FROM schools WHERE Virtual  =  'F' AND County  IN  ('San Diego' ,  'Santa Barbara') GROUP BY County ORDER BY amount DESC LIMIT 1\t----- bird -----\tcalifornia_schools",
    "464": "SELECT GSoffered FROM schools WHERE ABS(Longitude) = (SELECT MAX(ABS(Longitude)) FROM schools)\t----- bird -----\tcalifornia_schools",
    "465": "SELECT COUNT(*) AS num_schools, T1.City FROM schools AS T1 JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.Magnet = 1 AND T2.`NSLP Provision Status` = 'Multiple Provision Types' AND T2.LowGrade = 'KG' AND T2.HighGrade = '08' GROUP BY T1.City;\t----- bird -----\tcalifornia_schools",
    "466": "SELECT T1.`Percent (%) Eligible Free (K-12)`, T1.`District Code` FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.AdmFName1 = 'Alusine' OR T2.AdmFName2 = 'Alusine' OR T2.AdmFName3 = 'Alusine'\t----- bird -----\tcalifornia_schools",
    "467": "SELECT AdmEmail1, AdmEmail2, AdmEmail3 FROM schools WHERE County = 'San Bernardino' AND City = 'San Bernardino' AND (SOC = '62' OR DOC = '54') AND OpenDate BETWEEN '2009-01-01' AND '2010-12-31' AND School LIKE '%Intermediate/Middle School%' OR School LIKE '%Unified School%' AND AdmEmail1 IS NOT NULL OR AdmEmail2 IS NOT NULL OR AdmEmail3 IS NOT NULL;\t----- bird -----\tcalifornia_schools",
    "468": "SELECT COUNT(*) FROM account AS T1 JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T2.A3 = 'East Bohemia' AND T1.frequency = 'POPLATEK PO OBRATU'\t----- bird -----\tfinancial",
    "469": "SELECT COUNT(*) FROM district WHERE A11 > 6000 AND A11 < 10000 AND (SELECT AVG(A11) FROM client WHERE gender = 'F' AND district_id = district.district_id) > 6000 AND (SELECT AVG(A11) FROM client WHERE gender = 'F' AND district_id = district.district_id) < 10000;\t----- bird -----\tfinancial",
    "470": "SELECT COUNT(*) FROM client AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T1.gender = 'M' AND T2.A3 = 'North Bohemia' AND T2.A11 > 8000\t----- bird -----\tfinancial",
    "471": "SELECT T2.account_id FROM (SELECT T1.account_id, T1.A11 FROM (SELECT T1.account_id, AVG(T2.A11) AS A11 FROM disp AS T1 INNER JOIN client AS T2 ON T1.client_id = T2.client_id WHERE T2.gender = 'F' GROUP BY T1.account_id) AS T1 ORDER BY T1.A11 ASC LIMIT 1) AS T2 INNER JOIN (SELECT T1.account_id, T1.A11 FROM (SELECT T1.account_id, AVG(T2.A11) AS A11 FROM disp AS T1 INNER JOIN client AS T2 ON T1.client_id = T2.client_id WHERE T2.gender = 'F' GROUP BY T1.account_id) AS T1 ORDER BY T1.A11 DESC LIMIT 1) AS T3 ON 1 = 1 WHERE (SELECT MAX(T1.A11) FROM (SELECT T1.account_id, AVG(T2.A11) AS A11 FROM disp AS T1 INNER JOIN client AS T2 ON T1.client_id = T2.client_id WHERE T2.gender = 'F' GROUP BY T1.account_id) AS T1) - T2.A11;\t----- bird -----\tfinancial",
    "472": "SELECT T3.account_id FROM (SELECT MIN(T1.birth_date) AS youngest FROM client AS T1) AS youngest_client JOIN client AS T2 ON T2.birth_date = youngest_client.youngest JOIN account AS T3 ON T3.client_id = T2.client_id JOIN district AS T4 ON T4.district_id = T3.district_id WHERE T4.A11 = (SELECT MAX(T5.A11) FROM district AS T5) GROUP BY T2.client_id, T3.account_id ORDER BY AVG(T4.A11) DESC LIMIT 1\t----- bird -----\tfinancial",
    "473": "SELECT T1.account_id FROM account AS T1 INNER JOIN loan AS T2 ON T1.account_id = T2.account_id WHERE T2.date LIKE '1997%' AND T2.status = 'APPROVED' AND T1.frequency = 'POPLATEK TYDNE' ORDER BY T2.amount ASC LIMIT 1\t----- bird -----\tfinancial",
    "474": "SELECT T1.account_id FROM loan AS T1 JOIN account AS T2 ON T1.account_id = T2.account_id WHERE T1.duration > 12 AND T2.date LIKE '1993%' AND T1.status = 'approved' GROUP BY T1.account_id ORDER BY SUM(T1.amount) DESC LIMIT 1\t----- bird -----\tfinancial",
    "475": "SELECT COUNT(*) FROM client AS T1 JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T1.gender = 'F' AND T1.birth_date < '1950-01-01' AND T2.A2 = 'Sokolov'\t----- bird -----\tfinancial",
    "476": "SELECT T2.A2 FROM client AS T1 JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T1.gender = 'F' AND T1.birth_date = '1976-01-29'\t----- bird -----\tfinancial",
    "477": "SELECT CAST(SUM(IIF(T2.gender = 'M', 1, 0)) AS REAL) * 100 / COUNT(T2.client_id) FROM district AS T1 INNER JOIN client AS T2 ON T1.district_id = T2.district_id WHERE T1.A3 = 'south Bohemia' AND T1.A11 = (SELECT MAX(T1.A11) FROM district AS T1 INNER JOIN client AS T2 ON T1.district_id = T2.district_id WHERE T1.A3 = 'south Bohemia')\t----- bird -----\tfinancial",
    "478": "SELECT CAST((T1.balance - T2.balance) AS REAL) * 100 / T2.balance FROM trans AS T1 INNER JOIN (SELECT account_id, MIN(date) AS date FROM trans WHERE date >= '1993-03-22' AND date <= '1998-12-27' GROUP BY account_id) AS T2 ON T1.account_id = T2.account_id AND T1.date = '1998-12-27' AND T2.date = '1993-03-22' WHERE T1.account_id = (SELECT account_id FROM loan WHERE date = '1993-07-05' ORDER BY date ASC LIMIT 1)\t----- bird -----\tfinancial",
    "479": "SELECT CAST(SUM(IIF(T1.status = 'A', T1.amount, 0)) AS REAL) * 100 / SUM(T1.amount) FROM loan AS T1 WHERE T1.status = 'A'\t----- bird -----\tfinancial",
    "480": "SELECT CAST(SUM(IIF(T1.status = 'C', 1, 0)) AS REAL) * 100 / COUNT(T1.loan_id) FROM loan AS T1 WHERE T1.amount < 100000 AND T1.status = 'C'\t----- bird -----\tfinancial",
    "481": "SELECT T2.A11 , ((T2.A13 - T2.A12) / T2.A12) * 100 FROM loan AS T1 JOIN district AS T2 ON T1.account_id = T2.district_id WHERE T1.status = 'D'\t----- bird -----\tfinancial",
    "482": "SELECT T2.A2 FROM client AS T1 JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T1.gender = 'F' GROUP BY T2.A2 ORDER BY COUNT(T1.client_id) DESC LIMIT 9\t----- bird -----\tfinancial",
    "483": "SELECT COUNT(*) FROM loan WHERE loan.account_id IN (SELECT account.account_id FROM account WHERE account.frequency = 'POPLATEK MESICNE') AND loan.amount >= 250000 AND loan.date BETWEEN '1995-01-01' AND '1997-12-31'\t----- bird -----\tfinancial",
    "484": "SELECT COUNT(*) FROM account WHERE account_id IN (SELECT account_id FROM disp WHERE type = 'C') AND district_id = 1\t----- bird -----\tfinancial",
    "485": "SELECT COUNT(*) FROM client WHERE client_id IN (SELECT client_id FROM disp WHERE account_id IN (SELECT account_id FROM account WHERE district_id IN (SELECT district_id FROM district WHERE A15 = (SELECT MAX(A15) FROM district WHERE A15 IN (SELECT MIN(A15) FROM district WHERE A15 > (SELECT MAX(A15) FROM district ORDER BY A15 DESC LIMIT 1 OFFSET 1))))) AND gender = 'M')\t----- bird -----\tfinancial",
    "486": "SELECT T5.A2 FROM trans AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id INNER JOIN district AS T3 ON T2.district_id = T3.district_id INNER JOIN client AS T4 ON T4.district_id = T3.district_id INNER JOIN district AS T5 ON T5.district_id = T4.district_id WHERE T1.type = 'VYDAJ' AND T1.date LIKE '1996-01%' ORDER BY T1.amount DESC LIMIT 10\t----- bird -----\tfinancial",
    "487": "SELECT COUNT(*) FROM account WHERE account_id IN (SELECT account_id FROM disp WHERE type = 'C' OR type = 'D') AND district_id = 1\t----- bird -----\tfinancial",
    "488": "SELECT COUNT(T2.client_id) FROM district AS T1 INNER JOIN client AS T2 ON T1.district_id = T2.district_id WHERE T2.gender = 'M' AND T1.A15 = (SELECT A15 FROM district ORDER BY A15 DESC LIMIT 1 OFFSET 1)\t----- bird -----\tfinancial",
    "489": "SELECT T1.account_id FROM account AS T1 JOIN trans AS T2 ON T1.account_id = T2.account_id WHERE T2.date LIKE '1998%' AND T2.type = 'VYBER KARTOU' AND T2.amount < (SELECT AVG(amount) FROM trans WHERE type = 'VYBER KARTOU') GROUP BY T1.account_id\t----- bird -----\tfinancial",
    "490": "SELECT T1.type FROM account AS T1 JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T2.A11 BETWEEN 8000 AND 9000 AND T1.type != 'OWNER' GROUP BY T1.type\t----- bird -----\tfinancial",
    "491": "SELECT AVG(T1.A15) FROM district AS T1 INNER JOIN account AS T2 ON T1.district_id = T2.district_id WHERE T1.A15 > 4000 AND strftime('%Y', T2.date) >= '1997'\t----- bird -----\tfinancial",
    "492": "SELECT * FROM trans WHERE account_id IN (SELECT account_id FROM disp WHERE client_id = 3356) AND operation = 'VYBER'\t----- bird -----\tfinancial",
    "493": "SELECT CAST(SUM(IIF(T2.gender = 'F', 1, 0)) AS REAL) * 100 / COUNT(T2.gender) FROM account AS T1 INNER JOIN disp AS T3 ON T1.account_id = T3.account_id INNER JOIN client AS T2 ON T3.client_id = T2.client_id INNER JOIN district AS T4 ON T2.district_id = T4.district_id WHERE T4.A11 > 10000\t----- bird -----\tfinancial",
    "494": "((SELECT SUM(amount) FROM loan WHERE strftime('%Y', date) = '1997' AND account_id IN (SELECT account_id FROM disp WHERE client_id IN (SELECT client_id FROM client WHERE gender = 'M')) ) - (SELECT SUM(amount) FROM loan WHERE strftime('%Y', date) = '1996' AND account_id IN (SELECT account_id FROM disp WHERE client_id IN (SELECT client_id FROM client WHERE gender = 'M')) )) / (SELECT SUM(amount) FROM loan WHERE strftime('%Y', date) = '1996' AND account_id IN (SELECT account_id FROM disp WHERE client_id IN (SELECT client_id FROM client WHERE gender = 'M')) ) * 100.0\t----- bird -----\tfinancial",
    "495": "SELECT T1.frequency, T3.k_symbol FROM account AS T1 JOIN trans AS T2 ON T1.account_id = T2.account_id JOIN trans AS T3 ON T1.account_id = T3.account_id WHERE T1.account_id = 3 AND T3.amount = 3539 AND T3.type = 'debit'\t----- bird -----\tfinancial",
    "496": "SELECT CAST(SUM(IIF(T1.gender = 'M', 1, 0)) AS REAL) * 100 / COUNT(T1.client_id) FROM client AS T1 INNER JOIN disp AS T2 ON T1.client_id = T2.client_id INNER JOIN account AS T3 ON T3.account_id = T2.account_id WHERE T3.frequency = 'POPLATEK TYDNE'\t----- bird -----\tfinancial",
    "497": "SELECT T2.account_id FROM client AS T1 JOIN disp AS T2 ON T1.client_id = T2.client_id WHERE T1.gender = 'F' AND T1.birth_date = (SELECT MIN(birth_date) FROM client WHERE gender = 'F') AND T1.client_id IN (SELECT client_id FROM client GROUP BY client_id HAVING AVG(SELECT A11 FROM district WHERE district_id = T1.district_id) = (SELECT MIN(AVG(A11)) FROM (SELECT AVG(A11) FROM district WHERE district_id IN (SELECT district_id FROM client WHERE gender = 'F') GROUP BY district_id)))\t----- bird -----\tfinancial",
    "498": "SELECT AVG(T1.amount) FROM loan AS T1 JOIN trans AS T2 ON T1.account_id = T2.account_id WHERE T1.status IN('C', 'D') AND T2.type = 'POPLATEK PO OBRATU'\t----- bird -----\tfinancial",
    "499": "SELECT T1.client_id, (strftime('%Y', 'now') - strftime('%Y', T1.birth_date)) FROM client AS T1 INNER JOIN disp AS T2 ON T1.client_id = T2.client_id INNER JOIN card AS T3 ON T2.disp_id = T3.disp_id WHERE T3.type = 'gold' AND T2.type = 'OWNER'\t----- bird -----\tfinancial"
}