{
    "0": "SELECT CAST(SUM(IIF(Currency = 'EUR', 1, 0)) AS REAL) / SUM(IIF(Currency = 'CZK', 1, 0)) FROM customers\t----- bird -----\tdebit_card_specializing",
    "1": "SELECT T1.CustomerID FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Date BETWEEN '201201' AND '201212' AND T1.Segment = 'LAM' ORDER BY T2.Consumption ASC LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "2": "SELECT AVG(T1.Consumption) / 12 FROM yearmonth AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Segment = 'SME' AND SUBSTR(T1.Date, 1, 4) = '2013'\t----- bird -----\tdebit_card_specializing",
    "3": "SELECT \n    SUM(IIF(T1.Currency = 'CZK', T2.Consumption, 0)) - \n    SUM(IIF(T1.Currency = 'EUR', T2.Consumption, 0)) \nFROM \n    customers T1 \nJOIN \n    yearmonth T2 \nON \n    T1.CustomerID = T2.CustomerID \nWHERE \n    SUBSTR(T2.Date, 1, 4) = '2012'\t----- bird -----\tdebit_card_specializing",
    "4": "SELECT SUBSTR(Date, 1, 4) FROM yearmonth WHERE Consumption = ( SELECT MAX(Consumption) FROM yearmonth )\t----- bird -----\tdebit_card_specializing",
    "5": "SELECT SUBSTR(Date, 1, 6) \nFROM yearmonth \nJOIN customers ON yearmonth.CustomerID = customers.CustomerID \nWHERE SUBSTR(Date, 1, 4) = '2013' AND Segment = 'SME' \nORDER BY Consumption DESC LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "6": "SELECT \n    (SME - LAM) AS SME_LAM, \n    (LAM - KAM) AS LAM_KAM, \n    (KAM - SME) AS KAM_SME\nFROM (\n    SELECT \n        AVG(CASE WHEN T1.Segment = 'SME' THEN T2.Consumption END) AS SME,\n        AVG(CASE WHEN T1.Segment = 'LAM' THEN T2.Consumption END) AS LAM,\n        AVG(CASE WHEN T1.Segment = 'KAM' THEN T2.Consumption END) AS KAM\n    FROM customers T1\n    INNER JOIN yearmonth T2 ON T1.CustomerID = T2.CustomerID\n    WHERE T2.Date BETWEEN '201301' AND '201312'\n    AND T1.Currency = 'CZK'\n)\t----- bird -----\tdebit_card_specializing",
    "7": "SELECT \n    Segment, \n    MAX(PercentageIncrease) AS MaxPercentageIncrease, \n    MIN(PercentageIncrease) AS MinPercentageIncrease\nFROM (\n    SELECT \n        c.Segment, \n        ((y2.Consumption - y1.Consumption) / y2.Consumption) * 100 AS PercentageIncrease\n    FROM \n        customers c\n    JOIN \n        yearmonth y1 ON c.CustomerID = y1.CustomerID AND y1.Date LIKE '2012%'\n    JOIN \n        yearmonth y2 ON c.CustomerID = y2.CustomerID AND y2.Date LIKE '2013%'\n    WHERE \n        c.Currency = 'EUR'\n)\t----- bird -----\tdebit_card_specializing",
    "8": "SELECT SUM(Consumption) FROM yearmonth WHERE CustomerID = 6 AND Date BETWEEN '201308' AND '201311'\t----- bird -----\tdebit_card_specializing",
    "9": "SELECT \n    SUM(IIF(T1.Country = 'CZE' AND T1.Segment = 'discount', 1, 0)) - \n    SUM(IIF(T1.Country = 'SVK' AND T1.Segment = 'discount', 1, 0)) \nFROM gasstations T1\t----- bird -----\tdebit_card_specializing",
    "10": "SELECT \n    SUM(IIF(c.Currency = 'CZK', 1, 0)) - SUM(IIF(c.Currency = 'EUR', 1, 0)) \nFROM \n    customers c \nWHERE \n    c.Segment = 'SME'\t----- bird -----\tdebit_card_specializing",
    "11": "SELECT CAST(SUM(IIF(C.Consumption > 46.73, 1, 0)) AS REAL) * 100 / COUNT(C.CustomerID) FROM yearmonth AS C INNER JOIN customers AS D ON C.CustomerID = D.CustomerID WHERE D.Segment = 'LAM'\t----- bird -----\tdebit_card_specializing",
    "12": "SELECT CAST(SUM(CASE WHEN Consumption > 528.3 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(CustomerID) FROM yearmonth WHERE Date LIKE '201202%'\t----- bird -----\tdebit_card_specializing",
    "13": "SELECT MAX(Consumption) FROM yearmonth WHERE SUBSTR(Date, 1, 4) = '2012'\t----- bird -----\tdebit_card_specializing",
    "14": "SELECT T3.Description FROM yearmonth AS T1 INNER JOIN transactions_1k AS T2 ON T1.CustomerID = T2.CustomerID INNER JOIN products AS T3 ON T2.ProductID = T3.ProductID WHERE SUBSTR(T1.Date, 1, 6) = '201309'\t----- bird -----\tdebit_card_specializing",
    "15": "SELECT DISTINCT T2.Country FROM yearmonth AS T1 INNER JOIN gasstations AS T2 ON T2.GasStationID IN ( SELECT GasStationID FROM transactions_1k ) WHERE T1.Date LIKE '201306%'\t----- bird -----\tdebit_card_specializing",
    "16": "SELECT COUNT(T1.CustomerID) \nFROM customers AS T1 \nINNER JOIN yearmonth AS T2 \nON T1.CustomerID = T2.CustomerID \nWHERE T1.Currency = 'EUR' AND T2.Consumption > 1000\t----- bird -----\tdebit_card_specializing",
    "17": "SELECT T3.Description FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID INNER JOIN products AS T3 ON T1.ProductID = T3.ProductID WHERE T2.Country = 'CZE'\t----- bird -----\tdebit_card_specializing",
    "18": "SELECT DISTINCT T1.Time FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID WHERE T2.ChainID = 11\t----- bird -----\tdebit_card_specializing",
    "19": "SELECT COUNT(T1.TransactionID) \nFROM transactions_1k AS T1 \nINNER JOIN gasstations AS T2 \nON T1.GasStationID = T2.GasStationID \nWHERE T2.Country = 'CZE' AND T1.Date > '2012-01-01'\t----- bird -----\tdebit_card_specializing",
    "20": "SELECT T1.Currency FROM customers AS T1 INNER JOIN transactions_1k AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Date = '2012-08-24' AND T2.Time = '16:25:00'\t----- bird -----\tdebit_card_specializing",
    "21": "SELECT T1.Segment FROM customers AS T1 INNER JOIN transactions_1k AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Date = '2012-08-23' AND T2.Time = '21:20:00'\t----- bird -----\tdebit_card_specializing",
    "22": "SELECT COUNT(T1.TransactionID) \nFROM transactions_1k AS T1 \nJOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID \nWHERE T1.Date = '2012-08-26' AND T1.Time BETWEEN '08:00:00' AND '09:00:00' AND T2.Country = 'CZE'\t----- bird -----\tdebit_card_specializing",
    "23": "SELECT T2.Country FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID WHERE T1.Date = '2012-08-24' AND T1.Amount = 548.4\t----- bird -----\tdebit_card_specializing",
    "24": "SELECT CAST(SUM(CASE WHEN T1.Currency = 'EUR' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.CustomerID) FROM customers AS T1 INNER JOIN `transactions_1k` AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Date = '2012-08-25'\t----- bird -----\tdebit_card_specializing",
    "25": "SELECT \n    (SUM(CASE WHEN T2.Date LIKE '2012%' THEN T2.Consumption ELSE 0 END) - \n     SUM(CASE WHEN T2.Date LIKE '2013%' THEN T2.Consumption ELSE 0 END)) / \n    SUM(CASE WHEN T2.Date LIKE '2012%' THEN T2.Consumption ELSE 0 END) AS ConsumptionDecreaseRate\nFROM \n    transactions_1k T1\nJOIN \n    yearmonth T2 ON T1.CustomerID = T2.CustomerID\nWHERE \n    T1.Date = '2012-08-25' AND T1.Amount = 634.8\t----- bird -----\tdebit_card_specializing",
    "26": "SELECT CAST(SUM(CASE WHEN T1.Segment = 'premium' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.Segment) FROM gasstations AS T1 INNER JOIN transactions_1k AS T2 ON T1.GasStationID = T2.GasStationID WHERE T1.Country = 'SVK'\t----- bird -----\tdebit_card_specializing",
    "27": "SELECT SUM(T1.Amount) AS TotalAmount, SUM(CASE WHEN T2.Date = '201201' THEN T1.Amount ELSE 0 END) AS January2012Amount\nFROM transactions_1k T1\nJOIN yearmonth T2 ON T1.CustomerID = T2.CustomerID\nWHERE T1.CustomerID = 38508\t----- bird -----\tdebit_card_specializing",
    "28": "SELECT T1.CustomerID, AVG(T2.Price / T2.Amount) AS AveragePrice, T1.Currency \nFROM customers AS T1 \nJOIN transactions_1k AS T2 ON T1.CustomerID = T2.CustomerID \nGROUP BY T1.CustomerID, T1.Currency \nORDER BY SUM(T2.Price) DESC \nLIMIT 1\t----- bird -----\tdebit_card_specializing",
    "29": "SELECT T2.Consumption FROM transactions_1k AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.ProductID = 5 AND T1.Price / T1.Amount > 29.00 AND T2.Date = '201208'\t----- bird -----\tdebit_card_specializing",
    "30": "SELECT T2.major_name FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.first_name = 'Angela' AND T1.last_name = 'Sanders'\t----- bird -----\tstudent_club",
    "31": "SELECT COUNT(T1.member_id) \nFROM member AS T1 \nINNER JOIN attendance AS T2 ON T1.member_id = T2.link_to_member \nINNER JOIN event AS T3 ON T2.link_to_event = T3.event_id \nWHERE T3.event_name = 'Women''s Soccer' AND T1.t_shirt_size = 'Medium'\t----- bird -----\tstudent_club",
    "32": "SELECT COUNT(T1.event_id) FROM event AS T1 INNER JOIN attendance AS T2 ON T1.event_id = T2.link_to_event WHERE T1.type = 'Meeting' GROUP BY T1.event_id HAVING COUNT(T2.link_to_member) > 10\t----- bird -----\tstudent_club",
    "33": "SELECT T1.event_name FROM event AS T1 INNER JOIN attendance AS T2 ON T1.event_id = T2.link_to_event WHERE T1.type != 'fundraiser' GROUP BY T1.event_name HAVING COUNT(T2.link_to_event) > 20\t----- bird -----\tstudent_club",
    "34": "SELECT SUM(T2.amount) FROM member AS T1 INNER JOIN income AS T2 ON T1.member_id = T2.link_to_member WHERE T1.position = 'Vice President'\t----- bird -----\tstudent_club",
    "35": "SELECT T1.first_name, T1.last_name \nFROM member AS T1 \nINNER JOIN zip_code AS T2 \nON T1.zip = T2.zip_code \nWHERE T2.state = 'Illinois'\t----- bird -----\tstudent_club",
    "36": "SELECT T3.approved FROM event AS T1 INNER JOIN budget AS T2 ON T1.event_id = T2.link_to_event INNER JOIN expense AS T3 ON T2.budget_id = T3.link_to_budget WHERE T1.event_name = 'October Meeting' AND T1.event_date = '2019-10-08'\t----- bird -----\tstudent_club",
    "37": "SELECT AVG(T2.cost) FROM member AS T1 INNER JOIN expense AS T2 ON T1.member_id = T2.link_to_member WHERE T1.first_name = 'Elijah' AND T1.last_name = 'Allen' AND SUBSTR(T2.expense_date, 6, 2) IN ('09', '10')\t----- bird -----\tstudent_club",
    "38": "SELECT \n    SUM(IIF(SUBSTR(event_date, 1, 4) = '2019', T1.spent, 0)) - \n    SUM(IIF(SUBSTR(event_date, 1, 4) = '2020', T1.spent, 0)) \nFROM \n    budget AS T1 \nINNER JOIN \n    event AS T2 ON T1.link_to_event = T2.event_id \nWHERE \n    T2.type = 'Student_Club'\t----- bird -----\tstudent_club",
    "39": "SELECT notes FROM income WHERE source = 'Fundraising' AND date_received = '2019-09-14'\t----- bird -----\tstudent_club",
    "40": "SELECT phone FROM member WHERE first_name = 'Carlo' AND last_name = 'Jacobs'\t----- bird -----\tstudent_club",
    "41": "SELECT T1.event_status FROM budget AS T1 INNER JOIN expense AS T2 ON T1.budget_id = T2.link_to_budget WHERE T2.expense_description = 'Post Cards, Posters' AND T2.expense_date = '2019-8-20'\t----- bird -----\tstudent_club",
    "42": "SELECT T2.major_name FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.first_name = 'Brent' AND T1.last_name = 'Thomason'\t----- bird -----\tstudent_club",
    "43": "SELECT COUNT(*) \nFROM member \nJOIN major ON member.link_to_major = major.major_id \nWHERE major_name = 'Business' AND t_shirt_size = 'Medium'\t----- bird -----\tstudent_club",
    "44": "SELECT T2.department FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.position = 'President'\t----- bird -----\tstudent_club",
    "45": "SELECT T2.date_received FROM member AS T1 INNER JOIN income AS T2 ON T1.member_id = T2.link_to_member WHERE T1.first_name = 'Connor' AND T1.last_name = 'Hilton' AND T2.source = 'Dues'\t----- bird -----\tstudent_club",
    "46": "SELECT COUNT(*) FROM (\n    SELECT \n        CASE \n            WHEN event_name = 'Yearly Kickoff' THEN amount \n            ELSE 0 \n        END AS yearly_amount,\n        CASE \n            WHEN event_name = 'October Meeting' THEN amount \n            ELSE 0 \n        END AS october_amount\n    FROM budget AS b\n    INNER JOIN event AS e ON b.link_to_event = e.event_id\n    WHERE b.category = 'Advertisement'\n) AS subquery\nWHERE yearly_amount > october_amount\t----- bird -----\tstudent_club",
    "47": "SELECT SUM(T1.cost) FROM expense AS T1 INNER JOIN budget AS T2 ON T1.link_to_budget = T2.budget_id INNER JOIN event AS T3 ON T2.link_to_event = T3.event_id WHERE T1.expense_description = 'Pizza'\t----- bird -----\tstudent_club",
    "48": "SELECT COUNT(city) FROM zip_code WHERE county = 'Orange County' AND state = 'Virginia'\t----- bird -----\tstudent_club",
    "49": "SELECT T2.major_name FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.phone = \"809-555-3360\"\t----- bird -----\tstudent_club",
    "50": "SELECT COUNT(T2.link_to_member) \nFROM event AS T1 \nINNER JOIN attendance AS T2 \nON T1.event_id = T2.link_to_event \nWHERE T1.event_name = 'Women''s Soccer'\t----- bird -----\tstudent_club",
    "51": "SELECT T1.first_name, T1.last_name \nFROM member AS T1 \nINNER JOIN major AS T2 \nON T1.link_to_major = T2.major_id \nWHERE T2.department = 'School of Applied Sciences, Technology and Education'\t----- bird -----\tstudent_club",
    "52": "SELECT T1.event_name \nFROM event AS T1 \nJOIN budget AS T2 ON T1.event_id = T2.link_to_event \nWHERE T1.status = 'Closed' \nORDER BY T2.spent / T2.amount DESC \nLIMIT 1\t----- bird -----\tstudent_club",
    "53": "SELECT MAX(spent) FROM budget\t----- bird -----\tstudent_club",
    "54": "SELECT SUM(spent) FROM budget WHERE category = 'Food'\t----- bird -----\tstudent_club",
    "55": "SELECT T1.first_name, T1.last_name \nFROM member AS T1 \nJOIN attendance AS T2 ON T1.member_id = T2.link_to_member \nGROUP BY T1.first_name, T1.last_name \nHAVING COUNT(T2.link_to_event) > 7\t----- bird -----\tstudent_club",
    "56": "SELECT T1.first_name, T1.last_name FROM member AS T1 INNER JOIN attendance AS T2 ON T1.member_id = T2.link_to_member INNER JOIN event AS T3 ON T2.link_to_event = T3.event_id INNER JOIN budget AS T4 ON T3.event_id = T4.link_to_event WHERE T3.event_name = 'Yearly Kickoff'\t----- bird -----\tstudent_club",
    "57": "SELECT T1.event_name \nFROM event AS T1 \nJOIN budget AS T2 ON T1.event_id = T2.link_to_event \nORDER BY T2.spent \nLIMIT 1\t----- bird -----\tstudent_club",
    "58": "SELECT CAST(SUM(CASE WHEN T1.event_name = 'Yearly Kickoff' THEN T2.cost ELSE 0 END) AS REAL) * 100 / SUM(T2.cost) FROM event AS T1 INNER JOIN budget AS T3 ON T1.event_id = T3.link_to_event INNER JOIN expense AS T2 ON T3.budget_id = T2.link_to_budget\t----- bird -----\tstudent_club",
    "59": "SELECT source FROM income WHERE date_received BETWEEN '2019-09-01' AND '2019-09-30' ORDER BY amount DESC LIMIT 1\t----- bird -----\tstudent_club",
    "60": "SELECT COUNT(T1.member_id) \nFROM member AS T1 \nINNER JOIN major AS T2 \nON T1.link_to_major = T2.major_id \nWHERE T2.major_name = 'Physics Teaching'\t----- bird -----\tstudent_club",
    "61": "SELECT T1.event_name FROM event AS T1 INNER JOIN budget AS T2 ON T1.event_id = T2.link_to_event WHERE T2.category = 'Advertisement' ORDER BY T2.spent DESC LIMIT 1\t----- bird -----\tstudent_club",
    "62": "SELECT CASE \n    WHEN COUNT(T1.link_to_member) > 0 THEN 'Yes' \n    ELSE 'No' \nEND AS result \nFROM attendance AS T1 \nJOIN member AS T2 ON T1.link_to_member = T2.member_id \nJOIN event AS T3 ON T1.link_to_event = T3.event_id \nWHERE T2.first_name = 'Maya' AND T2.last_name = 'Mclean' AND T3.event_name = 'Women''s Soccer'\t----- bird -----\tstudent_club",
    "63": "SELECT T3.cost FROM event AS T1 INNER JOIN budget AS T2 ON T1.event_id = T2.link_to_event INNER JOIN expense AS T3 ON T2.budget_id = T3.link_to_budget WHERE T1.event_name = 'September Speaker' AND T3.expense_description = 'Posters'\t----- bird -----\tstudent_club",
    "64": "SELECT T1.event_name FROM event AS T1 INNER JOIN budget AS T2 ON T1.event_id = T2.link_to_event WHERE T1.status = 'Closed' AND T2.remaining < 0 ORDER BY T2.remaining LIMIT 1\t----- bird -----\tstudent_club",
    "65": "SELECT T2.expense_description, SUM(T2.cost) \nFROM event AS T1 \nINNER JOIN expense AS T2 ON T1.event_id = T2.link_to_budget \nINNER JOIN budget AS T3 ON T2.link_to_budget = T3.budget_id \nWHERE T1.event_name = 'October Meeting' AND T2.approved = 'true'\t----- bird -----\tstudent_club",
    "66": "SELECT category, SUM(amount) FROM budget WHERE link_to_event IN (SELECT event_id FROM event WHERE event_name = 'April Speaker') GROUP BY category ORDER BY SUM(amount) ASC\t----- bird -----\tstudent_club",
    "67": "SELECT SUM(cost) FROM expense WHERE expense_date = '2019-08-20'\t----- bird -----\tstudent_club",
    "68": "SELECT T1.first_name, T1.last_name, SUM(T2.cost) FROM member AS T1 INNER JOIN expense AS T2 ON T1.member_id = T2.link_to_member WHERE T1.member_id = 'rec4BLdZHS2Blfp4v'\t----- bird -----\tstudent_club",
    "69": "SELECT T2.expense_description FROM member AS T1 INNER JOIN expense AS T2 ON T1.member_id = T2.link_to_member WHERE T1.first_name = 'Sacha' AND T1.last_name = 'Harrison'\t----- bird -----\tstudent_club",
    "70": "SELECT type FROM event WHERE location = 'MU 215'\t----- bird -----\tstudent_club",
    "71": "SELECT T2.last_name, T1.major_name, T1.department, T1.college \nFROM major AS T1 \nINNER JOIN member AS T2 \nON T1.major_id = T2.link_to_major \nWHERE T1.major_name = 'Environmental Engineering'\t----- bird -----\tstudent_club",
    "72": "SELECT T1.category FROM budget AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T2.location = 'MU 215' AND T2.type = 'Guest Speaker' AND T1.spent = 0\t----- bird -----\tstudent_club",
    "73": "SELECT CAST(SUM(CASE WHEN T1.amount = 50 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T2.member_id) FROM income AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T2.position = 'Member' AND T2.t_shirt_size = 'Medium'\t----- bird -----\tstudent_club",
    "74": "SELECT event_name FROM event WHERE type = 'Game' AND status = 'Closed' AND event_date BETWEEN '2019-03-15' AND '2020-03-20'\t----- bird -----\tstudent_club",
    "75": "SELECT T1.first_name, T1.last_name, T1.phone \nFROM member AS T1 \nJOIN expense AS T2 ON T1.member_id = T2.link_to_member \nWHERE T2.cost > (SELECT AVG(cost) FROM expense)\t----- bird -----\tstudent_club",
    "76": "SELECT T1.first_name, T1.last_name, T2.expense_description, T2.cost \nFROM member AS T1 \nINNER JOIN expense AS T2 \nON T1.member_id = T2.link_to_member \nWHERE T2.expense_description = 'Water, Veggie tray, supplies'\t----- bird -----\tstudent_club",
    "77": "SELECT T1.first_name, T1.last_name, T2.amount FROM member AS T1 INNER JOIN income AS T2 ON T1.member_id = T2.link_to_member WHERE T2.date_received = '9/9/2019'\t----- bird -----\tstudent_club",
    "78": "SELECT \n    (COUNT(CASE WHEN SEX = 'M' AND Admission = '+' THEN ID END) - COUNT(CASE WHEN SEX = 'M' AND Admission = '-' THEN ID END)) * 100.0 / \n    COUNT(CASE WHEN SEX = 'M' THEN ID END) AS deviation_percentage\nFROM Patient\t----- bird -----\tthrombosis_prediction",
    "79": "SELECT CAST(SUM(CASE WHEN STRFTIME('%Y', Birthday) > '1930' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(ID) FROM Patient WHERE SEX = 'F'\t----- bird -----\tthrombosis_prediction",
    "80": "SELECT CAST(SUM(IIF(Admission = '+' AND Diagnosis = 'SLE', 1, 0)) AS REAL) / SUM(IIF(Admission = '-' AND Diagnosis = 'SLE', 1, 0)) FROM Patient\t----- bird -----\tthrombosis_prediction",
    "81": "SELECT T1.Diagnosis, T2.Date \nFROM Patient AS T1 \nINNER JOIN Laboratory AS T2 \nON T1.ID = T2.ID \nWHERE T1.ID = '30609'\t----- bird -----\tthrombosis_prediction",
    "82": "SELECT T1.ID, T1.SEX, T1.Birthday \nFROM Patient AS T1 \nINNER JOIN Laboratory AS T2 \nON T1.ID = T2.ID \nWHERE T2.LDH > 500\t----- bird -----\tthrombosis_prediction",
    "83": "SELECT T1.ID, (strftime('%J', 'now') - strftime('%J', T1.Birthday)) / 365.25 AS Age \nFROM Patient AS T1 \nINNER JOIN Examination AS T2 ON T1.ID = T2.ID \nWHERE T2.RVVT = '+'\t----- bird -----\tthrombosis_prediction",
    "84": "SELECT T1.ID, T1.SEX, T1.Diagnosis FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T2.Thrombosis = 2\t----- bird -----\tthrombosis_prediction",
    "85": "SELECT COUNT(ID) FROM Patient WHERE SEX = 'F' AND STRFTIME('%Y', Description) = '1997' AND Admission = '-'\t----- bird -----\tthrombosis_prediction",
    "86": "SELECT COUNT(T1.ID) FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T2.`Examination Date` LIKE '1997%' AND T2.Thrombosis = 1 AND T1.SEX = 'F'\t----- bird -----\tthrombosis_prediction",
    "87": "SELECT T1.Symptoms, T1.Diagnosis FROM Examination AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID ORDER BY T2.Birthday DESC LIMIT 1\t----- bird -----\tthrombosis_prediction",
    "88": "SELECT MAX(T2.Date), (strftime('%Y', T1.`First Date`) - strftime('%Y', T1.Birthday)) \nFROM Patient AS T1 \nINNER JOIN Laboratory AS T2 ON T1.ID = T2.ID \nWHERE T1.Diagnosis = 'SJS'\t----- bird -----\tthrombosis_prediction",
    "89": "SELECT CAST(SUM(IIF(P.SEX = 'M' AND L.UA <= 8.0, 1, 0)) AS REAL) / SUM(IIF(P.SEX = 'F' AND L.UA <= 6.5, 1, 0)) FROM Patient P INNER JOIN Laboratory L ON P.ID = L.ID\t----- bird -----\tthrombosis_prediction",
    "90": "SELECT COUNT(T1.ID) \nFROM Patient AS T1 \nINNER JOIN Examination AS T2 \nON T1.ID = T2.ID \nWHERE STRFTIME('%Y', T1.Birthday) + 18 > STRFTIME('%Y', T2.`Examination Date`) \nAND STRFTIME('%Y', T2.`Examination Date`) BETWEEN '1990' AND '1993'\t----- bird -----\tthrombosis_prediction",
    "91": "SELECT (strftime('%Y', T1.`Examination Date`) - strftime('%Y', T2.Birthday)) AS Age, T1.Diagnosis \nFROM Examination AS T1 \nINNER JOIN Patient AS T2 ON T1.ID = T2.ID \nINNER JOIN Laboratory AS T3 ON T1.ID = T3.ID \nWHERE T3.HGB = (SELECT MAX(HGB) FROM Laboratory)\t----- bird -----\tthrombosis_prediction",
    "92": "SELECT T2.`aCL IgM` FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.Diagnosis = 'SLE' AND T1.Description = '1994-02-19' AND T2.`Examination Date` = '1993-11-12'\t----- bird -----\tthrombosis_prediction",
    "93": "SELECT CAST(SUM(CASE WHEN T1.Birthday = '1959-02-18' AND T2.Date LIKE '1981-11-%' THEN T2.`T-CHO` ELSE 0 END) - SUM(CASE WHEN T1.Birthday = '1959-02-18' AND T2.Date LIKE '1981-12-%' THEN T2.`T-CHO` ELSE 0 END) AS REAL) / SUM(CASE WHEN T1.Birthday = '1959-02-18' AND T2.Date LIKE '1981-12-%' THEN T2.`T-CHO` ELSE 0 END) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID\t----- bird -----\tthrombosis_prediction",
    "94": "SELECT T1.ID FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.Date BETWEEN '1987-07-06' AND '1996-01-31' AND T2.GPT > 30 AND T2.ALB < 4\t----- bird -----\tthrombosis_prediction",
    "95": "SELECT COUNT(*) \nFROM Examination \nWHERE Thrombosis = 2 AND `ANA Pattern` = 'S' AND `aCL IgM` > (SELECT AVG(`aCL IgM`) * 1.2 FROM Examination)\t----- bird -----\tthrombosis_prediction",
    "96": "SELECT T1.ID, T1.SEX, T1.Birthday, T1.Description, T1.`First Date`, T1.Admission, T1.Diagnosis \nFROM Patient AS T1 \nINNER JOIN Laboratory AS T2 \nON T1.ID = T2.ID \nWHERE T1.Admission = '-' AND T2.Date LIKE '1991-10%' AND T2.`T-BIL` < 2.0\t----- bird -----\tthrombosis_prediction",
    "97": "SELECT AVG(T1.ALB) FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T2.SEX = 'F' AND T1.PLT > 400 AND T2.Diagnosis = 'SLE'\t----- bird -----\tthrombosis_prediction",
    "98": "SELECT COUNT(ID) FROM Patient WHERE SEX = 'F' AND Diagnosis = 'APS'\t----- bird -----\tthrombosis_prediction",
    "99": "SELECT CAST(SUM(IIF(SEX = 'F', 1, 0)) AS REAL) * 100 / COUNT(SEX) FROM Patient WHERE STRFTIME('%Y', Birthday) = '1980' AND Diagnosis = 'RA'\t----- bird -----\tthrombosis_prediction",
    "100": "SELECT CASE WHEN (SELECT UA FROM Laboratory WHERE ID = 57266) > (CASE (SELECT SEX FROM Patient WHERE ID = 57266) WHEN 'M' THEN 8.0 ELSE 6.5 END) THEN 'Yes' ELSE 'No' END\t----- bird -----\tthrombosis_prediction",
    "101": "SELECT DISTINCT T1.ID FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'M' AND T2.GPT >= 60\t----- bird -----\tthrombosis_prediction",
    "102": "SELECT T2.Diagnosis FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.GPT > 60 ORDER BY T2.Birthday DESC\t----- bird -----\tthrombosis_prediction",
    "103": "SELECT T1.ID, T1.SEX, T1.Birthday FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.UN = 29\t----- bird -----\tthrombosis_prediction",
    "104": "SELECT SEX, GROUP_CONCAT(DISTINCT P.ID) FROM Patient P INNER JOIN Laboratory L ON P.ID = L.ID WHERE L.`T-BIL` >= 2.0 GROUP BY P.SEX\t----- bird -----\tthrombosis_prediction",
    "105": "SELECT AVG(STRFTIME('%J', T1.`First Date`) - STRFTIME('%J', T1.Birthday)) / 365.25 \nFROM Patient AS T1 \nINNER JOIN Laboratory AS T2 \nON T1.ID = T2.ID \nWHERE T1.SEX = 'M' AND T2.`T-CHO` >= 250\t----- bird -----\tthrombosis_prediction",
    "106": "SELECT COUNT(DISTINCT T1.ID) \nFROM Patient AS T1 \nINNER JOIN Laboratory AS T2 \nON T1.ID = T2.ID \nWHERE T2.TG >= 200 AND STRFTIME('%Y', T1.Birthday) < STRFTIME('%Y', 'now') - 50\t----- bird -----\tthrombosis_prediction",
    "107": "SELECT COUNT(DISTINCT T1.ID) \nFROM Patient AS T1 \nINNER JOIN Laboratory AS T2 \nON T1.ID = T2.ID \nWHERE T1.SEX = 'M' AND STRFTIME('%Y', T1.Birthday) BETWEEN '1936' AND '1956' AND T2.CPK >= 250\t----- bird -----\tthrombosis_prediction",
    "108": "SELECT T1.ID, T1.SEX, STRFTIME('%J', 'now') - STRFTIME('%J', T1.Birthday) AS age \nFROM Patient AS T1 \nJOIN Laboratory AS T2 ON T1.ID = T2.ID \nWHERE T2.GLU >= 180 AND T2.`T-CHO` < 250\t----- bird -----\tthrombosis_prediction",
    "109": "SELECT T1.Diagnosis, T1.ID, strftime('%J', 'now') - strftime('%J', T1.Birthday) AS Age \nFROM Patient AS T1 \nJOIN Laboratory AS T2 ON T1.ID = T2.ID \nWHERE T2.RBC < 3.5\t----- bird -----\tthrombosis_prediction",
    "110": "SELECT T1.ID, T1.SEX FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID INNER JOIN Laboratory AS T3 ON T1.ID = T3.ID WHERE T2.Diagnosis = 'SLE' AND T3.HGB > 10 AND T3.HGB < 17 ORDER BY T1.Birthday LIMIT 1\t----- bird -----\tthrombosis_prediction",
    "111": "SELECT T1.ID, (strftime('%J', 'now') - strftime('%J', T1.Birthday)) / 365.25 AS Age \nFROM Patient AS T1 \nJOIN Laboratory AS T2 ON T1.ID = T2.ID \nWHERE T2.HCT >= 52 \nGROUP BY T1.ID, T1.Birthday \nHAVING COUNT(T2.ID) > 2\t----- bird -----\tthrombosis_prediction",
    "112": "SELECT \n    SUM(IIF(PLT < 100, 1, 0)) AS lower_than_normal,\n    SUM(IIF(PLT > 400, 1, 0)) AS higher_than_normal,\n    SUM(IIF(PLT < 100, 1, 0)) - SUM(IIF(PLT > 400, 1, 0)) AS comparison\nFROM Laboratory\t----- bird -----\tthrombosis_prediction",
    "113": "SELECT T1.ID, T1.SEX, T1.Birthday \nFROM Patient AS T1 \nINNER JOIN Laboratory AS T2 \nON T1.ID = T2.ID \nWHERE STRFTIME('%Y', T2.Date) = '1984' \nAND STRFTIME('%Y', T1.Birthday) < STRFTIME('%Y', 'now') - 50 \nAND T2.PLT BETWEEN 100 AND 400\t----- bird -----\tthrombosis_prediction",
    "114": "SELECT CAST(SUM(IIF(SEX = 'F' AND PT >= 14, 1, 0)) AS REAL) * 100 / SUM(IIF(PT >= 14, 1, 0)) FROM Patient AS p INNER JOIN Laboratory AS l ON p.ID = l.ID WHERE STRFTIME('%J', 'now') - STRFTIME('%J', Birthday) > 55 * 365\t----- bird -----\tthrombosis_prediction",
    "115": "SELECT COUNT(DISTINCT T1.ID) \nFROM Patient AS T1 \nINNER JOIN Laboratory AS T2 \nON T1.ID = T2.ID \nWHERE T1.SEX = 'M' AND T2.WBC > 3.5 AND T2.WBC < 9.0 AND (T2.FG <= 150 OR T2.FG >= 450)\t----- bird -----\tthrombosis_prediction",
    "116": "SELECT COUNT(DISTINCT ID) FROM Laboratory WHERE IGG >= 2000\t----- bird -----\tthrombosis_prediction",
    "117": "SELECT COUNT(DISTINCT T1.ID) \nFROM Patient AS T1 \nINNER JOIN Laboratory AS T2 \nON T1.ID = T2.ID \nINNER JOIN Examination AS T3 \nON T1.ID = T3.ID \nWHERE T2.IGG > 900 AND T2.IGG < 2000 AND T3.Symptoms IS NOT NULL\t----- bird -----\tthrombosis_prediction",
    "118": "SELECT COUNT(DISTINCT T1.ID) \nFROM Patient AS T1 \nINNER JOIN Laboratory AS T2 \nON T1.ID = T2.ID \nWHERE T2.IGA > 80 AND T2.IGA < 500 AND STRFTIME('%Y', T1.`First Date`) >= 1990\t----- bird -----\tthrombosis_prediction",
    "119": "SELECT T.Diagnosis FROM ( SELECT T1.Diagnosis, COUNT(T1.Diagnosis) as cnt FROM Examination AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.IGM <= 40 OR T2.IGM >= 400 GROUP BY T1.Diagnosis ) AS T ORDER BY T.cnt DESC LIMIT 1\t----- bird -----\tthrombosis_prediction",
    "120": "SELECT COUNT(ID) FROM Patient WHERE ID IN (SELECT ID FROM Laboratory WHERE CRP = '+') AND Description IS NULL\t----- bird -----\tthrombosis_prediction",
    "121": "SELECT COUNT(DISTINCT T1.ID) \nFROM Patient AS T1 \nINNER JOIN Laboratory AS T2 \nON T1.ID = T2.ID \nWHERE T2.CRE >= 1.5 AND STRFTIME('%J', T1.Birthday) > STRFTIME('%J', DATE('now')) - 70 * 365\t----- bird -----\tthrombosis_prediction",
    "122": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.RNP IN ('-', '+-') AND T1.Admission = '+'\t----- bird -----\tthrombosis_prediction",
    "123": "SELECT COUNT(T1.ID) \nFROM Examination AS T1 \nINNER JOIN Laboratory AS T2 \nON T1.ID = T2.ID \nWHERE T2.SM IN ('-', '+-') AND T1.Thrombosis = 0\t----- bird -----\tthrombosis_prediction",
    "124": "SELECT COUNT(DISTINCT T1.ID) \nFROM Patient AS T1 \nINNER JOIN Examination AS T2 ON T1.ID = T2.ID \nINNER JOIN Laboratory AS T3 ON T1.ID = T3.ID \nWHERE T1.SEX = 'F' AND T2.Symptoms IS NULL AND T3.SC170 IN ('negative', '0')\t----- bird -----\tthrombosis_prediction",
    "125": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'M' AND T2.CENTROMEA IN ('-', '+-') AND T2.SSB IN ('-', '+-')\t----- bird -----\tthrombosis_prediction",
    "126": "SELECT MAX(Birthday) FROM Patient AS p INNER JOIN Laboratory AS l ON p.ID = l.ID WHERE l.GOT >= 60\t----- bird -----\tthrombosis_prediction",
    "127": "SELECT COUNT(DISTINCT T1.ID) \nFROM Examination AS T1 \nINNER JOIN Laboratory AS T2 ON T1.ID = T2.ID \nWHERE T2.CPK < 250 AND (T1.KCT = '+' OR T1.RVVT = '+' OR T1.LAC = '+')\t----- bird -----\tthrombosis_prediction",
    "128": "SELECT T2.name FROM \n    (SELECT league_id, SUM(home_team_goal + away_team_goal) as total_goals \n     FROM Match \n     WHERE season = '2015/2016' \n     GROUP BY league_id) AS T1 \nJOIN League AS T2 ON T1.league_id = T2.id \nORDER BY T1.total_goals DESC LIMIT 1\t----- bird -----\teuropean_football_2",
    "129": "SELECT T2.team_long_name FROM ( SELECT away_team_api_id, COUNT(*) as count FROM Match WHERE league_id = ( SELECT id FROM League WHERE name = 'Scotland Premier League' ) AND season = '2009/2010' AND away_team_goal > home_team_goal GROUP BY away_team_api_id ORDER BY count DESC LIMIT 1 ) AS T1 INNER JOIN Team AS T2 ON T1.away_team_api_id = T2.team_api_id\t----- bird -----\teuropean_football_2",
    "130": "SELECT T1.team_long_name, T1.team_short_name, T2.buildUpPlaySpeed \nFROM Team AS T1 \nINNER JOIN Team_Attributes AS T2 \nON T1.team_api_id = T2.team_api_id \nORDER BY T2.buildUpPlaySpeed DESC \nLIMIT 4\t----- bird -----\teuropean_football_2",
    "131": "\n\nSELECT T2.name \nFROM Match AS T1 \nINNER JOIN League AS T2 \nON T1.league_id = T2.id \nWHERE T1.season = '2015/2016' AND T1.home_team_goal = T1.away_team_goal \nGROUP BY T2.name \nORDER BY COUNT(T1.home_team_goal = T1.away_team_goal) DESC \nLIMIT 1\t----- bird -----\teuropean_football_2",
    "132": "SELECT CAST(STRFTIME('%J', '2024-07-26') - STRFTIME('%J', T2.birthday) AS INTEGER) / 365.25 AS age \nFROM Player_Attributes AS T1 \nINNER JOIN Player AS T2 \nON T1.player_api_id = T2.player_api_id \nWHERE T1.sprint_speed >= 97 AND CAST(STRFTIME('%Y', T1.date) AS INTEGER) BETWEEN 2013 AND 2015\t----- bird -----\teuropean_football_2",
    "133": "SELECT T1.name, COUNT(T2.league_id) FROM League AS T1 INNER JOIN `Match` AS T2 ON T1.id = T2.league_id GROUP BY T1.name ORDER BY COUNT(T2.league_id) DESC LIMIT 1\t----- bird -----\teuropean_football_2",
    "134": "SELECT team_fifa_api_id FROM Team_Attributes WHERE buildUpPlaySpeed > 50 AND buildUpPlaySpeed < 60\t----- bird -----\teuropean_football_2",
    "135": "SELECT T2.team_long_name FROM Team_Attributes AS T1 INNER JOIN Team AS T2 ON T1.team_api_id = T2.team_api_id WHERE T1.buildUpPlayPassing > (SELECT AVG(buildUpPlayPassing) FROM Team_Attributes WHERE buildUpPlayPassing IS NOT NULL AND strftime('%Y', date) = '2012') AND strftime('%Y', T1.date) = '2012'\t----- bird -----\teuropean_football_2",
    "136": "SELECT COUNT(Player.player_api_id) FROM Player INNER JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id WHERE Player_Attributes.preferred_foot = 'left' AND STRFTIME('%Y', Player.birthday) BETWEEN '1987' AND '1992'\t----- bird -----\teuropean_football_2",
    "137": "SELECT AVG(T1.long_shots) FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.player_name = 'Ahmed Samir Farag'\t----- bird -----\teuropean_football_2",
    "138": "SELECT T1.player_name FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_fifa_api_id = T2.player_fifa_api_id WHERE T1.height > 180 GROUP BY T1.player_name ORDER BY AVG(T2.heading_accuracy) DESC LIMIT 10\t----- bird -----\teuropean_football_2",
    "139": "SELECT T2.name FROM ( SELECT T1.league_id, SUM(T1.home_team_goal) / COUNT(DISTINCT T1.id) - SUM(T1.away_team_goal) / COUNT(DISTINCT T1.id) AS goal_diff FROM `Match` AS T1 WHERE T1.season = '2009/2010' GROUP BY T1.league_id HAVING SUM(T1.home_team_goal) / COUNT(DISTINCT T1.id) - SUM(T1.away_team_goal) / COUNT(DISTINCT T1.id) > 0 ) AS T3 INNER JOIN League AS T2 ON T3.league_id = T2.id\t----- bird -----\teuropean_football_2",
    "140": "SELECT player_name FROM Player WHERE SUBSTR(birthday, 1, 4) = '1970' AND SUBSTR(birthday, 6, 2) = '10'\t----- bird -----\teuropean_football_2",
    "141": "SELECT T1.overall_rating FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.player_name = 'Gabriel Tamas' AND strftime('%Y', T1.date) = '2011'\t----- bird -----\teuropean_football_2",
    "142": "SELECT AVG(T1.home_team_goal) FROM Match AS T1 INNER JOIN Country AS T2 ON T1.country_id = T2.id WHERE T2.name = 'Poland' AND T1.season = '2010/2011'\t----- bird -----\teuropean_football_2",
    "143": "SELECT MAX(AVG(finishing)) FROM Player \nINNER JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id \nWHERE height = (SELECT MAX(height) FROM Player) OR height = (SELECT MIN(height) FROM Player)\t----- bird -----\teuropean_football_2",
    "144": "SELECT SUM(T2.overall_rating) / COUNT(T2.id) FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.height > 170 AND strftime('%Y', T2.date) BETWEEN '2010' AND '2015'\t----- bird -----\teuropean_football_2",
    "145": "SELECT SUM(CASE WHEN P.player_name = 'Abdou Diallo' THEN PA.ball_control ELSE 0 END) / COUNT(CASE WHEN P.player_name = 'Abdou Diallo' THEN PA.id ELSE NULL END) - SUM(CASE WHEN P.player_name = 'Aaron Appindangoye' THEN PA.ball_control ELSE 0 END) / COUNT(CASE WHEN P.player_name = 'Aaron Appindangoye' THEN PA.id ELSE NULL END) FROM Player_Attributes PA INNER JOIN Player P ON PA.player_api_id = P.player_api_id\t----- bird -----\teuropean_football_2",
    "146": "SELECT player_name FROM Player WHERE player_name IN ('Aaron Lennon', 'Abdelaziz Barrada') ORDER BY birthday LIMIT 1\t----- bird -----\teuropean_football_2",
    "147": "SELECT player_name FROM Player ORDER BY height DESC LIMIT 1\t----- bird -----\teuropean_football_2",
    "148": "SELECT COUNT(*) FROM Player_Attributes WHERE preferred_foot = 'left' AND attacking_work_rate = 'low'\t----- bird -----\teuropean_football_2",
    "149": "SELECT COUNT(DISTINCT T1.player_api_id) FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE strftime('%Y', T2.birthday) < '1986' AND T1.defensive_work_rate = 'high'\t----- bird -----\teuropean_football_2",
    "150": "SELECT T2.player_name FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.volleys > 70 AND T1.dribbling > 70\t----- bird -----\teuropean_football_2",
    "151": "SELECT COUNT(*) FROM Match WHERE SUBSTR(`date`, 1, 7) = '2009-04' AND league_id IN (SELECT id FROM League WHERE name = 'Belgium Jupiler League')\t----- bird -----\teuropean_football_2",
    "152": "SELECT T2.name FROM Match AS T1 INNER JOIN League AS T2 ON T1.league_id = T2.id WHERE T1.season = '2008/2009' GROUP BY T2.name ORDER BY COUNT(T1.id) DESC LIMIT 1\t----- bird -----\teuropean_football_2",
    "153": "SELECT CAST((SELECT overall_rating FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.player_name = 'Ariel Borysiuk' ORDER BY T1.date DESC LIMIT 1) - (SELECT overall_rating FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.player_name = 'Paulin Puel' ORDER BY T1.date DESC LIMIT 1) AS REAL) * 100 / (SELECT overall_rating FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.player_name = 'Paulin Puel' ORDER BY T1.date DESC LIMIT 1)\t----- bird -----\teuropean_football_2",
    "154": "SELECT AVG(T1.overall_rating) FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.player_name = 'Pietro Marino'\t----- bird -----\teuropean_football_2",
    "155": "SELECT MAX(T1.chanceCreationPassing), T1.chanceCreationPassingClass \nFROM Team_Attributes AS T1 \nINNER JOIN Team AS T2 ON T1.team_api_id = T2.team_api_id \nWHERE T2.team_long_name = 'Ajax'\t----- bird -----\teuropean_football_2",
    "156": "SELECT T1.player_name FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.overall_rating = 77 AND T2.date LIKE '2016-06-23%' ORDER BY T1.birthday LIMIT 1\t----- bird -----\teuropean_football_2",
    "157": "SELECT T1.overall_rating FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.player_name = 'Aaron Mooy' AND T1.date LIKE '2016-02-04%'\t----- bird -----\teuropean_football_2",
    "158": "SELECT attacking_work_rate FROM Player_Attributes WHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Francesco Migliore') AND date LIKE '2015-05-01%'\t----- bird -----\teuropean_football_2",
    "159": "SELECT date FROM Player_Attributes WHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Kevin Constant') ORDER BY crossing DESC LIMIT 1\t----- bird -----\teuropean_football_2",
    "160": "SELECT T2.buildUpPlayPassingClass FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T1.team_long_name = 'FC Lorient' AND T2.date LIKE '2010-02-22%'\t----- bird -----\teuropean_football_2",
    "161": "SELECT T2.defenceAggressionClass FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T1.team_long_name = 'Hannover 96' AND T2.date LIKE '2015-09-10%'\t----- bird -----\teuropean_football_2",
    "162": "SELECT AVG(T1.overall_rating) \nFROM Player_Attributes AS T1 \nINNER JOIN Player AS T2 \nON T1.player_api_id = T2.player_api_id \nWHERE T2.player_name = 'Marko Arnautovic' \nAND SUBSTR(T1.date, 1, 10) BETWEEN '2007-02-22' AND '2016-04-21'\t----- bird -----\teuropean_football_2",
    "163": "SELECT CAST(((SELECT overall_rating FROM Player_Attributes WHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Landon Donovan') AND date = '2013/7/12') - (SELECT overall_rating FROM Player_Attributes WHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Jordan Bowery') AND date = '2013/7/12')) / (SELECT overall_rating FROM Player_Attributes WHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Landon Donovan') AND date = '2013/7/12')) * 100 AS REAL)\t----- bird -----\teuropean_football_2",
    "164": "SELECT player_name FROM Player ORDER BY height DESC LIMIT 1\t----- bird -----\teuropean_football_2",
    "165": "SELECT player_name FROM Player AS p INNER JOIN Player_Attributes AS pa ON p.player_api_id = pa.player_api_id ORDER BY pa.overall_rating DESC LIMIT 1\t----- bird -----\teuropean_football_2",
    "166": "SELECT T1.player_name FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.attacking_work_rate = 'high'\t----- bird -----\teuropean_football_2",
    "167": "SELECT T2.team_short_name FROM Team_Attributes AS T1 INNER JOIN Team AS T2 ON T1.team_api_id = T2.team_api_id WHERE T1.chanceCreationPassingClass = 'Safe'\t----- bird -----\teuropean_football_2",
    "168": "SELECT COUNT(*) FROM Player WHERE player_name LIKE 'Aaron%' AND birthday > '1990'\t----- bird -----\teuropean_football_2",
    "169": "SELECT ABS((SELECT jumping FROM Player_Attributes WHERE id = 6) - (SELECT jumping FROM Player_Attributes WHERE id = 23))\t----- bird -----\teuropean_football_2",
    "170": "SELECT player_api_id FROM Player_Attributes WHERE preferred_foot = 'right' ORDER BY potential ASC LIMIT 4\t----- bird -----\teuropean_football_2",
    "171": "SELECT COUNT(*) FROM Player_Attributes WHERE preferred_foot = 'left' AND crossing = (SELECT MAX(crossing) FROM Player_Attributes)\t----- bird -----\teuropean_football_2",
    "172": "SELECT T1.home_team_goal, T1.away_team_goal FROM Match AS T1 INNER JOIN League AS T2 ON T1.league_id = T2.id INNER JOIN Country AS T3 ON T2.country_id = T3.id WHERE T2.name = 'Belgium Jupiler League' AND T1.date LIKE '2008-09-24%'\t----- bird -----\teuropean_football_2",
    "173": "SELECT buildUpPlaySpeedClass FROM Team_Attributes AS ta INNER JOIN Team AS t ON ta.team_api_id = t.team_api_id WHERE t.team_long_name = 'KSV Cercle Brugge'\t----- bird -----\teuropean_football_2",
    "174": "SELECT T1.finishing, T1.curve FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id ORDER BY T2.weight DESC LIMIT 1\t----- bird -----\teuropean_football_2",
    "175": "SELECT T2.name FROM Match AS T1 INNER JOIN League AS T2 ON T1.league_id = T2.id WHERE T1.season = '2015/2016' GROUP BY T2.name ORDER BY COUNT(T1.id) DESC LIMIT 4\t----- bird -----\teuropean_football_2",
    "176": "SELECT T1.team_long_name FROM Team AS T1 INNER JOIN Match AS T2 ON T1.team_api_id = T2.away_team_api_id ORDER BY T2.away_team_goal DESC LIMIT 1\t----- bird -----\teuropean_football_2",
    "177": "SELECT player_name FROM Player_Attributes INNER JOIN Player ON Player_Attributes.player_api_id = Player.player_api_id ORDER BY overall_rating DESC LIMIT 1\t----- bird -----\teuropean_football_2",
    "178": "SELECT CAST(SUM(IIF(height < 180 AND (SELECT overall_rating FROM Player_Attributes WHERE player_api_id = Player.id ORDER BY date DESC LIMIT 1) > 70, 1, 0)) AS REAL) * 100 / COUNT(id) FROM Player\t----- bird -----\teuropean_football_2",
    "179": "SELECT T1.driverRef FROM drivers AS T1 INNER JOIN qualifying AS T2 ON T1.driverId = T2.driverId WHERE T2.raceId = 20 AND T2.q1 IN (SELECT MAX(q1) FROM qualifying WHERE raceId = 20)\t----- bird -----\tformula_1",
    "180": "SELECT T1.surname FROM drivers AS T1 INNER JOIN qualifying AS T2 ON T1.driverId = T2.driverId WHERE T2.raceId = 19 AND T2.q2 = (SELECT MIN(q2) FROM qualifying WHERE raceId = 19)\t----- bird -----\tformula_1",
    "181": "SELECT T2.name FROM circuits AS T1 INNER JOIN races AS T2 ON T1.circuitId = T2.circuitId WHERE T1.country = 'Germany'\t----- bird -----\tformula_1",
    "182": "SELECT T1.lat, T1.lng FROM circuits AS T1 INNER JOIN races AS T2 ON T1.circuitId = T2.circuitId WHERE T2.name = 'Australian Grand Prix'\t----- bird -----\tformula_1",
    "183": "SELECT T1.lat, T1.lng FROM circuits AS T1 INNER JOIN races AS T2 ON T1.circuitId = T2.circuitId WHERE T2.name = 'Abu Dhabi Grand Prix'\t----- bird -----\tformula_1",
    "184": "SELECT T2.q1 FROM drivers AS T1 INNER JOIN qualifying AS T2 ON T1.driverId = T2.driverId INNER JOIN races AS T3 ON T2.raceId = T3.raceId WHERE T3.raceId = 354 AND T1.forename = 'Bruno' AND T1.surname = 'Senna'\t----- bird -----\tformula_1",
    "185": "SELECT T1.number FROM drivers AS T1 INNER JOIN qualifying AS T2 ON T1.driverId = T2.driverId WHERE T2.raceId = 903 AND T2.q3 LIKE '0:01:54%'\t----- bird -----\tformula_1",
    "186": "SELECT COUNT(DISTINCT T1.driverId) \nFROM results AS T1 \nINNER JOIN races AS T2 ON T1.raceId = T2.raceId \nWHERE T2.name = 'Bahrain Grand Prix' AND T2.year = 2007 AND T1.time IS NULL\t----- bird -----\tformula_1",
    "187": "SELECT T1.forename, T1.surname, T1.dob \nFROM drivers AS T1 \nINNER JOIN results AS T2 ON T1.driverId = T2.driverId \nWHERE T2.raceId = 592 AND T2.time IS NOT NULL \nORDER BY T1.dob ASC LIMIT 1\t----- bird -----\tformula_1",
    "188": "SELECT T1.url FROM drivers AS T1 INNER JOIN lapTimes AS T2 ON T1.driverId = T2.driverId WHERE T2.time LIKE '1:27%' AND T2.raceId = 161\t----- bird -----\tformula_1",
    "189": "SELECT T1.lat, T1.lng FROM circuits AS T1 INNER JOIN races AS T2 ON T1.circuitId = T2.circuitId WHERE T2.name = 'Malaysian Grand Prix'\t----- bird -----\tformula_1",
    "190": "SELECT T2.url FROM constructorResults AS T1 INNER JOIN constructors AS T2 ON T1.constructorId = T2.constructorId WHERE T1.raceId = 9 ORDER BY T1.points DESC LIMIT 1\t----- bird -----\tformula_1",
    "191": "SELECT T1.code FROM drivers AS T1 INNER JOIN qualifying AS T2 ON T1.driverId = T2.driverId WHERE T2.raceId = 45 AND T2.q3 = '0:01:33'\t----- bird -----\tformula_1",
    "192": "SELECT T1.url FROM seasons AS T1 INNER JOIN races AS T2 ON T1.year = T2.year WHERE T2.raceId = 901\t----- bird -----\tformula_1",
    "193": "SELECT T1.forename, T1.surname, T1.dob \nFROM drivers AS T1 \nINNER JOIN results AS T2 ON T1.driverId = T2.driverId \nWHERE T2.raceId = 872 AND T2.time IS NOT NULL \nORDER BY T1.dob DESC LIMIT 1\t----- bird -----\tformula_1",
    "194": "SELECT T1.nationality FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId ORDER BY T2.fastestLapSpeed DESC LIMIT 1\t----- bird -----\tformula_1",
    "195": "SELECT CAST((r1.fastestLapSpeed - r2.fastestLapSpeed) AS REAL) * 100 / r1.fastestLapSpeed FROM results r1 \nJOIN drivers d1 ON r1.driverId = d1.driverId \nJOIN results r2 ON r2.raceId = r1.raceId + 1 \nJOIN drivers d2 ON r2.driverId = d2.driverId \nWHERE d1.forename = 'Paul' AND d1.surname = 'di Resta' AND r1.raceId = 853\t----- bird -----\tformula_1",
    "196": "SELECT CAST(SUM(CASE WHEN T2.time IS NOT NULL THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T2.driverId) FROM races AS T1 INNER JOIN results AS T2 ON T1.raceId = T2.raceId WHERE T1.date = '1983-07-16'\t----- bird -----\tformula_1",
    "197": "SELECT name FROM races WHERE STRFTIME('%Y-%m', date) = (SELECT STRFTIME('%Y-%m', date) FROM races ORDER BY date LIMIT 1)\t----- bird -----\tformula_1",
    "198": "SELECT T1.forename, T1.surname, T2.points \nFROM drivers AS T1 \nJOIN driverStandings AS T2 ON T1.driverId = T2.driverId \nORDER BY T2.points DESC LIMIT 1\t----- bird -----\tformula_1",
    "199": "SELECT T1.forename, T1.surname, T3.name, T2.milliseconds \nFROM drivers AS T1 \nINNER JOIN lapTimes AS T2 ON T1.driverId = T2.driverId \nINNER JOIN races AS T3 ON T2.raceId = T3.raceId \nORDER BY T2.milliseconds ASC LIMIT 1\t----- bird -----\tformula_1",
    "200": "SELECT AVG(T2.milliseconds) \nFROM drivers AS T1 \nINNER JOIN lapTimes AS T2 ON T1.driverId = T2.driverId \nINNER JOIN races AS T3 ON T2.raceId = T3.raceId \nWHERE T1.forename = 'Lewis' AND T1.surname = 'Hamilton' AND T3.name = 'Malaysian Grand Prix' AND T3.year = 2009\t----- bird -----\tformula_1",
    "201": "SELECT CAST(SUM(CASE WHEN T1.position > 1 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.raceId) FROM results AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId INNER JOIN races AS T3 ON T1.raceId = T3.raceId WHERE T2.surname = 'Hamilton' AND T3.year >= 2010\t----- bird -----\tformula_1",
    "202": "SELECT T1.forename, T1.surname, T1.nationality, MAX(T2.points) \nFROM drivers AS T1 \nJOIN driverStandings AS T2 ON T1.driverId = T2.driverId \nGROUP BY T1.forename, T1.surname, T1.nationality \nORDER BY COUNT(T2.wins) DESC LIMIT 1\t----- bird -----\tformula_1",
    "203": "SELECT forename, surname, STRFTIME('%J', dob) - STRFTIME('%J', 'now') AS age FROM drivers WHERE nationality = 'Japanese' ORDER BY dob DESC LIMIT 1\t----- bird -----\tformula_1",
    "204": "SELECT T1.name, T2.name, T2.location \nFROM races AS T1 \nINNER JOIN circuits AS T2 \nON T1.circuitId = T2.circuitId \nWHERE STRFTIME('%Y', T1.date) = '2005' AND STRFTIME('%m', T1.date) = '09'\t----- bird -----\tformula_1",
    "205": "SELECT T3.name FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId INNER JOIN races AS T3 ON T2.raceId = T3.raceId WHERE T1.forename = 'Alex' AND T1.surname = 'Yoong' AND T2.position < 20\t----- bird -----\tformula_1",
    "206": "SELECT T2.name, T2.year FROM results AS T1 \nINNER JOIN races AS T2 ON T1.raceId = T2.raceId \nINNER JOIN drivers AS T3 ON T1.driverId = T3.driverId \nWHERE T3.forename = 'Michael' AND T3.surname = 'Schumacher' AND T1.fastestLap = 1\t----- bird -----\tformula_1",
    "207": "SELECT T1.name, T3.points \nFROM circuits AS T1 \nINNER JOIN races AS T2 ON T1.circuitId = T2.circuitId \nINNER JOIN results AS T3 ON T2.raceId = T3.raceId \nINNER JOIN drivers AS T4 ON T3.driverId = T4.driverId \nWHERE T4.forename = 'Lewis' AND T4.surname = 'Hamilton' \nORDER BY T2.year \nLIMIT 1\t----- bird -----\tformula_1",
    "208": "SELECT SUM(IIF(c.country = 'Germany', 1, 0)) * 100 / COUNT(r.raceId) FROM races r INNER JOIN circuits c ON r.circuitId = c.circuitId WHERE r.name = 'European Grand Prix'\t----- bird -----\tformula_1",
    "209": "SELECT lat, lng FROM circuits WHERE name = 'Silverstone Circuit'\t----- bird -----\tformula_1",
    "210": "SELECT circuitRef FROM circuits WHERE name = 'Marina Bay Street Circuit'\t----- bird -----\tformula_1",
    "211": "SELECT T2.country FROM drivers AS T1 INNER JOIN circuits AS T2 ON T1.nationality = T2.country ORDER BY T1.dob LIMIT 1\t----- bird -----\tformula_1",
    "212": "SELECT T1.driverRef FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId INNER JOIN races AS T3 ON T2.raceId = T3.raceId WHERE T3.name = 'Canadian Grand Prix' AND T3.year = 2007 ORDER BY T2.positionOrder LIMIT 1\t----- bird -----\tformula_1",
    "213": "SELECT T3.name, T3.date \nFROM results AS T1 \nINNER JOIN drivers AS T2 ON T1.driverId = T2.driverId \nINNER JOIN races AS T3 ON T1.raceId = T3.raceId \nWHERE T2.forename = 'Lewis' AND T2.surname = 'Hamilton' \nORDER BY T1.rank \nLIMIT 1\t----- bird -----\tformula_1",
    "214": "SELECT MAX(T1.fastestLapSpeed) FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T2.name = 'Spanish Grand Prix' AND T2.year = 2009\t----- bird -----\tformula_1",
    "215": "SELECT T2.positionOrder \nFROM drivers AS T1 \nINNER JOIN results AS T2 ON T1.driverId = T2.driverId \nINNER JOIN races AS T3 ON T2.raceId = T3.raceId \nWHERE T1.forename = 'Lewis' AND T1.surname = 'Hamilton' AND T3.name = 'Chinese Grand Prix' AND T3.year = 2008\t----- bird -----\tformula_1",
    "216": "SELECT T1.time FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T2.year = 2008 AND T2.name = 'Australian Grand Prix' AND T1.position = 2\t----- bird -----\tformula_1",
    "217": "SELECT COUNT(DISTINCT T1.driverId) \nFROM results AS T1 \nINNER JOIN races AS T2 \nON T1.raceId = T2.raceId \nWHERE T2.year = 2008 AND T2.round = 17 AND T1.time IS NOT NULL AND T1.position IS NOT NULL\t----- bird -----\tformula_1",
    "218": "SELECT CAST((CAST(REPLACE(SUBSTR(T2.time, 1, 5), ':', '') AS REAL) - CAST(REPLACE(SUBSTR(T1.time, 1, 5), ':', '') AS REAL)) / CAST(REPLACE(SUBSTR(T2.time, 1, 5), ':', '') AS REAL) * 100 AS REAL) FROM results AS T1 INNER JOIN results AS T2 ON T1.raceId = T2.raceId WHERE T1.position = 1 AND T2.position = (SELECT MAX(position) FROM results WHERE raceId = T1.raceId) AND T1.raceId = (SELECT raceId FROM races WHERE name = 'Australian Grand Prix' AND year = 2008)\t----- bird -----\tformula_1",
    "219": "SELECT COUNT(circuitId) FROM circuits WHERE location = 'Adelaide' AND country = 'Australia'\t----- bird -----\tformula_1",
    "220": "SELECT MAX(T1.points) FROM constructorStandings AS T1 INNER JOIN constructors AS T2 ON T1.constructorId = T2.constructorId WHERE T2.nationality = 'British'\t----- bird -----\tformula_1",
    "221": "SELECT T2.name FROM constructorResults AS T1 INNER JOIN constructors AS T2 ON T1.constructorId = T2.constructorId WHERE T1.raceId = 291 AND T1.points = 0\t----- bird -----\tformula_1",
    "222": "SELECT COUNT(*) \nFROM constructors AS c \nJOIN constructorStandings AS cs ON c.constructorId = cs.constructorId \nWHERE c.nationality = 'Japanese' AND cs.points = 0 \nGROUP BY c.constructorId \nHAVING COUNT(cs.raceId) = 2\t----- bird -----\tformula_1",
    "223": "SELECT CAST(SUM(CASE WHEN T1.time IS NOT NULL THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.driverId) FROM results AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId INNER JOIN races AS T3 ON T1.raceId = T3.raceId WHERE T2.nationality = 'Japanese' AND T3.year BETWEEN 2007 AND 2009\t----- bird -----\tformula_1",
    "224": "SELECT AVG(SUBSTR(T1.time, 1, 2) * 3600 + SUBSTR(T1.time, 4, 2) * 60 + SUBSTR(T1.time, 7, 3) / 1000) AS average_time, T2.year \nFROM results AS T1 \nJOIN races AS T2 ON T1.raceId = T2.raceId \nWHERE T1.position = 1 AND T1.time IS NOT NULL AND T2.year < 1975 \nGROUP BY T2.year\t----- bird -----\tformula_1",
    "225": "SELECT T1.fastestLap FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T2.year = 2009 AND T1.time LIKE '%:%:%.%'\t----- bird -----\tformula_1",
    "226": "SELECT AVG(T1.fastestLapSpeed) FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T2.name = 'Spanish Grand Prix' AND T2.year = 2009\t----- bird -----\tformula_1",
    "227": "SELECT CAST(SUM(IIF(STRFTIME('%Y', T1.dob) < 1985 AND T2.laps > 50, 1, 0)) AS REAL) * 100 / COUNT(T1.driverId) FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId INNER JOIN races AS T3 ON T2.raceId = T3.raceId WHERE T3.year BETWEEN 2000 AND 2005\t----- bird -----\tformula_1",
    "228": "SELECT COUNT(DISTINCT T1.driverId) \nFROM drivers AS T1 \nJOIN lapTimes AS T2 ON T1.driverId = T2.driverId \nWHERE T1.nationality = 'French' AND T2.milliseconds < 120000\t----- bird -----\tformula_1",
    "229": "SELECT code FROM drivers WHERE nationality = 'American'\t----- bird -----\tformula_1",
    "230": "SELECT code FROM drivers ORDER BY STRFTIME('%Y', dob) DESC LIMIT 3\t----- bird -----\tformula_1",
    "231": "SELECT driverRef FROM drivers WHERE nationality = 'German' ORDER BY dob LIMIT 1\t----- bird -----\tformula_1",
    "232": "SELECT T1.driverId, T1.code FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId WHERE STRFTIME('%Y', T1.dob) = '1971' AND T2.fastestLapTime IS NOT NULL\t----- bird -----\tformula_1",
    "233": "SELECT COUNT(*) FROM results WHERE raceId BETWEEN 50 AND 100 AND time IS NOT NULL AND statusId = 2\t----- bird -----\tformula_1",
    "234": "SELECT COUNT(circuitId), location, lat, lng FROM circuits WHERE country = 'Austria'\t----- bird -----\tformula_1",
    "235": "SELECT T1.year, T3.forename, T3.surname, T1.date, T1.time \nFROM races AS T1 \nJOIN qualifying AS T2 ON T1.raceId = T2.raceId \nJOIN drivers AS T3 ON T2.driverId = T3.driverId \nWHERE T3.dob = (SELECT MAX(dob) FROM drivers) AND T1.date = (SELECT MIN(T1.date) FROM races AS T1 JOIN qualifying AS T2 ON T1.raceId = T2.raceId JOIN drivers AS T3 ON T2.driverId = T3.driverId WHERE T3.dob = (SELECT MAX(dob) FROM drivers))\t----- bird -----\tformula_1",
    "236": "SELECT T1.forename, T1.surname, T2.avg_duration \nFROM drivers AS T1 \nJOIN ( \n    SELECT T1.driverId, AVG(T2.duration) AS avg_duration \n    FROM drivers AS T1 \n    JOIN pitStops AS T2 ON T1.driverId = T2.driverId \n    WHERE T1.nationality = 'German' AND STRFTIME('%Y', T1.dob) BETWEEN '1980' AND '1985' \n    GROUP BY T1.driverId \n) AS T2 ON T1.driverId = T2.driverId \nORDER BY T2.avg_duration \nLIMIT 3\t----- bird -----\tformula_1",
    "237": "SELECT T1.forename, T1.surname, T2.time FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId INNER JOIN races AS T3 ON T2.raceId = T3.raceId WHERE T3.year = 2008 AND T3.name = 'Canadian Grand Prix' AND T2.position = 1\t----- bird -----\tformula_1",
    "238": "SELECT T3.constructorRef, T3.url FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId INNER JOIN constructors AS T3 ON T1.constructorId = T3.constructorId WHERE T2.name = 'Singapore Grand Prix' AND T2.year = 2009 ORDER BY T1.positionOrder LIMIT 1\t----- bird -----\tformula_1",
    "239": "SELECT T3.power_name \nFROM superhero AS T1 \nINNER JOIN hero_power AS T2 ON T1.id = T2.hero_id \nINNER JOIN superpower AS T3 ON T2.power_id = T3.id \nWHERE T1.superhero_name = '3-D Man'\t----- bird -----\tsuperhero",
    "240": "SELECT SUM(T1.points), T2.name, T2.nationality \nFROM constructorStandings AS T1 \nJOIN constructors AS T2 ON T1.constructorId = T2.constructorId \nJOIN races AS T3 ON T1.raceId = T3.raceId \nWHERE T3.name = 'Monaco Grand Prix' AND T3.year BETWEEN 1980 AND 2010 \nGROUP BY T2.name, T2.nationality \nORDER BY SUM(T1.points) DESC \nLIMIT 1\t----- bird -----\tformula_1",
    "241": "SELECT T3.forename, T3.surname \nFROM qualifying AS T1 \nINNER JOIN races AS T2 ON T1.raceId = T2.raceId \nINNER JOIN drivers AS T3 ON T1.driverId = T3.driverId \nINNER JOIN circuits AS T4 ON T2.circuitId = T4.circuitId \nWHERE T2.year = 2008 AND T4.name = 'Marina Bay Street Circuit' AND T1.q3 = (SELECT MIN(q3) FROM qualifying)\t----- bird -----\tformula_1",
    "242": "SELECT T1.forename, T1.surname, T1.nationality, T3.name \nFROM drivers AS T1 \nJOIN results AS T2 ON T1.driverId = T2.driverId \nJOIN races AS T3 ON T2.raceId = T3.raceId \nORDER BY T1.dob DESC LIMIT 1\t----- bird -----\tformula_1",
    "243": "SELECT COUNT(T1.statusId) FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T2.name = 'Canadian Grand Prix' AND T1.statusId = 3 GROUP BY T1.driverId ORDER BY COUNT(T1.statusId) DESC LIMIT 1\t----- bird -----\tformula_1",
    "244": "SELECT T1.forename, T1.surname FROM drivers AS T1 INNER JOIN lapTimes AS T2 ON T1.driverId = T2.driverId ORDER BY T2.time LIMIT 20\t----- bird -----\tformula_1",
    "245": "SELECT T1.name, T2.time FROM circuits AS T1 INNER JOIN lapTimes AS T2 ON T1.circuitId = T2.raceId INNER JOIN races AS T3 ON T2.raceId = T3.raceId WHERE T1.country = 'Italy' AND T2.milliseconds = ( SELECT MIN(T2.milliseconds) FROM lapTimes AS T2 INNER JOIN races AS T3 ON T2.raceId = T3.raceId INNER JOIN circuits AS T1 ON T3.circuitId = T1.circuitId WHERE T1.country = 'Italy' )\t----- bird -----\tformula_1",
    "246": "SELECT COUNT(T1.id) \nFROM superhero AS T1 \nINNER JOIN hero_power AS T2 ON T1.id = T2.hero_id \nINNER JOIN superpower AS T3 ON T2.power_id = T3.id \nWHERE T3.power_name = 'Super Strength' AND T1.height_cm > 200\t----- bird -----\tsuperhero",
    "247": "SELECT COUNT(T1.id) \nFROM superhero AS T1 \nINNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id \nINNER JOIN hero_power AS T3 ON T1.id = T3.hero_id \nINNER JOIN superpower AS T4 ON T3.power_id = T4.id \nWHERE T2.colour = 'Blue' AND T4.power_name = 'Agility'\t----- bird -----\tsuperhero",
    "248": "SELECT T1.superhero_name \nFROM superhero AS T1 \nJOIN colour AS T2 ON T1.eye_colour_id = T2.id \nJOIN colour AS T3 ON T1.hair_colour_id = T3.id \nWHERE T2.colour = 'Blue' AND T3.colour = 'Blond'\t----- bird -----\tsuperhero",
    "249": "SELECT superhero_name FROM superhero \nJOIN publisher ON superhero.publisher_id = publisher.id \nWHERE publisher_name = 'Marvel Comics' \nORDER BY height_cm DESC\t----- bird -----\tsuperhero",
    "250": "SELECT T2.colour, COUNT(T1.id) \nFROM superhero AS T1 \nJOIN colour AS T2 ON T1.eye_colour_id = T2.id \nJOIN publisher AS T3 ON T1.publisher_id = T3.id \nWHERE T3.publisher_name = 'Marvel Comics' \nGROUP BY T2.colour \nORDER BY COUNT(T1.id) DESC\t----- bird -----\tsuperhero",
    "251": "SELECT T1.superhero_name \nFROM superhero AS T1 \nJOIN publisher AS T2 ON T1.publisher_id = T2.id \nJOIN hero_power AS T3 ON T1.id = T3.hero_id \nJOIN superpower AS T4 ON T3.power_id = T4.id \nWHERE T2.publisher_name = 'Marvel Comics' AND T4.power_name = 'Super Strength'\t----- bird -----\tsuperhero",
    "252": "SELECT T4.publisher_name \nFROM hero_attribute AS T1 \nINNER JOIN attribute AS T2 ON T1.attribute_id = T2.id \nINNER JOIN superhero AS T3 ON T1.hero_id = T3.id \nINNER JOIN publisher AS T4 ON T3.publisher_id = T4.id \nWHERE T2.attribute_name = 'Speed' \nORDER BY T1.attribute_value ASC LIMIT 1\t----- bird -----\tsuperhero",
    "253": "SELECT COUNT(T1.id) \nFROM superhero AS T1 \nJOIN colour AS T2 ON T1.eye_colour_id = T2.id \nJOIN publisher AS T3 ON T1.publisher_id = T3.id \nWHERE T2.colour = 'Gold' AND T3.publisher_name = 'Marvel Comics'\t----- bird -----\tsuperhero",
    "254": "SELECT T1.superhero_name \nFROM superhero AS T1 \nJOIN hero_attribute AS T2 ON T1.id = T2.hero_id \nJOIN attribute AS T3 ON T2.attribute_id = T3.id \nWHERE T3.attribute_name = 'Intelligence' \nORDER BY T2.attribute_value ASC LIMIT 1\t----- bird -----\tsuperhero",
    "255": "SELECT T1.race FROM race AS T1 INNER JOIN superhero AS T2 ON T1.id = T2.race_id WHERE T2.superhero_name = 'Copycat'\t----- bird -----\tsuperhero",
    "256": "SELECT T1.superhero_name \nFROM superhero AS T1 \nINNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id \nINNER JOIN attribute AS T3 ON T2.attribute_id = T3.id \nWHERE T3.attribute_name = 'Durability' AND T2.attribute_value < 50\t----- bird -----\tsuperhero",
    "257": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T3.power_name = 'Death Touch'\t----- bird -----\tsuperhero",
    "258": "SELECT COUNT(T1.id) \nFROM superhero AS T1 \nINNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id \nINNER JOIN attribute AS T3 ON T2.attribute_id = T3.id \nINNER JOIN gender AS T4 ON T1.gender_id = T4.id \nWHERE T3.attribute_name = 'Strength' AND T2.attribute_value = 100 AND T4.gender = 'Female'\t----- bird -----\tsuperhero",
    "259": "SELECT \n    CAST(SUM(IIF(T1.alignment = 'Bad', 1, 0)) AS REAL) * 100 / COUNT(T1.id) AS percentage,\n    SUM(IIF(T1.alignment = 'Bad' AND T3.publisher_name = 'Marvel Comics', 1, 0)) AS marvel_bad\nFROM alignment AS T1\nJOIN superhero AS T2 ON T1.id = T2.alignment_id\nJOIN publisher AS T3 ON T2.publisher_id = T3.id\t----- bird -----\tsuperhero",
    "260": "SELECT \n    SUM(CASE WHEN T2.publisher_name = 'Marvel Comics' THEN 1 ELSE 0 END) - \n    SUM(CASE WHEN T2.publisher_name = 'DC Comics' THEN 1 ELSE 0 END) \nFROM superhero AS T1 \nINNER JOIN publisher AS T2 ON T1.publisher_id = T2.id\t----- bird -----\tsuperhero",
    "261": "SELECT id FROM publisher WHERE publisher_name = 'Star Trek'\t----- bird -----\tsuperhero",
    "262": "SELECT COUNT(id) FROM superhero WHERE full_name IS NULL\t----- bird -----\tsuperhero",
    "263": "SELECT AVG(T1.weight_kg) \nFROM superhero AS T1 \nINNER JOIN gender AS T2 ON T1.gender_id = T2.id \nWHERE T2.gender = 'Female'\t----- bird -----\tsuperhero",
    "264": "SELECT T4.power_name \nFROM superhero AS T1 \nINNER JOIN gender AS T2 ON T1.gender_id = T2.id \nINNER JOIN hero_power AS T3 ON T1.id = T3.hero_id \nINNER JOIN superpower AS T4 ON T3.power_id = T4.id \nWHERE T2.gender = 'Male'\t----- bird -----\tsuperhero",
    "265": "SELECT T1.superhero_name \nFROM superhero AS T1 \nINNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id \nWHERE T2.colour = 'No Colour' AND T1.height_cm BETWEEN 170 AND 190\t----- bird -----\tsuperhero",
    "266": "SELECT T3.colour FROM superhero AS T1 \nINNER JOIN race AS T2 ON T1.race_id = T2.id \nINNER JOIN colour AS T3 ON T1.hair_colour_id = T3.id \nWHERE T2.race = 'human' AND T1.height_cm = 185\t----- bird -----\tsuperhero",
    "267": "SELECT CAST(SUM(IIF(p.publisher_name = 'Marvel Comics', 1, 0)) AS REAL) * 100 / COUNT(s.id) FROM superhero s JOIN publisher p ON s.publisher_id = p.id WHERE s.height_cm BETWEEN 150 AND 180\t----- bird -----\tsuperhero",
    "268": "SELECT T1.superhero_name \nFROM superhero AS T1 \nJOIN gender AS T2 ON T1.gender_id = T2.id \nWHERE T2.gender = 'Male' AND T1.weight_kg > (SELECT AVG(weight_kg) * 0.79 FROM superhero)\t----- bird -----\tsuperhero",
    "269": "SELECT T3.power_name \nFROM superhero AS T1 \nINNER JOIN hero_power AS T2 ON T1.id = T2.hero_id \nINNER JOIN superpower AS T3 ON T2.power_id = T3.id \nWHERE T1.id = 1\t----- bird -----\tsuperhero",
    "270": "SELECT COUNT(T1.hero_id) \nFROM hero_power AS T1 \nINNER JOIN superpower AS T2 \nON T1.power_id = T2.id \nWHERE T2.power_name = 'Stealth'\t----- bird -----\tsuperhero",
    "271": "SELECT T2.full_name FROM hero_attribute AS T1 INNER JOIN superhero AS T2 ON T1.hero_id = T2.id INNER JOIN attribute AS T3 ON T1.attribute_id = T3.id WHERE T3.attribute_name = 'strength' ORDER BY T1.attribute_value DESC LIMIT 1\t----- bird -----\tsuperhero",
    "272": "SELECT T1.superhero_name \nFROM superhero AS T1 \nJOIN publisher AS T2 ON T1.publisher_id = T2.id \nJOIN hero_attribute AS T3 ON T1.id = T3.hero_id \nJOIN attribute AS T4 ON T3.attribute_id = T4.id \nWHERE T2.publisher_name = 'Dark Horse Comics' AND T4.attribute_name = 'durability' \nORDER BY T3.attribute_value DESC LIMIT 1\t----- bird -----\tsuperhero",
    "273": "SELECT T1.colour AS eye_colour, T2.colour AS hair_colour, T3.colour AS skin_colour \nFROM superhero \nJOIN colour AS T1 ON T1.id = superhero.eye_colour_id \nJOIN colour AS T2 ON T2.id = superhero.hair_colour_id \nJOIN colour AS T3 ON T3.id = superhero.skin_colour_id \nJOIN gender ON gender.id = superhero.gender_id \nJOIN publisher ON publisher.id = superhero.publisher_id \nWHERE gender.gender = 'Female' AND publisher.publisher_name = 'Dark Horse Comics'\t----- bird -----\tsuperhero",
    "274": "SELECT T1.superhero_name, T2.publisher_name \nFROM superhero AS T1 \nINNER JOIN publisher AS T2 \nON T1.publisher_id = T2.id \nWHERE T1.eye_colour_id = T1.hair_colour_id AND T1.eye_colour_id = T1.skin_colour_id\t----- bird -----\tsuperhero",
    "275": "SELECT CAST(SUM(IIF(T3.colour = 'Blue' AND T4.gender = 'Female', 1, 0)) AS REAL) * 100 / COUNT(IIF(T4.gender = 'Female', T1.id, NULL)) FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.skin_colour_id = T2.id INNER JOIN colour AS T3 ON T2.id = T3.id INNER JOIN gender AS T4 ON T1.gender_id = T4.id\t----- bird -----\tsuperhero",
    "276": "SELECT COUNT(T2.power_id) \nFROM superhero AS T1 \nINNER JOIN hero_power AS T2 ON T1.id = T2.hero_id \nWHERE T1.superhero_name = 'Amazo'\t----- bird -----\tsuperhero",
    "277": "SELECT T1.height_cm FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T2.colour = 'Amber'\t----- bird -----\tsuperhero",
    "278": "SELECT T1.superhero_name \nFROM superhero AS T1 \nJOIN colour AS T2 ON T1.eye_colour_id = T2.id \nJOIN colour AS T3 ON T1.hair_colour_id = T3.id \nWHERE T2.colour = 'Black' AND T3.colour = 'Black'\t----- bird -----\tsuperhero",
    "279": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN alignment AS T2 ON T1.alignment_id = T2.id WHERE T2.alignment = 'Neutral'\t----- bird -----\tsuperhero",
    "280": "SELECT COUNT(T1.hero_id) \nFROM hero_attribute AS T1 \nJOIN attribute AS T2 ON T1.attribute_id = T2.id \nWHERE T2.attribute_name = 'Strength' AND T1.attribute_value = (SELECT MAX(attribute_value) FROM hero_attribute AS T3 JOIN attribute AS T4 ON T3.attribute_id = T4.id WHERE T4.attribute_name = 'Strength')\t----- bird -----\tsuperhero",
    "281": "SELECT CAST(SUM(IIF(T3.gender = 'Female' AND T4.publisher_name = 'Marvel Comics', 1, 0)) AS REAL) * 100 / COUNT(CASE WHEN T4.publisher_name = 'Marvel Comics' THEN T3.gender END) FROM superhero AS T1 INNER JOIN gender AS T3 ON T1.gender_id = T3.id INNER JOIN publisher AS T4 ON T1.publisher_id = T4.id\t----- bird -----\tsuperhero",
    "282": "SELECT (SELECT weight_kg FROM superhero WHERE full_name = 'Emil Blonsky') - (SELECT weight_kg FROM superhero WHERE full_name = 'Charles Chandler')\t----- bird -----\tsuperhero",
    "283": "SELECT AVG(height_cm) FROM superhero\t----- bird -----\tsuperhero",
    "284": "SELECT T3.power_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T1.superhero_name = 'Abomination'\t----- bird -----\tsuperhero",
    "285": "SELECT superhero_name FROM superhero WHERE id IN (SELECT hero_id FROM hero_attribute WHERE attribute_id IN (SELECT id FROM attribute WHERE attribute_name = 'Speed') ORDER BY attribute_value DESC LIMIT 1)\t----- bird -----\tsuperhero",
    "286": "SELECT T1.attribute_name, T2.attribute_value \nFROM attribute AS T1 \nINNER JOIN hero_attribute AS T2 ON T1.id = T2.attribute_id \nINNER JOIN superhero AS T3 ON T2.hero_id = T3.id \nWHERE T3.superhero_name = '3-D Man'\t----- bird -----\tsuperhero",
    "287": "SELECT T1.superhero_name \nFROM superhero AS T1 \nJOIN colour AS T2 ON T1.eye_colour_id = T2.id \nJOIN colour AS T3 ON T1.hair_colour_id = T3.id \nWHERE T2.colour = 'Blue' AND T3.colour = 'Brown'\t----- bird -----\tsuperhero",
    "288": "SELECT T1.publisher_name FROM publisher AS T1 INNER JOIN superhero AS T2 ON T1.id = T2.publisher_id WHERE T2.superhero_name IN ('Hawkman', 'Karate Kid', 'Speedy')\t----- bird -----\tsuperhero",
    "289": "SELECT CAST(SUM(IIF(c.colour = 'Blue', 1, 0)) AS REAL) * 100 / COUNT(s.superhero_name) FROM superhero s INNER JOIN colour c ON s.eye_colour_id = c.id\t----- bird -----\tsuperhero",
    "290": "SELECT CAST(SUM(IIF(gender_id = 1, 1, 0)) AS REAL) / SUM(IIF(gender_id = 2, 1, 0)) FROM superhero\t----- bird -----\tsuperhero",
    "291": "SELECT T3.colour FROM superhero AS T1 INNER JOIN colour AS T3 ON T1.eye_colour_id = T3.id WHERE T1.full_name = 'Karen Beecher-Duncan'\t----- bird -----\tsuperhero",
    "292": "SELECT SUM(IIF(T1.eye_colour_id = 7, 1, 0)) - SUM(IIF(T1.eye_colour_id = 1, 1, 0)) \nFROM superhero AS T1 \nWHERE T1.weight_kg IS NULL OR T1.weight_kg = 0\t----- bird -----\tsuperhero",
    "293": "SELECT COUNT(T1.id) \nFROM superhero AS T1 \nJOIN colour AS T2 ON T1.skin_colour_id = T2.id \nJOIN alignment AS T3 ON T1.alignment_id = T3.id \nWHERE T2.colour = 'Green' AND T3.alignment = 'Bad'\t----- bird -----\tsuperhero",
    "294": "SELECT T1.superhero_name \nFROM superhero AS T1 \nINNER JOIN hero_power AS T2 ON T1.id = T2.hero_id \nINNER JOIN superpower AS T3 ON T2.power_id = T3.id \nWHERE T3.power_name = 'Wind Control' \nORDER BY T1.superhero_name\t----- bird -----\tsuperhero",
    "295": "SELECT T2.gender FROM superhero AS T1 \nINNER JOIN gender AS T2 ON T1.gender_id = T2.id \nINNER JOIN hero_power AS T3 ON T1.id = T3.hero_id \nINNER JOIN superpower AS T4 ON T3.power_id = T4.id \nWHERE T4.power_name = 'Phoenix Force'\t----- bird -----\tsuperhero",
    "296": "SELECT \n    SUM(CASE WHEN T2.publisher_name = 'DC Comics' THEN 1 ELSE 0 END) - \n    SUM(CASE WHEN T2.publisher_name = 'Marvel Comics' THEN 1 ELSE 0 END) \nAS difference \nFROM superhero AS T1 \nINNER JOIN publisher AS T2 ON T1.publisher_id = T2.id\t----- bird -----\tsuperhero",
    "297": "SELECT MAX(Reputation) FROM users WHERE DisplayName IN ('Harlan', 'Jarrod Dixon')\t----- bird -----\tcodebase_community",
    "298": "SELECT DisplayName FROM users WHERE STRFTIME('%Y', CreationDate) = '2011'\t----- bird -----\tcodebase_community",
    "299": "SELECT COUNT(Id) FROM users WHERE LastAccessDate > '2014-09-01'\t----- bird -----\tcodebase_community",
    "300": "SELECT T1.DisplayName FROM users AS T1 INNER JOIN posts AS T2 ON T1.Id = T2.OwnerUserId WHERE T2.Title = 'Eliciting priors from experts'\t----- bird -----\tcodebase_community",
    "301": "SELECT COUNT(p.Id) \nFROM posts p \nJOIN users u ON p.OwnerUserId = u.Id \nWHERE u.DisplayName = 'csgillespie'\t----- bird -----\tcodebase_community",
    "302": "SELECT T1.DisplayName FROM users AS T1 INNER JOIN posts AS T2 ON T1.Id = T2.LastEditorUserId WHERE T2.Title = 'Examples for teaching: Correlation does not mean causation'\t----- bird -----\tcodebase_community",
    "303": "SELECT COUNT(T1.Id) \nFROM posts AS T1 \nINNER JOIN users AS T2 \nON T1.OwnerUserId = T2.Id \nWHERE T2.Age > 65 AND T1.Score >= 20\t----- bird -----\tcodebase_community",
    "304": "SELECT T2.Body FROM tags AS T1 INNER JOIN posts AS T2 ON T1.ExcerptPostId = T2.Id WHERE T1.TagName = 'bayesian'\t----- bird -----\tcodebase_community",
    "305": "SELECT AVG(T1.Score) FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.DisplayName = 'csgillespie'\t----- bird -----\tcodebase_community",
    "306": "SELECT CAST(SUM(CASE WHEN T2.Age > 65 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.Id) FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T1.Score > 5\t----- bird -----\tcodebase_community",
    "307": "SELECT T2.FavoriteCount FROM comments AS T1 INNER JOIN posts AS T2 ON T1.PostId = T2.Id WHERE T1.UserId = 3025 AND T1.CreationDate = '2014-04-23 20:29:39.0'\t----- bird -----\tcodebase_community",
    "308": "SELECT CASE WHEN T2.ClosedDate IS NULL THEN 'not well-finished' ELSE 'well-finished' END \nFROM comments AS T1 \nINNER JOIN posts AS T2 \nON T1.PostId = T2.Id \nWHERE T1.UserId = 23853 AND T1.CreationDate = '2013-07-12 09:08:18.0'\t----- bird -----\tcodebase_community",
    "309": "SELECT COUNT(Id) FROM posts WHERE OwnerDisplayName = 'Tiago Pasqualini'\t----- bird -----\tcodebase_community",
    "310": "SELECT T1.DisplayName FROM users AS T1 INNER JOIN votes AS T2 ON T1.Id = T2.UserId WHERE T2.Id = 6347\t----- bird -----\tcodebase_community",
    "311": "SELECT CAST(COUNT(p.Id) AS REAL) / COUNT(v.Id) \nFROM posts p \nJOIN votes v ON p.OwnerUserId = v.UserId \nWHERE p.OwnerUserId = 24\t----- bird -----\tcodebase_community",
    "312": "SELECT ViewCount FROM posts WHERE Title = 'Integration of Weka and/or RapidMiner into Informatica PowerCenter/Developer'\t----- bird -----\tcodebase_community",
    "313": "SELECT Text FROM comments WHERE Score = 17\t----- bird -----\tcodebase_community",
    "314": "SELECT DisplayName FROM users WHERE Id IN (SELECT UserId FROM comments WHERE Text = 'thank you user93!')\t----- bird -----\tcodebase_community",
    "315": "SELECT T1.DisplayName, T1.Reputation FROM users AS T1 INNER JOIN posts AS T2 ON T1.Id = T2.OwnerUserId WHERE T2.Title = 'Understanding what Dassault iSight is doing?'\t----- bird -----\tcodebase_community",
    "316": "SELECT T1.DisplayName FROM users AS T1 INNER JOIN posts AS T2 ON T1.Id = T2.OwnerUserId WHERE T2.Title = 'Open source tools for visualizing multi-dimensional data?'\t----- bird -----\tcodebase_community",
    "317": "SELECT T1.Text FROM comments AS T1 INNER JOIN posts AS T2 ON T1.PostId = T2.Id WHERE T2.Title = 'Why square the difference instead of taking the absolute value in standard deviation?'\t----- bird -----\tcodebase_community",
    "318": "SELECT T1.DisplayName FROM users AS T1 INNER JOIN votes AS T2 ON T1.Id = T2.UserId INNER JOIN posts AS T3 ON T2.PostId = T3.Id WHERE T2.BountyAmount = 50 AND T3.Title LIKE '%variance%'\t----- bird -----\tcodebase_community",
    "319": "SELECT AVG(T1.ViewCount), T1.Title, T2.Text \nFROM posts AS T1 \nINNER JOIN postHistory AS T2 ON T1.Id = T2.PostId \nINNER JOIN tags AS T3 ON T1.Id = T3.ExcerptPostId \nWHERE T3.TagName = '<humor>'\t----- bird -----\tcodebase_community",
    "320": "SELECT COUNT(DISTINCT UserId) FROM badges GROUP BY UserId HAVING COUNT(Name) > 5\t----- bird -----\tcodebase_community",
    "321": "SELECT T1.UserId FROM postHistory AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id GROUP BY T1.UserId HAVING COUNT(T1.PostId) = COUNT(DISTINCT T1.PostId) AND T2.Views >= 1000\t----- bird -----\tcodebase_community",
    "322": "SELECT \n    (CAST(SUM(CASE WHEN STRFTIME('%Y', Date) = '2010' THEN 1 ELSE 0 END) AS REAL) / COUNT(Name)) * 100 - \n    (CAST(SUM(CASE WHEN STRFTIME('%Y', Date) = '2011' THEN 1 ELSE 0 END) AS REAL) / COUNT(Name)) * 100 \nFROM badges \nWHERE Name = 'Student'\t----- bird -----\tcodebase_community",
    "323": "SELECT AVG(T1.UpVotes) AS AverageUpVotes, AVG(T1.Age) AS AverageAge \nFROM users AS T1 \nINNER JOIN posts AS T2 ON T1.Id = T2.OwnerUserId \nGROUP BY T1.Id \nHAVING COUNT(T2.Id) > 10\t----- bird -----\tcodebase_community",
    "324": "SELECT CAST(SUM(CASE WHEN STRFTIME('%Y', CreationDate) = '2010' THEN 1 ELSE 0 END) AS REAL) / SUM(CASE WHEN STRFTIME('%Y', CreationDate) = '2011' THEN 1 ELSE 0 END) FROM votes\t----- bird -----\tcodebase_community",
    "325": "SELECT T1.Id FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.DisplayName = 'slashnick' ORDER BY T1.AnswerCount DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "326": "SELECT MAX(ViewCount) FROM posts WHERE OwnerDisplayName IN ('Harvey Motulsky', 'Noah Snyder')\t----- bird -----\tcodebase_community",
    "327": "SELECT T1.TagName FROM tags AS T1 INNER JOIN posts AS T2 ON T1.ExcerptPostId = T2.Id INNER JOIN users AS T3 ON T2.OwnerUserId = T3.Id WHERE T3.DisplayName = 'Mark Meckes' AND T2.CommentCount = 0\t----- bird -----\tcodebase_community",
    "328": "SELECT CAST(SUM(IIF(T1.TagName = 'r', 1, 0)) AS REAL) * 100 / COUNT(T2.Id) \nFROM tags AS T1 \nINNER JOIN posts AS T2 ON T1.ExcerptPostId = T2.Id \nWHERE T2.OwnerDisplayName = 'Community'\t----- bird -----\tcodebase_community",
    "329": "SELECT SUM(CASE WHEN u.DisplayName = 'Mornington' THEN p.ViewCount ELSE 0 END) - SUM(CASE WHEN u.DisplayName = 'Amos' THEN p.ViewCount ELSE 0 END) \nFROM users u \nJOIN posts p ON u.Id = p.OwnerUserId\t----- bird -----\tcodebase_community",
    "330": "SELECT CAST(COUNT(CASE WHEN STRFTIME('%Y', T1.CreationDate) = '2010' AND T2.AnswerCount <= 2 THEN T1.Id END) AS REAL) / 12 AS average_monthly_links FROM postLinks T1 INNER JOIN posts T2 ON T1.PostId = T2.Id\t----- bird -----\tcodebase_community",
    "331": "SELECT MIN(T1.CreationDate) FROM votes AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T2.DisplayName = 'chl'\t----- bird -----\tcodebase_community",
    "332": "SELECT T1.DisplayName FROM users AS T1 INNER JOIN badges AS T2 ON T1.Id = T2.UserId WHERE T2.Name = 'Autobiographer' ORDER BY T2.Date LIMIT 1\t----- bird -----\tcodebase_community",
    "333": "SELECT COUNT(DISTINCT T1.Id) \nFROM users AS T1 \nINNER JOIN posts AS T2 \nON T1.Id = T2.OwnerUserId \nWHERE T1.Location = 'United Kingdom' AND T2.FavoriteCount >= 4\t----- bird -----\tcodebase_community",
    "334": "SELECT Id, Title FROM posts WHERE OwnerDisplayName = 'Harvey Motulsky' ORDER BY ViewCount DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "335": "SELECT Id, OwnerDisplayName FROM posts WHERE STRFTIME('%Y', CreaionDate) = '2010' ORDER BY FavoriteCount DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "336": "SELECT CAST(SUM(CASE WHEN T1.Reputation > 1000 AND STRFTIME('%Y', T1.CreationDate) = '2011' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.Id) FROM users AS T1\t----- bird -----\tcodebase_community",
    "337": "SELECT T1.ViewCount, T2.DisplayName FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T1.Title = 'Computer Game Datasets'\t----- bird -----\tcodebase_community",
    "338": "SELECT COUNT(T1.Id) \nFROM comments AS T1 \nINNER JOIN posts AS T2 \nON T1.PostId = T2.Id \nWHERE T2.Score = (SELECT MAX(Score) FROM posts)\t----- bird -----\tcodebase_community",
    "339": "SELECT Text, UserDisplayName \nFROM comments \nJOIN posts \nON comments.PostId = posts.Id \nWHERE posts.Title = 'Analysing wind data with R' \nORDER BY comments.CreationDate DESC \nLIMIT 10\t----- bird -----\tcodebase_community",
    "340": "SELECT CAST(SUM(CASE WHEN T1.Score > 50 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.Id) FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id ORDER BY T2.Reputation DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "341": "SELECT ExcerptPostId, WikiPostId FROM tags WHERE TagName = 'sample'\t----- bird -----\tcodebase_community",
    "342": "SELECT T1.Reputation, T1.UpVotes FROM users AS T1 INNER JOIN comments AS T2 ON T1.Id = T2.UserId WHERE T2.Text = 'fine, you win :)'\t----- bird -----\tcodebase_community",
    "343": "SELECT T2.Text FROM posts AS T1 INNER JOIN comments AS T2 ON T1.Id = T2.PostId WHERE T1.ViewCount BETWEEN 100 AND 150 ORDER BY T2.Score DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "344": "SELECT COUNT(T1.Id) \nFROM comments AS T1 \nINNER JOIN posts AS T2 \nON T1.PostId = T2.Id \nWHERE T2.CommentCount = 1 AND T1.Score = 0\t----- bird -----\tcodebase_community",
    "345": "SELECT CAST(SUM(CASE WHEN T2.UpVotes = 0 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.UserId) FROM comments AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T1.Score BETWEEN 5 AND 10\t----- bird -----\tcodebase_community",
    "346": "SELECT * FROM cards WHERE cardKingdomFoilId IS NOT NULL AND cardKingdomId IS NOT NULL\t----- bird -----\tcard_games",
    "347": "SELECT * FROM cards WHERE borderColor = 'borderless' AND cardKingdomFoilId IS NULL AND cardKingdomId IS NOT NULL\t----- bird -----\tcard_games",
    "348": "SELECT T1.name FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.rarity = 'mythic' AND T2.format = 'gladiator' AND T2.status = 'Banned'\t----- bird -----\tcard_games",
    "349": "SELECT T1.status FROM legalities AS T1 INNER JOIN cards AS T2 ON T1.uuid = T2.uuid WHERE T2.types = 'Artifact' AND T2.side IS NULL AND T1.format = 'vintage'\t----- bird -----\tcard_games",
    "350": "SELECT T1.id, T1.artist FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.power = '*' OR T1.power IS NULL AND T2.format = 'commander' AND T2.status = 'Legal'\t----- bird -----\tcard_games",
    "351": "SELECT T1.id, T2.text, T1.hasContentWarning FROM cards AS T1 INNER JOIN rulings AS T2 ON T1.uuid = T2.uuid WHERE T1.artist = 'Stephen Daniele'\t----- bird -----\tcard_games",
    "352": "SELECT T1.name, T1.artist, T1.isPromo \nFROM cards AS T1 \nJOIN rulings AS T2 ON T1.uuid = T2.uuid \nJOIN ( \n    SELECT uuid, COUNT(uuid) AS count \n    FROM rulings \n    GROUP BY uuid \n    ORDER BY count DESC \n    LIMIT 1 \n) AS T3 ON T1.uuid = T3.uuid\t----- bird -----\tcard_games",
    "353": "SELECT CAST(SUM(CASE WHEN language = 'Chinese Simplified' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(id) FROM foreign_data\t----- bird -----\tcard_games",
    "354": "SELECT COUNT(id) FROM cards WHERE power = '*'\t----- bird -----\tcard_games",
    "355": "SELECT borderColor FROM cards WHERE name = 'Ancestor''s Chosen'\t----- bird -----\tcard_games",
    "356": "SELECT T2.format FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.name = 'Benalish Knight'\t----- bird -----\tcard_games",
    "357": "SELECT CAST(SUM(CASE WHEN borderColor = 'borderless' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(id) FROM cards\t----- bird -----\tcard_games",
    "358": "SELECT CAST(SUM(CASE WHEN T1.isStorySpotlight = 1 AND T2.language = 'French' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.id) FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.isStorySpotlight = 1\t----- bird -----\tcard_games",
    "359": "SELECT COUNT(id) FROM cards WHERE originalType = 'Summon - Angel' AND subtypes != 'Angel'\t----- bird -----\tcard_games",
    "360": "SELECT id FROM cards WHERE duelDeck = 'a'\t----- bird -----\tcard_games",
    "361": "SELECT COUNT(T1.uuid) \nFROM cards AS T1 \nINNER JOIN legalities AS T2 \nON T1.uuid = T2.uuid \nWHERE T2.status = 'Banned' AND T1.borderColor = 'white'\t----- bird -----\tcard_games",
    "362": "SELECT T1.name FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.originalType = 'Artifact' AND T1.colors = 'B'\t----- bird -----\tcard_games",
    "363": "SELECT manaCost FROM cards WHERE layout = 'normal' AND frameVersion = '2003' AND borderColor = 'black' AND availability = 'mtgo,paper'\t----- bird -----\tcard_games",
    "364": "SELECT CAST(SUM(CASE WHEN isStorySpotlight = 1 AND isTextless = 0 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(id) AS percentage, id FROM cards WHERE isStorySpotlight = 1 AND isTextless = 0\t----- bird -----\tcard_games",
    "365": "SELECT COUNT(T1.setCode) FROM set_translations AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T1.language = 'Portuguese (Brasil)' AND T2.block = 'Commander'\t----- bird -----\tcard_games",
    "366": "SELECT T1.subtypes, T1.supertypes FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T2.language = 'German' AND T1.subtypes IS NOT NULL AND T1.supertypes IS NOT NULL\t----- bird -----\tcard_games",
    "367": "SELECT COUNT(id) FROM cards WHERE (power IS NULL OR power = '*') AND text LIKE '%triggered ability%'\t----- bird -----\tcard_games",
    "368": "SELECT COUNT(T1.uuid) \nFROM cards AS T1 \nINNER JOIN rulings AS T2 ON T1.uuid = T2.uuid \nINNER JOIN legalities AS T3 ON T1.uuid = T3.uuid \nWHERE T3.format = 'premodern' AND T2.text = 'This is a triggered mana ability.' AND T1.side IS NULL\t----- bird -----\tcard_games",
    "369": "SELECT T2.name FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.artist = 'Matthew D. Wilson' AND T1.layout = 'normal' AND T1.borderColor = 'black' AND T2.language = 'French' AND T1.type = 'Creature'\t----- bird -----\tcard_games",
    "370": "SELECT T3.translation FROM sets AS T1 INNER JOIN set_translations AS T3 ON T1.code = T3.setCode WHERE T1.baseSetSize = 180 AND T1.block = 'Ravnica'\t----- bird -----\tcard_games",
    "371": "SELECT CAST(SUM(IIF(l.status = 'Legal' AND l.format = 'Commander' AND c.hasContentWarning = 0, 1, 0)) AS REAL) * 100 / COUNT(l.id) FROM legalities l INNER JOIN cards c ON l.uuid = c.uuid\t----- bird -----\tcard_games",
    "372": "SELECT CAST(SUM(IIF(T2.language = 'French' AND (T1.power IS NULL OR T1.power = '*'), 1, 0)) AS REAL) * 100 / COUNT(T1.power) FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.power IS NULL OR T1.power = '*'\t----- bird -----\tcard_games",
    "373": "SELECT language FROM foreign_data WHERE multiverseid = 149934\t----- bird -----\tcard_games",
    "374": "SELECT CAST(SUM(IIF(isTextless = 1 AND layout = 'normal', 1, 0)) AS REAL) * 100 / COUNT(isTextless) FROM cards\t----- bird -----\tcard_games",
    "375": "SELECT T2.language FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T1.mcmName = 'Archenemy' AND T2.setCode = 'ARC'\t----- bird -----\tcard_games",
    "376": "SELECT language FROM foreign_data WHERE name = 'A Pedra Fellwar'\t----- bird -----\tcard_games",
    "377": "SELECT name \nFROM cards \nWHERE name IN ('Serra Angel', 'Shrine Keeper') \nORDER BY convertedManaCost DESC \nLIMIT 1\t----- bird -----\tcard_games",
    "378": "SELECT T3.translation FROM cards AS T1 INNER JOIN set_translations AS T3 ON T1.setCode = T3.setCode INNER JOIN sets AS T2 ON T2.code = T1.setCode WHERE T1.name = 'Ancestor''s Chosen' AND T3.language = 'Italian'\t----- bird -----\tcard_games",
    "379": "SELECT COUNT(*) FROM foreign_data WHERE name = 'Ancestor''s Chosen' AND language = 'Korean'\t----- bird -----\tcard_games",
    "380": "SELECT COUNT(T1.id) \nFROM cards AS T1 \nINNER JOIN set_translations AS T2 ON T1.setCode = T2.setCode \nWHERE T2.translation = 'Hauptset Zehnte Edition' AND T1.artist = 'Adam Rex'\t----- bird -----\tcard_games",
    "381": "SELECT T2.translation FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T1.name = 'Eighth Edition' AND T2.language = 'Chinese Simplified'\t----- bird -----\tcard_games",
    "382": "SELECT T2.mtgoCode IS NOT NULL FROM cards AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T1.name = 'Angel of Mercy'\t----- bird -----\tcard_games",
    "383": "SELECT COUNT(T1.id) \nFROM sets AS T1 \nINNER JOIN set_translations AS T2 \nON T1.code = T2.setCode \nWHERE T1.block = 'Ice Age' AND T2.language = 'Italian' AND T2.translation IS NOT NULL\t----- bird -----\tcard_games",
    "384": "SELECT T1.isForeignOnly FROM sets AS T1 INNER JOIN cards AS T2 ON T1.code = T2.setCode WHERE T2.name = 'Adarkar Valkyrie'\t----- bird -----\tcard_games",
    "385": "SELECT COUNT(T1.id) \nFROM sets AS T1 \nINNER JOIN set_translations AS T2 \nON T1.code = T2.setCode \nWHERE T2.language = 'Italian' AND T2.translation IS NOT NULL AND T1.baseSetSize < 100\t----- bird -----\tcard_games",
    "386": "SELECT artist FROM cards WHERE setCode = 'CDS' AND artist IN ('Jeremy Jarvis', 'Aaron Miller', 'Chippy')\t----- bird -----\tcard_games",
    "387": "SELECT COUNT(T1.id) \nFROM cards AS T1 \nINNER JOIN sets AS T2 ON T1.setCode = T2.code \nWHERE T2.name = 'Coldsnap' AND T1.convertedManaCost > 5 AND (T1.power = '*' OR T1.power IS NULL)\t----- bird -----\tcard_games",
    "388": "SELECT T1.flavorText FROM foreign_data AS T1 INNER JOIN cards AS T2 ON T1.uuid = T2.uuid WHERE T1.language = 'Italian' AND T2.name = 'Ancestor''s Chosen'\t----- bird -----\tcard_games",
    "389": "SELECT T3.text FROM sets AS T1 INNER JOIN cards AS T2 ON T1.code = T2.setCode INNER JOIN rulings AS T3 ON T2.uuid = T3.uuid INNER JOIN foreign_data AS T4 ON T2.uuid = T4.uuid WHERE T1.name = 'Coldsnap' AND T4.language = 'Italian'\t----- bird -----\tcard_games",
    "390": "SELECT T1.name FROM foreign_data AS T1 INNER JOIN cards AS T2 ON T1.uuid = T2.uuid INNER JOIN sets AS T3 ON T3.code = T2.setCode WHERE T1.language = 'Italian' AND T3.name = 'Coldsnap' ORDER BY T2.convertedManaCost DESC LIMIT 1\t----- bird -----\tcard_games",
    "391": "SELECT CAST(SUM(IIF(T1.convertedManaCost = 7, 1, 0)) AS REAL) * 100 / COUNT(T1.id) FROM cards AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T2.name = 'Coldsnap'\t----- bird -----\tcard_games",
    "392": "SELECT CAST(SUM(IIF(cardKingdomFoilId IS NOT NULL AND cardKingdomId IS NOT NULL, 1, 0)) AS REAL) * 100 / COUNT(id) FROM cards WHERE setCode = 'CDS'\t----- bird -----\tcard_games",
    "393": "SELECT T1.format, T2.name FROM legalities AS T1 INNER JOIN cards AS T2 ON T1.uuid = T2.uuid WHERE T1.status = 'Banned' GROUP BY T1.format, T2.name HAVING COUNT(T1.status) = ( SELECT MAX(COUNT(status)) FROM legalities WHERE status = 'Banned' GROUP BY format )\t----- bird -----\tcard_games",
    "394": "SELECT T1.name, T2.format FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.edhrecRank = 1 AND T2.status = 'Banned'\t----- bird -----\tcard_games",
    "395": "SELECT T1.name, T3.format FROM cards AS T1 \nINNER JOIN sets AS T2 ON T1.setCode = T2.code \nINNER JOIN legalities AS T3 ON T1.uuid = T3.uuid \nWHERE T2.name = 'Hour of Devastation' AND T3.status = 'Legal'\t----- bird -----\tcard_games",
    "396": "SELECT T1.name FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T2.language = 'Korean' AND T1.code NOT IN (SELECT setCode FROM set_translations WHERE language LIKE '%Japanese%')\t----- bird -----\tcard_games",
    "397": "SELECT DISTINCT T1.frameVersion, T1.name, T2.status \nFROM cards AS T1 \nLEFT JOIN legalities AS T2 ON T1.uuid = T2.uuid \nWHERE T1.artist = 'Allen Williams' OR T2.status = 'Banned'\t----- bird -----\tcard_games",
    "398": "SELECT bond_type FROM bond GROUP BY bond_type ORDER BY COUNT(bond_type) DESC LIMIT 1\t----- bird -----\ttoxicology",
    "399": "SELECT AVG(o_count) FROM (\n  SELECT COUNT(T1.atom_id) AS o_count \n  FROM atom AS T1 \n  INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id \n  INNER JOIN bond AS T3 ON T2.bond_id = T3.bond_id \n  WHERE T1.element = 'o' AND T3.bond_type = '-' \n  GROUP BY T3.molecule_id\n)\t----- bird -----\ttoxicology",
    "400": "SELECT AVG(CASE WHEN T2.bond_type = '-' THEN 1 ELSE 0 END) FROM molecule AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.label = '+'\t----- bird -----\ttoxicology",
    "401": "SELECT T1.label FROM molecule AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.bond_type = '#' AND T1.label = '+'\t----- bird -----\ttoxicology",
    "402": "SELECT CAST(SUM(IIF(T1.element = 'c', 1, 0)) AS REAL) * 100 / COUNT(T1.atom_id) FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id INNER JOIN bond AS T3 ON T2.bond_id = T3.bond_id WHERE T3.bond_type = '='\t----- bird -----\ttoxicology",
    "403": "SELECT T1.element FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id WHERE T2.bond_id = 'TR004_8_9'\t----- bird -----\ttoxicology",
    "404": "SELECT T1.element FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id INNER JOIN bond AS T3 ON T2.bond_id = T3.bond_id WHERE T3.bond_type = '='\t----- bird -----\ttoxicology",
    "405": "SELECT T2.label FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.element = 'h' GROUP BY T2.label ORDER BY COUNT(T2.label) DESC LIMIT 1\t----- bird -----\ttoxicology",
    "406": "SELECT element FROM atom WHERE molecule_id IN (SELECT molecule_id FROM molecule WHERE label = '-') GROUP BY element ORDER BY COUNT(element) ASC LIMIT 1\t----- bird -----\ttoxicology",
    "407": "SELECT T3.bond_type FROM connected AS T1 INNER JOIN atom AS T2 ON T1.atom_id = T2.atom_id INNER JOIN bond AS T3 ON T1.bond_id = T3.bond_id WHERE (T1.atom_id = 'TR004_8' AND T1.atom_id2 = 'TR004_20') OR (T1.atom_id = 'TR004_20' AND T1.atom_id2 = 'TR004_8')\t----- bird -----\ttoxicology",
    "408": "SELECT COUNT(DISTINCT T1.atom_id) \nFROM atom AS T1 \nINNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id \nINNER JOIN bond AS T3 ON T2.bond_id = T3.bond_id \nWHERE T1.element IN ('i', 's') AND T3.bond_type = '-'\t----- bird -----\ttoxicology",
    "409": "SELECT 100 - (SUM(IIF(T2.element = 'f', 1, 0)) * 100 / COUNT(DISTINCT T1.molecule_id)) \nFROM molecule AS T1 \nLEFT JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id \nWHERE T1.label = '+'\t----- bird -----\ttoxicology",
    "410": "SELECT CAST(SUM(IIF(b.bond_type = '#' AND m.label = '+', 1, 0)) AS REAL) * 100 / COUNT(b.bond_id) AS percent \nFROM bond b \nJOIN molecule m ON b.molecule_id = m.molecule_id\t----- bird -----\ttoxicology",
    "411": "SELECT DISTINCT T1.element \nFROM atom AS T1 \nJOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id \nWHERE T2.molecule_id = 'TR000' \nORDER BY T1.element ASC \nLIMIT 3\t----- bird -----\ttoxicology",
    "412": "SELECT CAST(SUM(IIF(bond_type = '=', 1, 0)) AS REAL) * 100 / COUNT(bond_id) FROM bond WHERE molecule_id = 'TR008'\t----- bird -----\ttoxicology",
    "413": "SELECT CAST(SUM(IIF(label = '+', 1, 0)) AS REAL) * 100 / COUNT(molecule_id) AS percent FROM molecule\t----- bird -----\ttoxicology",
    "414": "SELECT CAST(SUM(IIF(element = 'h', 1, 0)) AS REAL) * 100 / COUNT(atom_id) FROM atom WHERE molecule_id = 'TR206'\t----- bird -----\ttoxicology",
    "415": "SELECT T1.element, T3.label FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id INNER JOIN molecule AS T3 ON T3.molecule_id = T1.molecule_id WHERE T3.molecule_id = 'TR060'\t----- bird -----\ttoxicology",
    "416": "SELECT T1.bond_type, T2.is_carcinogenic FROM \n    (SELECT bond_type, COUNT(bond_type) as count \n     FROM bond \n     WHERE molecule_id = 'TR010' \n     GROUP BY bond_type) T1 \nJOIN \n    (SELECT label, CASE WHEN label LIKE '%carcinogenic%' THEN 'Yes' ELSE 'No' END as is_carcinogenic \n     FROM molecule \n     WHERE molecule_id = 'TR010') T2 \nON T1.count = (SELECT MAX(count) FROM \n    (SELECT bond_type, COUNT(bond_type) as count \n     FROM bond \n     WHERE molecule_id = 'TR010' \n     GROUP BY bond_type))\t----- bird -----\ttoxicology",
    "417": "SELECT T1.molecule_id FROM molecule AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.bond_type = '-' AND T1.label = '-' ORDER BY T1.molecule_id LIMIT 3\t----- bird -----\ttoxicology",
    "418": "SELECT COUNT(T1.bond_id) \nFROM connected AS T1 \nINNER JOIN atom AS T2 ON T1.atom_id = T2.atom_id \nWHERE T2.molecule_id = 'TR009' AND (T1.atom_id = 'TR009_12' OR T1.atom_id2 = 'TR009_12')\t----- bird -----\ttoxicology",
    "419": "SELECT T3.bond_type, T1.atom_id, T1.atom_id2 \nFROM connected AS T1 \nJOIN bond AS T2 ON T1.bond_id = T2.bond_id \nJOIN bond AS T3 ON T2.bond_id = T3.bond_id \nWHERE T1.bond_id = 'TR001_6_9'\t----- bird -----\ttoxicology",
    "420": "SELECT COUNT(bond_id) FROM connected WHERE atom_id LIKE 'TR%_19'\t----- bird -----\ttoxicology",
    "421": "SELECT T1.element FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.molecule_id = 'TR004'\t----- bird -----\ttoxicology",
    "422": "SELECT DISTINCT T3.label FROM atom AS T1 INNER JOIN molecule AS T3 ON T1.molecule_id = T3.molecule_id WHERE SUBSTR(T1.atom_id, 7, 2) BETWEEN '21' AND '25' AND T3.label = '+'\t----- bird -----\ttoxicology",
    "423": "SELECT T3.bond_id FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id INNER JOIN bond AS T3 ON T3.bond_id = T2.bond_id WHERE T1.element = 'p' INTERSECT SELECT T3.bond_id FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id INNER JOIN bond AS T3 ON T3.bond_id = T2.bond_id WHERE T1.element = 'n'\t----- bird -----\ttoxicology",
    "424": "SELECT T2.label FROM \n    (SELECT T3.molecule_id, COUNT(T1.bond_id) as num \n     FROM connected AS T1 \n     INNER JOIN bond AS T2 \n     ON T1.bond_id = T2.bond_id \n     INNER JOIN atom AS T3 \n     ON T1.atom_id = T3.atom_id \n     WHERE T2.bond_type = ' = ' \n     GROUP BY T3.molecule_id) AS T1 \nINNER JOIN molecule AS T2 \nON T1.molecule_id = T2.molecule_id \nORDER BY T1.num DESC LIMIT 1\t----- bird -----\ttoxicology",
    "425": "SELECT AVG(bond_count) FROM (\n  SELECT COUNT(T2.bond_id) / COUNT(T1.atom_id) AS bond_count\n  FROM atom AS T1\n  LEFT JOIN connected AS T2 ON T1.atom_id = T2.atom_id\n  WHERE T1.element = 'i'\n  GROUP BY T1.atom_id\n)\t----- bird -----\ttoxicology",
    "426": "SELECT element FROM atom WHERE atom_id NOT IN (SELECT atom_id FROM connected)\t----- bird -----\ttoxicology",
    "427": "SELECT T1.atom_id FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id INNER JOIN bond AS T3 ON T2.bond_id = T3.bond_id INNER JOIN molecule AS T4 ON T3.molecule_id = T4.molecule_id WHERE T3.bond_type = '#' AND T4.molecule_id = 'TR041'\t----- bird -----\ttoxicology",
    "428": "SELECT T1.element FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id INNER JOIN bond AS T3 ON T2.bond_id = T3.bond_id WHERE T3.bond_id = 'TR144_8_19'\t----- bird -----\ttoxicology",
    "429": "SELECT T1.element FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id INNER JOIN bond AS T3 ON T2.bond_id = T3.bond_id WHERE T3.bond_type = '#'\t----- bird -----\ttoxicology",
    "430": "SELECT CAST(SUM(IIF(b.bond_type = '-' AND m.label = '+', 1, 0)) AS REAL) * 100 / COUNT(b.bond_id) FROM bond b INNER JOIN molecule m ON b.molecule_id = m.molecule_id WHERE b.bond_type = '-'\t----- bird -----\ttoxicology",
    "431": "SELECT COUNT(T1.atom_id) \nFROM atom AS T1 \nINNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id \nINNER JOIN bond AS T3 ON T2.bond_id = T3.bond_id \nWHERE T3.bond_type = '#' AND T1.element IN ('p', 'br')\t----- bird -----\ttoxicology",
    "432": "SELECT CAST(SUM(IIF(T1.element = 'cl', 1, 0)) AS REAL) * 100 / COUNT(T1.atom_id) FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id INNER JOIN bond AS T3 ON T2.bond_id = T3.bond_id WHERE T3.bond_type = '-'\t----- bird -----\ttoxicology",
    "433": "SELECT T1.element FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id INNER JOIN bond AS T3 ON T2.bond_id = T3.bond_id WHERE T3.bond_id = 'TR001_10_11'\t----- bird -----\ttoxicology",
    "434": "SELECT CAST(SUM(IIF(element = 'cl', 1, 0)) AS REAL) * 100 / COUNT(molecule_id) FROM atom WHERE molecule_id IN (SELECT molecule_id FROM molecule WHERE label = '+')\t----- bird -----\ttoxicology",
    "435": "SELECT COUNT(T1.atom_id) FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = '+' AND SUBSTR(T1.atom_id, 7, 1) = '4' AND T1.element = 'toxicology'\t----- bird -----\ttoxicology",
    "436": "SELECT CAST(SUM(IIF(element = 'h', 1, 0)) AS REAL) / COUNT(element) AS ratio, T2.label FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.molecule_id = 'TR006'\t----- bird -----\ttoxicology",
    "437": "SELECT T1.molecule_id FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.label = '-' GROUP BY T1.molecule_id HAVING COUNT(T2.atom_id) > 5\t----- bird -----\ttoxicology",
    "438": "SELECT COUNT(T1.CDSCode) \nFROM schools AS T1 \nINNER JOIN satscores AS T2 \nON T1.CDSCode = T2.cds \nWHERE T2.AvgScrMath > 400 AND T1.Virtual = 'F'\t----- bird -----\tcalifornia_schools",
    "439": "SELECT CDSCode FROM frpm WHERE `Enrollment (K-12)` + `Enrollment (Ages 5-17)` > 500\t----- bird -----\tcalifornia_schools",
    "440": "SELECT MAX(T1.`Free Meal Count (Ages 5-17)` / T1.`Enrollment (Ages 5-17)`) \nFROM frpm AS T1 \nINNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds \nWHERE T2.NumGE1500 / T2.NumTstTakr > 0.3\t----- bird -----\tcalifornia_schools",
    "441": "SELECT T1.CharterNum, T2.sname, T2.AvgScrWrite \nFROM schools AS T1 \nINNER JOIN satscores AS T2 \nON T1.CDSCode = T2.cds \nWHERE T2.AvgScrWrite > 499 AND T1.CharterNum IS NOT NULL \nORDER BY T2.AvgScrWrite DESC\t----- bird -----\tcalifornia_schools",
    "442": "SELECT T1.School, T1.Street FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.`Enrollment (K-12)` - T2.`Enrollment (Ages 5-17)` > 30\t----- bird -----\tcalifornia_schools",
    "443": "SELECT T1.`School Name` FROM frpm AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE T1.`Percent (%) Eligible Free (K-12)` > 0.1 AND T2.NumGE1500 > 0\t----- bird -----\tcalifornia_schools",
    "444": "SELECT T2.FundingType FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE T2.County = 'Riverside' AND T1.AvgScrMath > 400\t----- bird -----\tcalifornia_schools",
    "445": "SELECT T2.Street, T2.City, T2.State, T2.Zip, T2.School, T1.`Free Meal Count (Ages 5-17)`\nFROM frpm AS T1\nINNER JOIN schools AS T2\nON T1.CDSCode = T2.CDSCode\nWHERE T2.County = 'Monterey' AND T1.`School Type` = 'High School' AND T1.`Free Meal Count (Ages 5-17)` > 800\t----- bird -----\tcalifornia_schools",
    "446": "SELECT T1.School, T2.AvgScrWrite, T1.Phone FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE (T1.OpenDate > '1991-12-31' OR T1.ClosedDate < '2000-01-01')\t----- bird -----\tcalifornia_schools",
    "447": "SELECT T1.School, T1.DOCType \nFROM schools AS T1 \nJOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode \nWHERE T2.`Charter Funding Type` = 'Locally Funded' \nAND T2.`Enrollment (K-12)` - T2.`Enrollment (Ages 5-17)` > ( \n    SELECT AVG(`Enrollment (K-12)` - `Enrollment (Ages 5-17)`) \n    FROM frpm \n    WHERE `Charter Funding Type` = 'Locally Funded' \n)\t----- bird -----\tcalifornia_schools",
    "448": "SELECT `Percent (%) Eligible Free (K-12)` FROM frpm ORDER BY `Enrollment (K-12)` DESC LIMIT 1 OFFSET 9\t----- bird -----\tcalifornia_schools",
    "449": "SELECT `School Name`, `Percent (%) Eligible FRPM (K-12)` FROM frpm WHERE `District Code` = 66 ORDER BY `FRPM Count (K-12)` DESC LIMIT 5\t----- bird -----\tcalifornia_schools",
    "450": "SELECT T1.Street, T1.City, T1.Zip, T1.State \nFROM schools AS T1 \nINNER JOIN satscores AS T2 \nON T1.CDSCode = T2.cds \nORDER BY CAST(T2.NumGE1500 AS REAL) / T2.NumTstTakr \nLIMIT 1\t----- bird -----\tcalifornia_schools",
    "451": "SELECT T1.AdmFName1, T1.AdmLName1, T1.AdmFName2, T1.AdmLName2, T1.AdmFName3, T1.AdmLName3 \nFROM schools AS T1 \nINNER JOIN satscores AS T2 \nON T1.CDSCode = T2.cds \nORDER BY T2.NumGE1500 DESC \nLIMIT 1\t----- bird -----\tcalifornia_schools",
    "452": "SELECT AVG(T2.NumTstTakr) \nFROM schools AS T1 \nINNER JOIN satscores AS T2 \nON T1.CDSCode = T2.cds \nWHERE T1.County = 'Fresno' AND STRFTIME('%Y', T1.OpenDate) = '1980'\t----- bird -----\tcalifornia_schools",
    "453": "SELECT T1.Phone FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE T1.District = 'Fresno Unified' ORDER BY T2.AvgScrRead ASC LIMIT 1\t----- bird -----\tcalifornia_schools",
    "454": "SELECT T2.School FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE T2.Virtual = 'F' ORDER BY T1.AvgScrRead DESC LIMIT 5\t----- bird -----\tcalifornia_schools",
    "455": "SELECT T2.School, AVG(T1.AvgScrWrite) FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE T2.AdmFName1 = 'Ricci' AND T2.AdmLName1 = 'Ulrich' GROUP BY T2.School\t----- bird -----\tcalifornia_schools",
    "456": "SELECT School, MAX(`Enrollment (K-12)`) FROM schools WHERE DOC = 31\t----- bird -----\tcalifornia_schools",
    "457": "SELECT CAST(COUNT(CASE WHEN STRFTIME('%Y', OpenDate) = '1980' THEN CDSCode END) AS REAL) / 12 FROM schools WHERE County = 'Alameda County' AND DOC = '52'\t----- bird -----\tcalifornia_schools",
    "458": "SELECT \n    CAST(SUM(CASE WHEN DOC = '54' THEN 1 ELSE 0 END) AS REAL) / \n    SUM(CASE WHEN DOC = '52' THEN 1 ELSE 0 END) \nFROM schools \nWHERE County = 'Orange'\t----- bird -----\tcalifornia_schools",
    "459": "SELECT T1.MailStreet, T1.School FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds ORDER BY T2.AvgScrMath DESC LIMIT 1 OFFSET 6\t----- bird -----\tcalifornia_schools",
    "460": "SELECT COUNT(T1.CDSCode) \nFROM frpm AS T1 \nINNER JOIN schools AS T2 \nON T1.CDSCode = T2.CDSCode \nWHERE T2.County = 'Los Angeles' AND T2.Charter = 0 AND T1.`Percent (%) Eligible Free (K-12)` < 0.18\t----- bird -----\tcalifornia_schools",
    "461": "SELECT T2.`Enrollment (Ages 5-17)` FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.EdOpsCode = 'SSS' AND T1.County = 'Fremont' AND T2.`Academic Year` = '2014-2015'\t----- bird -----\tcalifornia_schools",
    "462": "SELECT T1.`School Name`, T1.`Percent (%) Eligible FRPM (Ages 5-17)` FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.County = 'Los Angeles' AND T1.`Low Grade` = 'K' AND T1.`High Grade` = '09'\t----- bird -----\tcalifornia_schools",
    "463": "SELECT County, COUNT(CDSCode) FROM schools WHERE Virtual = 'F' AND (County = 'San Diego' OR County = 'Santa Barbara') GROUP BY County ORDER BY COUNT(CDSCode) DESC LIMIT 1\t----- bird -----\tcalifornia_schools",
    "464": "SELECT GSoffered FROM schools ORDER BY ABS(Longitude) DESC LIMIT 1\t----- bird -----\tcalifornia_schools",
    "465": "SELECT COUNT(T1.CDSCode), T2.City FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.`NSLP Provision Status` = 'Multiple Provision Types' AND T2.GSoffered = 'K-8' AND T2.Magnet = 1 GROUP BY T2.City\t----- bird -----\tcalifornia_schools",
    "466": "SELECT T1.`Percent (%) Eligible Free (K-12)`, T1.`District Code` FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.AdmFName1 = 'Alusine'\t----- bird -----\tcalifornia_schools",
    "467": "SELECT AdmEmail1, AdmEmail2, AdmEmail3 FROM schools WHERE County = 'San Bernardino' AND City = 'San Bernardino City Unified' AND OpenDate BETWEEN '2009-01-01' AND '2010-12-31' AND (SOC = '62' OR DOC = '54')\t----- bird -----\tcalifornia_schools",
    "468": "SELECT COUNT(T1.account_id) \nFROM account AS T1 \nINNER JOIN district AS T2 ON T1.district_id = T2.district_id \nWHERE T2.A3 = 'East Bohemia' AND T1.frequency = 'POPLATEK PO OBRATU'\t----- bird -----\tfinancial",
    "469": "SELECT COUNT(T1.district_id) \nFROM district AS T1 \nINNER JOIN client AS T2 ON T1.district_id = T2.district_id \nWHERE T2.gender = 'F' AND T1.A11 > 6000 AND T1.A11 < 10000\t----- bird -----\tfinancial",
    "470": "SELECT COUNT(T1.client_id) \nFROM client AS T1 \nINNER JOIN district AS T2 \nON T1.district_id = T2.district_id \nWHERE T1.gender = 'M' AND T2.A3 = 'North Bohemia' AND T2.A11 > 8000\t----- bird -----\tfinancial",
    "471": "SELECT T1.account_id, MAX(T2.A11) - MIN(T2.A11) AS gap \nFROM account AS T1 \nJOIN district AS T2 ON T1.district_id = T2.district_id \nJOIN disp AS T3 ON T1.account_id = T3.account_id \nJOIN client AS T4 ON T3.client_id = T4.client_id \nWHERE T4.gender = 'F' \nGROUP BY T1.account_id \nORDER BY T4.birth_date, T2.A11 \nLIMIT 1\t----- bird -----\tfinancial",
    "472": "SELECT T1.account_id FROM account AS T1 INNER JOIN client AS T2 ON T1.district_id = T2.district_id INNER JOIN district AS T3 ON T2.district_id = T3.district_id ORDER BY T2.birth_date DESC, T3.A11 DESC LIMIT 1\t----- bird -----\tfinancial",
    "473": "SELECT T1.account_id FROM loan AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id WHERE T1.status = 'A' AND T1.date LIKE '1997%' AND T2.frequency = 'POPLATEK TYDNE' ORDER BY T1.amount ASC LIMIT 1\t----- bird -----\tfinancial",
    "474": "SELECT T1.account_id, T1.amount \nFROM loan AS T1 \nINNER JOIN account AS T2 \nON T1.account_id = T2.account_id \nWHERE T1.duration > 12 AND T2.date LIKE '1993%' \nORDER BY T1.amount DESC LIMIT 1\t----- bird -----\tfinancial",
    "475": "SELECT COUNT(T1.account_id) \nFROM account AS T1 \nINNER JOIN client AS T2 ON T1.account_id = T2.client_id \nINNER JOIN district AS T3 ON T2.district_id = T3.district_id \nWHERE T2.gender = 'F' AND T2.birth_date < '1950-01-01' AND T3.A2 = 'Sokolov'\t----- bird -----\tfinancial",
    "476": "SELECT T1.A2 FROM district AS T1 INNER JOIN client AS T2 ON T1.district_id = T2.district_id INNER JOIN account AS T3 ON T2.client_id = T3.account_id WHERE T2.birth_date = '1976-01-29' AND T2.gender = 'F'\t----- bird -----\tfinancial",
    "477": "SELECT CAST(SUM(IIF(c.gender = 'M', 1, 0)) AS REAL) * 100 / COUNT(c.client_id) FROM client c INNER JOIN district d ON c.district_id = d.district_id WHERE d.A3 = 'South Bohemia' ORDER BY d.A4 DESC LIMIT 1\t----- bird -----\tfinancial",
    "478": "SELECT CAST((t2.balance - t1.balance) AS REAL) * 100 / t1.balance FROM \n(SELECT balance FROM trans WHERE date = '1993-03-22' AND account_id = \n    (SELECT account_id FROM loan WHERE date = '1993-07-05' AND status = 'A' ORDER BY date LIMIT 1)) t1,\n(SELECT balance FROM trans WHERE date = '1998-12-27' AND account_id = \n    (SELECT account_id FROM loan WHERE date = '1993-07-05' AND status = 'A' ORDER BY date LIMIT 1)) t2\t----- bird -----\tfinancial",
    "479": "SELECT CAST(SUM(CASE WHEN T1.status = 'A' THEN T1.amount ELSE 0 END) AS REAL) * 100 / SUM(T1.amount) FROM loan AS T1\t----- bird -----\tfinancial",
    "480": "SELECT CAST(SUM(CASE WHEN status = 'C' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(loan_id) FROM loan WHERE amount < 100000\t----- bird -----\tfinancial",
    "481": "SELECT T3.A2, ((T3.A13 - T3.A12) / T3.A12) * 100 FROM loan AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id INNER JOIN district AS T3 ON T2.district_id = T3.district_id WHERE T1.status = 'D'\t----- bird -----\tfinancial",
    "482": "SELECT T1.A2, COUNT(T2.client_id) FROM district AS T1 INNER JOIN client AS T2 ON T1.district_id = T2.district_id WHERE T2.gender = 'F' GROUP BY T1.A2 ORDER BY COUNT(T2.client_id) DESC LIMIT 9\t----- bird -----\tfinancial",
    "483": "SELECT COUNT(DISTINCT T1.account_id) \nFROM loan AS T1 \nINNER JOIN account AS T2 \nON T1.account_id = T2.account_id \nWHERE T1.status = 'Schv\u00e1leno' \nAND T1.amount >= 250000 \nAND T2.frequency = 'POPLATEK MESICNE' \nAND T1.date BETWEEN '1995-01-01' AND '1997-12-31'\t----- bird -----\tfinancial",
    "484": "SELECT COUNT(T1.account_id) \nFROM account AS T1 \nINNER JOIN district AS T2 ON T1.district_id = T2.district_id \nWHERE T2.A2 = 'Branch location 1'\t----- bird -----\tfinancial",
    "485": "SELECT COUNT(T1.client_id) \nFROM client AS T1 \nINNER JOIN district AS T2 \nON T1.district_id = T2.district_id \nWHERE T1.gender = 'M' \nAND T2.A15 = (SELECT MAX(A15) \n               FROM district \n               WHERE A15 < (SELECT MAX(A15) \n                             FROM district))\t----- bird -----\tfinancial",
    "486": "SELECT T3.A2, T1.amount FROM trans AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id INNER JOIN district AS T3 ON T2.district_id = T3.district_id WHERE T1.type = 'VYDAJ' AND T1.date LIKE '1996-01%' ORDER BY T1.amount DESC LIMIT 10\t----- bird -----\tfinancial",
    "487": "SELECT COUNT(T1.account_id) \nFROM account AS T1 \nINNER JOIN district AS T2 ON T1.district_id = T2.district_id \nWHERE T2.A2 = 'Branch location 1'\t----- bird -----\tfinancial",
    "488": "SELECT COUNT(T1.client_id) \nFROM client AS T1 \nINNER JOIN district AS T2 \nON T1.district_id = T2.district_id \nWHERE T1.gender = 'M' \nAND T2.A15 = (SELECT MAX(A15) \n               FROM district \n               WHERE A15 < (SELECT MAX(A15) \n                             FROM district))\t----- bird -----\tfinancial",
    "489": "SELECT DISTINCT T1.account_id FROM account AS T1 INNER JOIN trans AS T2 ON T1.account_id = T2.account_id WHERE T2.operation = 'VYBER KARTOU' AND T2.amount < (SELECT AVG(amount) FROM trans WHERE operation = 'VYBER KARTOU' AND date LIKE '1998%')\t----- bird -----\tfinancial",
    "490": "SELECT T1.type FROM disp AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id INNER JOIN district AS T3 ON T2.district_id = T3.district_id WHERE T1.type != 'OWNER' AND T3.A11 BETWEEN 8000 AND 9000\t----- bird -----\tfinancial",
    "491": "SELECT AVG(T1.A15) FROM district AS T1 INNER JOIN account AS T2 ON T1.district_id = T2.district_id WHERE T1.A15 > 4000 AND T2.date LIKE '1997%'\t----- bird -----\tfinancial",
    "492": "SELECT T1.date, T1.type, T1.amount, T1.balance \nFROM trans AS T1 \nINNER JOIN disp AS T2 ON T1.account_id = T2.account_id \nINNER JOIN client AS T3 ON T2.client_id = T3.client_id \nWHERE T3.client_id = 3356 AND T1.operation = 'VYBER'\t----- bird -----\tfinancial",
    "493": "SELECT CAST(SUM(IIF(c.gender = 'F', 1, 0)) AS REAL) * 100 / COUNT(c.client_id) FROM client c INNER JOIN district d ON c.district_id = d.district_id INNER JOIN account a ON c.district_id = a.district_id WHERE d.A11 > 10000\t----- bird -----\tfinancial",
    "494": "SELECT \n    CAST(SUM(CASE WHEN T3.date LIKE '1997%' THEN T3.amount ELSE 0 END) AS REAL) * 100 / \n    SUM(CASE WHEN T3.date LIKE '1996%' THEN T3.amount ELSE 0 END) - 100 \nFROM \n    loan T3 \nJOIN \n    account T2 ON T3.account_id = T2.account_id \nJOIN \n    disp T1 ON T2.account_id = T1.account_id \nJOIN \n    client T4 ON T1.client_id = T4.client_id \nWHERE \n    T4.gender = 'M'\t----- bird -----\tfinancial",
    "495": "SELECT COUNT(T1.account_id), T2.k_symbol FROM account AS T1 INNER JOIN trans AS T2 ON T1.account_id = T2.account_id WHERE T1.account_id = 3 AND T2.type = 'debit' AND T2.amount = 3539\t----- bird -----\tfinancial",
    "496": "SELECT CAST(SUM(IIF(t1.gender = 'M' AND t2.frequency = 'POPLATEK TYDNE', 1, 0)) AS REAL) * 100 / COUNT(t1.client_id) FROM client AS t1 INNER JOIN account AS t2 ON t1.district_id = t2.district_id\t----- bird -----\tfinancial",
    "497": "SELECT T1.account_id FROM account AS T1 \nINNER JOIN client AS T2 ON T1.district_id = T2.district_id \nINNER JOIN district AS T3 ON T2.district_id = T3.district_id \nWHERE T2.gender = 'F' \nORDER BY T2.birth_date, T3.A11 \nLIMIT 1\t----- bird -----\tfinancial",
    "498": "SELECT AVG(T1.amount) FROM loan AS T1 INNER JOIN trans AS T2 ON T1.account_id = T2.account_id WHERE T1.status IN ('C', 'D') AND T2.operation = 'POPLATEK PO OBRATU'\t----- bird -----\tfinancial",
    "499": "SELECT T1.client_id, (strftime('%J', '2023-01-01') - strftime('%J', T1.birth_date)) / 365.25 AS age \nFROM client AS T1 \nJOIN disp AS T2 ON T1.client_id = T2.client_id \nJOIN card AS T3 ON T2.disp_id = T3.card_id \nWHERE T3.type = 'gold' AND T2.type = 'OWNER'\t----- bird -----\tfinancial"
}