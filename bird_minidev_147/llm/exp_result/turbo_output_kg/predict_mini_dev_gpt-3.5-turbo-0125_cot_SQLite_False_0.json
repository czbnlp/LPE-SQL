{
    "0": "SELECT COUNT(CASE WHEN Currency = 'EUR' THEN 1 END) * 1.0 / COUNT(CASE WHEN Currency = 'CZK' THEN 1 END) AS Ratio \nFROM customers;\t----- bird -----\tdebit_card_specializing",
    "1": "SELECT CustomerID, SUM(Consumption) AS TotalConsumption\nFROM yearmonth\nWHERE Date BETWEEN '201201' AND '201212'\nGROUP BY CustomerID\nORDER BY TotalConsumption ASC\nLIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "2": "SELECT AVG(Consumption) / 12 AS AverageMonthlyConsumption\nFROM yearmonth\nWHERE CustomerID IN (SELECT CustomerID FROM customers WHERE Segment = 'SME')\nAND Date BETWEEN '201301' AND '201312';\t----- bird -----\tdebit_card_specializing",
    "3": "SELECT \n    SUM(CASE WHEN c.Currency = 'CZK' THEN ym.Consumption ELSE 0 END) - \n    SUM(CASE WHEN c.Currency = 'EUR' THEN ym.Consumption ELSE 0 END) AS ConsumptionDifference\nFROM \n    yearmonth ym\nJOIN \n    customers c ON ym.CustomerID = c.CustomerID\nWHERE \n    ym.Date BETWEEN '201201' AND '201212';\t----- bird -----\tdebit_card_specializing",
    "4": "SELECT SUBSTR(Date, 1, 4) AS Year, SUM(Consumption) AS TotalConsumption\nFROM yearmonth \nJOIN customers ON yearmonth.CustomerID = customers.CustomerID \nWHERE customers.Currency = 'CZK' \nGROUP BY Year \nORDER BY TotalConsumption DESC \nLIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "5": "SELECT Date, SUM(Consumption) AS TotalConsumption\nFROM yearmonth\nJOIN customers ON yearmonth.CustomerID = customers.CustomerID\nWHERE customers.Segment = 'SME' AND Date BETWEEN '201301' AND '201312'\nGROUP BY Date\nORDER BY TotalConsumption DESC\nLIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "6": "SELECT \n    'SME' AS Segment,\n    AVG(Consumption) AS AnnualAverage \nFROM \n    yearmonth \nWHERE \n    CustomerID IN (SELECT CustomerID \n                   FROM customers \n                   WHERE Segment = 'SME') \n    AND Date BETWEEN '201301' AND '201312' \nGROUP BY \n    CustomerID \nORDER BY \n    AnnualAverage \nLIMIT 1\n\nUNION ALL \n\nSELECT \n    'LAM' AS Segment,\n    AVG(Consumption) AS AnnualAverage \nFROM \n    yearmonth \nWHERE \n    CustomerID IN (SELECT CustomerID \n                   FROM customers \n                   WHERE Segment = 'LAM') \n    AND Date BETWEEN '201301' AND '201312' \nGROUP BY \n    CustomerID \nORDER BY \n    AnnualAverage \nLIMIT 1\n\nUNION ALL \n\nSELECT \n    'KAM' AS Segment,\n    AVG(Consumption) AS AnnualAverage \nFROM \n    yearmonth \nWHERE \n    CustomerID IN (SELECT CustomerID \n                   FROM customers \n                   WHERE Segment = 'KAM') \n    AND Date BETWEEN '201301' AND '201312' \nGROUP BY \n    CustomerID \nORDER BY \n    AnnualAverage \nLIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "7": "SELECT Segment, \n       (SUM(CASE WHEN strftime('%Y', Date) = '2013' AND Currency = 'EUR' THEN Consumption ELSE 0 END) - \n        SUM(CASE WHEN strftime('%Y', Date) = '2012' AND Currency = 'EUR' THEN Consumption ELSE 0 END)) * 100.0 /\n       NULLIF(SUM(CASE WHEN strftime('%Y', Date) = '2013' AND Currency = 'EUR' THEN Consumption ELSE 0 END), 0) AS PercentageIncrease\nFROM yearmonth\nJOIN customers ON yearmonth.CustomerID = customers.CustomerID\nWHERE strftime('%Y', Date) IN ('2012', '2013')\nGROUP BY Segment\nORDER BY PercentageIncrease;\t----- bird -----\tdebit_card_specializing",
    "8": "SELECT SUM(Consumption) \nFROM yearmonth \nWHERE CustomerID = 6 AND Date BETWEEN '201308' AND '201311';\t----- bird -----\tdebit_card_specializing",
    "9": "SELECT \n    (SELECT COUNT(*) FROM gasstations WHERE Country = 'CZE' AND Segment = 'discount') - \n    (SELECT COUNT(*) FROM gasstations WHERE Country = 'SVK' AND Segment = 'discount') AS Difference;\t----- bird -----\tdebit_card_specializing",
    "10": "SELECT \n    (SELECT COUNT(DISTINCT c.CustomerID) \n     FROM transactions_1k t \n     JOIN customers c ON t.CustomerID = c.CustomerID \n     WHERE c.Segment = 'SME' AND c.Currency = 'CZK') -\n    (SELECT COUNT(DISTINCT c.CustomerID) \n     FROM transactions_1k t \n     JOIN customers c ON t.CustomerID = c.CustomerID \n     WHERE c.Segment = 'SME' AND c.Currency = 'EUR') AS More_SMEs;\t----- bird -----\tdebit_card_specializing",
    "11": "SELECT (COUNT(DISTINCT y.CustomerID) * 100.0 / (SELECT COUNT(*) FROM customers WHERE Segment = 'LAM')) AS Percentage\nFROM yearmonth y\nJOIN customers c ON y.CustomerID = c.CustomerID\nWHERE c.Segment = 'LAM' AND y.Consumption > 46.73;\t----- bird -----\tdebit_card_specializing",
    "12": "SELECT \n    (COUNT(CASE WHEN Consumption > 528.3 THEN 1 END) * 100.0) / COUNT(*) AS Percentage\nFROM \n    yearmonth\nWHERE \n    Date LIKE '201202%';\t----- bird -----\tdebit_card_specializing",
    "13": "SELECT MAX(Consumption)\nFROM yearmonth\nWHERE Date LIKE '2012%';\t----- bird -----\tdebit_card_specializing",
    "14": "SELECT DISTINCT p.Description \nFROM yearmonth ym \nJOIN transactions_1k t ON ym.CustomerID = t.CustomerID \nJOIN products p ON t.ProductID = p.ProductID \nWHERE ym.Date LIKE '201309%';\t----- bird -----\tdebit_card_specializing",
    "15": "SELECT DISTINCT g.Country \nFROM gasstations g \nJOIN transactions_1k t ON g.GasStationID = t.GasStationID \nJOIN yearmonth y ON t.CustomerID = y.CustomerID \nWHERE y.Date LIKE '201306%';\t----- bird -----\tdebit_card_specializing",
    "16": "SELECT COUNT(DISTINCT y.CustomerID)\nFROM yearmonth y\nJOIN customers c ON y.CustomerID = c.CustomerID\nWHERE c.Currency = 'EUR' AND y.Consumption > 1000;\t----- bird -----\tdebit_card_specializing",
    "17": "SELECT p.Description \nFROM transactions_1k t\nJOIN gasstations g ON t.GasStationID = g.GasStationID\nJOIN products p ON t.ProductID = p.ProductID\nWHERE g.Country = 'CZE';\t----- bird -----\tdebit_card_specializing",
    "18": "SELECT DISTINCT Time \nFROM transactions_1k \nWHERE GasStationID IN (SELECT GasStationID FROM gasstations WHERE ChainID = 11);\t----- bird -----\tdebit_card_specializing",
    "19": "SELECT COUNT(*) \nFROM transactions_1k t\nJOIN gasstations g ON t.GasStationID = g.GasStationID\nWHERE g.Country = 'CZE' AND t.Date > '2012-01-01';\t----- bird -----\tdebit_card_specializing",
    "20": "SELECT c.Currency \nFROM transactions_1k t \nJOIN customers c ON t.CustomerID = c.CustomerID \nWHERE t.Date = '2012-08-24' AND t.Time = '16:25:00';\t----- bird -----\tdebit_card_specializing",
    "21": "SELECT c.Segment \nFROM transactions_1k t \nJOIN customers c ON t.CustomerID = c.CustomerID \nWHERE t.Date = '2012-08-23' AND t.Time = '21:20:00' \nLIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "22": "SELECT COUNT(*) \nFROM transactions_1k t\nJOIN gasstations g ON t.GasStationID = g.GasStationID\nWHERE g.Country = 'CZE' \nAND t.Date = '2012-08-26' \nAND t.Time BETWEEN '08:00:00' AND '09:00:00';\t----- bird -----\tdebit_card_specializing",
    "23": "SELECT g.Country \nFROM transactions_1k t \nJOIN customers c ON c.CustomerID = t.CustomerID \nJOIN gasstations g ON t.GasStationID = g.GasStationID \nWHERE t.Price = 548.4 AND t.Date = '2012-08-24';\t----- bird -----\tdebit_card_specializing",
    "24": "SELECT \n    (COUNT(DISTINCT CASE WHEN Currency = 'EUR' THEN CustomerID END) * 100.0) / \n    COUNT(DISTINCT CustomerID) AS Percentage\nFROM \n    customers \nWHERE \n    CustomerID IN (\n        SELECT DISTINCT CustomerID \n        FROM transactions_1k \n        WHERE Date = '2012-08-25'\n    );\t----- bird -----\tdebit_card_specializing",
    "25": "SELECT \n    (c2012.Consumption - c2013.Consumption) / c2012.Consumption AS ConsumptionDecreaseRate\nFROM \n    yearmonth c2012\nJOIN \n    transactions_1k t ON c2012.CustomerID = t.CustomerID\nJOIN \n    yearmonth c2013 ON c2012.CustomerID = c2013.CustomerID\nWHERE \n    t.Price = 634.8 \n    AND t.Date = '2012-08-25' \n    AND c2012.Date LIKE '2012-%' \n    AND c2013.Date LIKE '2013-%'\t----- bird -----\tdebit_card_specializing",
    "26": "SELECT \n    (SUM(CASE WHEN g.Segment = 'premium' THEN 1 ELSE 0 END) * 100.0 / COUNT(*)) AS premium_percentage\nFROM gasstations g\nWHERE g.Country = 'SVK';\t----- bird -----\tdebit_card_specializing",
    "27": "SELECT SUM(Price * Amount) AS TotalSpent, \n       (SELECT SUM(Price * Amount) FROM transactions_1k \n        WHERE CustomerID = 38508 AND strftime('%Y%m', Date) = '201201') AS JanuaryTotal \nFROM transactions_1k \nWHERE CustomerID = 38508;\t----- bird -----\tdebit_card_specializing",
    "28": "SELECT c.CustomerID, \n       SUM(t.Price) AS TotalSpent, \n       SUM(t.Price) / NULLIF(SUM(t.Amount), 0) AS AveragePricePerItem, \n       c.Currency\nFROM transactions_1k t\nJOIN customers c ON t.CustomerID = c.CustomerID\nGROUP BY c.CustomerID\nORDER BY TotalSpent DESC\nLIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "29": "SELECT y.CustomerID, y.Consumption\nFROM transactions_1k t\nJOIN yearmonth y ON t.CustomerID = y.CustomerID\nWHERE t.ProductID = 5 \n  AND (t.Price / t.Amount) > 29.00\n  AND y.Date = '201208';\t----- bird -----\tdebit_card_specializing",
    "30": "SELECT major.major_name \nFROM member \nJOIN major ON member.link_to_major = major.major_id \nWHERE member.first_name = 'Angela' AND member.last_name = 'Sanders';\t----- bird -----\tstudent_club",
    "31": "SELECT COUNT(m.member_id) \nFROM member m \nJOIN attendance a ON m.member_id = a.link_to_member \nJOIN event e ON a.link_to_event = e.event_id \nWHERE e.event_name = 'Women''s Soccer' AND m.t_shirt_size = 'Medium';\t----- bird -----\tstudent_club",
    "32": "SELECT COUNT(DISTINCT a.link_to_event) \nFROM attendance a \nJOIN event e ON a.link_to_event = e.event_id \nGROUP BY a.link_to_event \nHAVING COUNT(a.link_to_member) > 10 AND e.type = 'Meeting';\t----- bird -----\tstudent_club",
    "33": "SELECT e.event_name\nFROM event e\nJOIN attendance a ON e.event_id = a.link_to_event\nWHERE e.type != 'fundraiser'\nGROUP BY e.event_name\nHAVING COUNT(a.link_to_member) > 20;\t----- bird -----\tstudent_club",
    "34": "SELECT SUM(amount) \nFROM income \nWHERE link_to_member IN (SELECT member_id FROM member WHERE position = 'Vice President');\t----- bird -----\tstudent_club",
    "35": "SELECT first_name || ' ' || last_name AS full_name \nFROM member \nWHERE zip IN (SELECT zip_code FROM zip_code WHERE state = 'Illinois');\t----- bird -----\tstudent_club",
    "36": "SELECT e.event_name, ex.approved \nFROM event e \nJOIN budget b ON e.event_id = b.link_to_event \nJOIN expense ex ON b.budget_id = ex.link_to_budget \nWHERE e.event_name = 'October Meeting' AND e.event_date = '2019-10-08';\t----- bird -----\tstudent_club",
    "37": "SELECT AVG(cost) as average_cost \nFROM expense \nWHERE link_to_member = (SELECT member_id \n                        FROM member \n                        WHERE first_name = 'Elijah' AND last_name = 'Allen') \n  AND (SUBSTR(expense_date, 6, 2) = '09' OR SUBSTR(expense_date, 6, 2) = '10');\t----- bird -----\tstudent_club",
    "38": "SELECT \n    SUM(CASE WHEN SUBSTR(event_date, 1, 4) = '2019' THEN spent ELSE 0 END) - \n    SUM(CASE WHEN SUBSTR(event_date, 1, 4) = '2020' THEN spent ELSE 0 END) AS difference\nFROM \n    budget \nJOIN \n    event ON budget.link_to_event = event.event_id\nWHERE \n    event.event_name = 'Student_Club';\t----- bird -----\tstudent_club",
    "39": "SELECT notes \nFROM income \nWHERE source = 'Fundraising' AND date_received = '2019-09-14';\t----- bird -----\tstudent_club",
    "40": "SELECT phone FROM member WHERE first_name = 'Carlo' AND last_name = 'Jacobs';\t----- bird -----\tstudent_club",
    "41": "SELECT e.status \nFROM event e \nJOIN budget b ON e.event_id = b.link_to_event \nJOIN expense ex ON b.budget_id = ex.link_to_budget \nWHERE ex.expense_description = 'Post Cards, Posters' \nAND ex.expense_date = '2019-8-20';\t----- bird -----\tstudent_club",
    "42": "SELECT major.major_name \nFROM member \nJOIN major ON member.link_to_major = major.major_id \nWHERE member.first_name = 'Brent' AND member.last_name = 'Thomason';\t----- bird -----\tstudent_club",
    "43": "SELECT COUNT(*) \nFROM member \nWHERE link_to_major IN (SELECT major_id FROM major WHERE major_name = 'Business') \nAND t_shirt_size = 'Medium';\t----- bird -----\tstudent_club",
    "44": "SELECT department FROM major \nWHERE major_id = (SELECT link_to_major FROM member WHERE position = 'President');\t----- bird -----\tstudent_club",
    "45": "SELECT date_received \nFROM income \nWHERE link_to_member IN (\n    SELECT member_id \n    FROM member \n    WHERE first_name = 'Connor' AND last_name = 'Hilton'\n) AND source = 'Dues';\t----- bird -----\tstudent_club",
    "46": "SELECT \n    (SUM(CASE WHEN e.event_name = 'Yearly Kickoff' THEN b.amount ELSE 0 END) * 1.0) / \n    NULLIF(SUM(CASE WHEN e.event_name = 'October Meeting' THEN b.amount ELSE 0 END), 0) AS ratio\nFROM \n    budget b\nJOIN \n    event e ON b.link_to_event = e.event_id\nWHERE \n    b.category = 'Advertisement';\t----- bird -----\tstudent_club",
    "47": "SELECT SUM(cost) AS total_cost_of_pizzas FROM expense WHERE expense_description = 'Pizza';\t----- bird -----\tstudent_club",
    "48": "SELECT COUNT(DISTINCT city) \nFROM zip_code \nWHERE county = 'Orange County' AND state = 'Virginia';\t----- bird -----\tstudent_club",
    "49": "SELECT major.major_name \nFROM member \nJOIN major ON member.link_to_major = major.major_id \nWHERE member.phone = '809-555-3360';\t----- bird -----\tstudent_club",
    "50": "SELECT COUNT(link_to_member) \nFROM attendance \nJOIN event ON attendance.link_to_event = event.event_id \nWHERE event.event_name = 'Women''s Soccer';\t----- bird -----\tstudent_club",
    "51": "SELECT first_name || ' ' || last_name AS full_name \nFROM member \nJOIN major ON member.link_to_major = major.major_id \nWHERE major.department = 'School of Applied Sciences, Technology and Education';\t----- bird -----\tstudent_club",
    "52": "SELECT e.event_name, MAX(spent / amount) AS spend_to_budget_ratio\nFROM event e\nJOIN budget b ON e.event_id = b.link_to_event\nWHERE e.status = 'Closed'\nGROUP BY e.event_name\nORDER BY spend_to_budget_ratio DESC\nLIMIT 1;\t----- bird -----\tstudent_club",
    "53": "SELECT MAX(spent) FROM budget;\t----- bird -----\tstudent_club",
    "54": "SELECT SUM(spent) FROM budget WHERE category = 'Food';\t----- bird -----\tstudent_club",
    "55": "SELECT m.first_name || ' ' || m.last_name AS full_name\nFROM member m\nJOIN attendance a ON m.member_id = a.link_to_member\nGROUP BY m.member_id\nHAVING COUNT(a.link_to_event) > 7;\t----- bird -----\tstudent_club",
    "56": "SELECT m.first_name || ' ' || m.last_name AS full_name\nFROM member m\nJOIN attendance a ON m.member_id = a.link_to_member\nJOIN budget b ON b.link_to_event = a.link_to_event\nJOIN event e ON e.event_id = a.link_to_event\nWHERE e.event_name = 'Yearly Kickoff';\t----- bird -----\tstudent_club",
    "57": "SELECT e.event_name, MIN(exp.cost) AS lowest_cost \nFROM event e\nJOIN budget b ON e.event_id = b.link_to_event\nJOIN expense exp ON b.budget_id = exp.link_to_budget\nGROUP BY e.event_name\nORDER BY lowest_cost ASC\nLIMIT 1;\t----- bird -----\tstudent_club",
    "58": "SELECT (SUM(CASE WHEN e.event_name = 'Yearly Kickoff' THEN ex.cost ELSE 0 END) / SUM(ex.cost)) * 100 AS percentage\nFROM event e\nJOIN attendance a ON e.event_id = a.link_to_event\nJOIN expense ex ON a.link_to_event = ex.link_to_budget;\t----- bird -----\tstudent_club",
    "59": "SELECT source, MAX(amount) AS top_amount\nFROM income\nWHERE date_received BETWEEN '2019-09-01' AND '2019-09-30'\nGROUP BY source\nORDER BY top_amount DESC\nLIMIT 1;\t----- bird -----\tstudent_club",
    "60": "SELECT COUNT(*) \nFROM member \nWHERE link_to_major IN (SELECT major_id FROM major WHERE major_name = 'Physics Teaching');\t----- bird -----\tstudent_club",
    "61": "SELECT event_name \nFROM event \nJOIN budget ON event.event_id = budget.link_to_event \nWHERE budget.category = 'Advertisement' \nORDER BY budget.spent DESC \nLIMIT 1;\t----- bird -----\tstudent_club",
    "62": "SELECT a.link_to_event \nFROM member m \nJOIN attendance a ON m.member_id = a.link_to_member \nJOIN event e ON a.link_to_event = e.event_id \nWHERE m.first_name = 'Maya' AND m.last_name = 'Mclean' AND e.event_name = 'Women''s Soccer';\t----- bird -----\tstudent_club",
    "63": "SELECT cost FROM expense \nWHERE expense_description = 'Posters' \nAND link_to_budget IN (\n    SELECT budget_id \n    FROM budget \n    WHERE link_to_event = (\n        SELECT event_id \n        FROM event \n        WHERE event_name = 'September Speaker'\n    )\n);\t----- bird -----\tstudent_club",
    "64": "SELECT event_name \nFROM event \nJOIN budget ON event.event_id = budget.link_to_event \nWHERE event.status = 'Closed' AND budget.remaining < 0 \nORDER BY budget.remaining ASC \nLIMIT 1;\t----- bird -----\tstudent_club",
    "65": "SELECT expense.expense_description, SUM(expense.cost) AS total_value\nFROM expense\nJOIN budget ON expense.link_to_budget = budget.budget_id\nJOIN event ON budget.link_to_event = event.event_id\nWHERE event.event_name = 'October Meeting' AND expense.approved = 'Yes'\nGROUP BY expense.expense_description;\t----- bird -----\tstudent_club",
    "66": "SELECT category, SUM(amount) as total_budget\nFROM budget\nJOIN event ON budget.link_to_event = event.event_id\nWHERE event.event_name = 'April Speaker'\nGROUP BY category\nORDER BY total_budget ASC;\t----- bird -----\tstudent_club",
    "67": "SELECT SUM(cost) AS total_expense FROM expense WHERE expense_date = '2019-08-20';\t----- bird -----\tstudent_club",
    "68": "SELECT m.first_name || ' ' || m.last_name AS full_name, SUM(e.cost) AS total_cost \nFROM member m \nJOIN expense e ON m.member_id = e.link_to_member \nWHERE m.member_id = 'rec4BLdZHS2Blfp4v' \nGROUP BY m.member_id;\t----- bird -----\tstudent_club",
    "69": "SELECT expense_description \nFROM expense \nJOIN member ON expense.link_to_member = member.member_id \nWHERE member.first_name = 'Sacha' AND member.last_name = 'Harrison';\t----- bird -----\tstudent_club",
    "70": "SELECT DISTINCT type FROM event WHERE location = 'MU 215';\t----- bird -----\tstudent_club",
    "71": "SELECT m.last_name, maj.department, maj.college \nFROM member m \nJOIN major maj ON m.link_to_major = maj.major_id \nWHERE maj.major_name = 'Environmental Engineering';\t----- bird -----\tstudent_club",
    "72": "SELECT b.category \nFROM event e \nJOIN budget b ON e.event_id = b.link_to_event \nWHERE e.location = 'MU 215' \nAND e.type = 'Guest Speaker' \nAND b.spent = 0;\t----- bird -----\tstudent_club",
    "73": "SELECT \n    (COUNT(CASE WHEN i.amount = 50 THEN 1 END) * 100.0) / COUNT(m.member_id) AS percentage\nFROM \n    member m\nLEFT JOIN \n    income i ON m.member_id = i.link_to_member\nWHERE \n    m.t_shirt_size = 'Medium' AND \n    m.position = 'Member';\t----- bird -----\tstudent_club",
    "74": "SELECT event_name \nFROM event \nWHERE type = 'Game' AND status = 'Closed' AND event_date BETWEEN '2019-03-15' AND '2020-03-20';\t----- bird -----\tstudent_club",
    "75": "SELECT m.first_name || ' ' || m.last_name AS full_name, m.phone \nFROM member m\nJOIN expense e ON m.member_id = e.link_to_member\nWHERE e.cost > (SELECT AVG(cost) FROM expense);\t----- bird -----\tstudent_club",
    "76": "SELECT m.first_name || ' ' || m.last_name AS full_name, e.cost \nFROM expense e \nJOIN member m ON e.link_to_member = m.member_id \nWHERE e.expense_description = 'Water, Veggie tray, supplies';\t----- bird -----\tstudent_club",
    "77": "SELECT first_name || ' ' || last_name AS full_name, amount \nFROM member \nJOIN income ON member.member_id = income.link_to_member \nWHERE income.date_received = '9/9/2019';\t----- bird -----\tstudent_club",
    "78": "SELECT \n    (100.0 * COUNT(CASE WHEN Admission = '+' THEN ID END) / NULLIF(COUNT(CASE WHEN Admission = '-' THEN ID END), 0)) AS percentage_deviation\nFROM \n    Patient \nWHERE \n    SEX = 'M';\t----- bird -----\tthrombosis_prediction",
    "79": "SELECT \n    (COUNT(ID) * 1.0 / (SELECT COUNT(ID) FROM Patient WHERE SEX = 'F')) * 100 AS Percentage\nFROM Patient\nWHERE Birthday > '1930-12-31' AND SEX = 'F';\t----- bird -----\tthrombosis_prediction",
    "80": "SELECT \n    CAST((SELECT COUNT(ID) FROM Patient WHERE Diagnosis = 'SLE' AND Admission = '+') AS REAL) / \n    NULLIF((SELECT COUNT(ID) FROM Patient WHERE Diagnosis = 'SLE' AND Admission = '-'), 0) AS ratio;\t----- bird -----\tthrombosis_prediction",
    "81": "SELECT Diagnosis, Date FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Patient.ID = 30609;\t----- bird -----\tthrombosis_prediction",
    "82": "SELECT Patient.ID, Patient.SEX, Patient.Birthday \nFROM Patient \nJOIN Laboratory ON Patient.ID = Laboratory.ID \nWHERE Laboratory.LDH > 500;\t----- bird -----\tthrombosis_prediction",
    "83": "SELECT Patient.ID, \n       (strftime('%Y', 'now') - strftime('%Y', Patient.Birthday)) AS age \nFROM Patient \nJOIN Examination ON Patient.ID = Examination.ID \nWHERE Examination.RVVT = '+';\t----- bird -----\tthrombosis_prediction",
    "84": "SELECT p.ID, p.SEX, p.Diagnosis \nFROM Patient p \nJOIN Examination e ON p.ID = e.ID \nWHERE e.Thrombosis = 2;\t----- bird -----\tthrombosis_prediction",
    "85": "SELECT COUNT(*) \nFROM Patient \nWHERE SEX = 'F' AND strftime('%Y', Description) = '1997' AND Admission = '-';\t----- bird -----\tthrombosis_prediction",
    "86": "SELECT COUNT(*) \nFROM Patient \nJOIN Examination ON Patient.ID = Examination.ID \nWHERE Examination.Thrombosis = 1 AND Patient.SEX = 'F' AND strftime('%Y', Examination.`Examination Date`) = '1997';\t----- bird -----\tthrombosis_prediction",
    "87": "SELECT E.Symptoms, E.Diagnosis\nFROM Patient P\nJOIN Examination E ON P.ID = E.ID\nWHERE P.Birthday = (SELECT MAX(Birthday) FROM Patient)\nAND E.Symptoms IS NOT NULL;\t----- bird -----\tthrombosis_prediction",
    "88": "SELECT `Date`, (strftime('%Y', `First Date`) - strftime('%Y', Birthday)) AS age\nFROM Laboratory \nJOIN Patient ON Laboratory.ID = Patient.ID \nWHERE Diagnosis = 'SJS' \nORDER BY Birthday ASC \nLIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "89": "SELECT \n    (SELECT COUNT(*) FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Patient.SEX = 'M' AND Laboratory.UA <= 8.0) * 1.0 /\n    (SELECT COUNT(*) FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Patient.SEX = 'F' AND Laboratory.UA <= 6.5) AS Male_Female_Ratio;\t----- bird -----\tthrombosis_prediction",
    "90": "SELECT COUNT(DISTINCT P.ID) \nFROM Patient P \nJOIN Examination E ON P.ID = E.ID \nWHERE strftime('%Y', P.Birthday) <= strftime('%Y', E.`Examination Date`) - 18 \nAND strftime('%Y', E.`Examination Date`) BETWEEN '1990' AND '1993';\t----- bird -----\tthrombosis_prediction",
    "91": "SELECT \n    strftime('%Y', Examination.`Examination Date`) - strftime('%Y', Patient.Birthday) AS Age,\n    Examination.Diagnosis\nFROM \n    Examination\nJOIN \n    Patient ON Examination.ID = Patient.ID\nJOIN \n    Laboratory ON Laboratory.ID = Patient.ID\nWHERE \n    Laboratory.HGB = (SELECT MAX(HGB) FROM Laboratory)\nLIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "92": "SELECT `aCL IgM` \nFROM Examination \nWHERE ID = (SELECT ID \n            FROM Patient \n            WHERE Diagnosis = 'SLE' \n            AND Description = '1994-02-19') \nAND `Examination Date` = '1993-11-12';\t----- bird -----\tthrombosis_prediction",
    "93": "SELECT \n    (SUM(CASE WHEN Date LIKE '1981-11-%' THEN `T-CHO` ELSE 0 END) - \n    SUM(CASE WHEN Date LIKE '1981-12-%' THEN `T-CHO` ELSE 0 END)) / \n    NULLIF(SUM(CASE WHEN Date LIKE '1981-12-%' THEN `T-CHO` ELSE 0 END), 0) AS Decrease_Rate\nFROM \n    Patient \nJOIN \n    Laboratory ON Patient.ID = Laboratory.ID \nWHERE \n    Birthday = '1959-02-18';\t----- bird -----\tthrombosis_prediction",
    "94": "SELECT DISTINCT p.ID \nFROM Patient p \nJOIN Laboratory l ON p.ID = l.ID \nJOIN Examination e ON p.ID = e.ID \nWHERE e.`Examination Date` BETWEEN '1987-07-06' AND '1996-01-31' \n  AND l.GPT > 30 \n  AND l.ALB < 4;\t----- bird -----\tthrombosis_prediction",
    "95": "SELECT COUNT(*) \nFROM Examination \nWHERE Thrombosis = 2 \nAND ANA = 'S' \nAND `aCL IgM` > (SELECT AVG(`aCL IgM`) * 1.2 FROM Examination);\t----- bird -----\tthrombosis_prediction",
    "96": "SELECT DISTINCT Patient.ID, Patient.SEX, Patient.Birthday, Patient.Description, Patient.`First Date`, Patient.Admission, Patient.Diagnosis\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE Patient.Admission = '-'\nAND Laboratory.Date LIKE '1991-10%'\nAND Laboratory.`T-BIL` < 2.0;\t----- bird -----\tthrombosis_prediction",
    "97": "SELECT AVG(LAB.ALB) \nFROM Laboratory LAB \nJOIN Patient PAT ON LAB.ID = PAT.ID \nWHERE PAT.SEX = 'F' AND LAB.PLT > 400 AND PAT.Diagnosis = 'SLE';\t----- bird -----\tthrombosis_prediction",
    "98": "SELECT COUNT(*) \nFROM Patient \nWHERE SEX = 'F' AND Diagnosis = 'APS';\t----- bird -----\tthrombosis_prediction",
    "99": "SELECT (SUM(SEX = 'F') * 100.0 / COUNT(SEX)) AS percentage_women\nFROM Patient\nWHERE YEAR(Birthday) = '1980' AND Diagnosis = 'RA';\t----- bird -----\tthrombosis_prediction",
    "100": "SELECT \n    CASE \n        WHEN (p.SEX = 'M' AND l.UA > 8.0) OR (p.SEX = 'F' AND l.UA > 6.5) THEN 'Yes' \n        ELSE 'No' \n    END AS Uric_Acid_Normal_Range\nFROM \n    Patient p \nJOIN \n    Laboratory l ON p.ID = l.ID\nWHERE \n    p.ID = 57266;\t----- bird -----\tthrombosis_prediction",
    "101": "SELECT DISTINCT Patient.ID \nFROM Patient \nJOIN Laboratory ON Patient.ID = Laboratory.ID \nWHERE Patient.SEX = 'M' AND Laboratory.GPT >= 60;\t----- bird -----\tthrombosis_prediction",
    "102": "SELECT P.Diagnosis \nFROM Patient P \nJOIN Laboratory L ON P.ID = L.ID \nWHERE L.GPT > 60 \nORDER BY P.Birthday ASC;\t----- bird -----\tthrombosis_prediction",
    "103": "SELECT P.ID, P.SEX, P.Birthday \nFROM Patient P \nJOIN Laboratory L ON P.ID = L.ID \nWHERE L.UN = 29;\t----- bird -----\tthrombosis_prediction",
    "104": "SELECT SEX, GROUP_CONCAT(DISTINCT P.ID) AS PatientIDs\nFROM Patient P\nJOIN Laboratory L ON P.ID = L.ID\nWHERE L.`T-BIL` >= 2.0\nGROUP BY SEX;\t----- bird -----\tthrombosis_prediction",
    "105": "SELECT AVG(strftime('%Y', 'now') - strftime('%Y', Birthday)) AS average_age\nFROM Patient\nJOIN Laboratory ON Patient.ID = Laboratory.ID\nWHERE SEX = 'M' AND `T-CHO` >= 250;\t----- bird -----\tthrombosis_prediction",
    "106": "SELECT COUNT(DISTINCT Patient.ID) \nFROM Patient \nJOIN Laboratory ON Patient.ID = Laboratory.ID \nWHERE Laboratory.TG >= 200 AND (strftime('%Y', 'now') - strftime('%Y', Patient.Birthday)) > 50;\t----- bird -----\tthrombosis_prediction",
    "107": "SELECT COUNT(DISTINCT p.ID) \nFROM Patient p \nJOIN Laboratory l ON p.ID = l.ID \nWHERE p.Birthday BETWEEN '1936-01-01' AND '1956-12-31' \nAND p.SEX = 'M' \nAND l.CPK >= 250;\t----- bird -----\tthrombosis_prediction",
    "108": "SELECT p.ID, p.SEX, (strftime('%Y', 'now') - strftime('%Y', p.Birthday)) AS Age \nFROM Patient p \nJOIN Laboratory l ON p.ID = l.ID \nWHERE l.GLU >= 180 AND l.`T-CHO` < 250;\t----- bird -----\tthrombosis_prediction",
    "109": "SELECT P.ID, (STRFTIME('%Y', 'now') - STRFTIME('%Y', P.Birthday)) AS Age, P.Diagnosis \nFROM Patient P \nJOIN Laboratory L ON P.ID = L.ID \nWHERE L.RBC < 3.5;\t----- bird -----\tthrombosis_prediction",
    "110": "SELECT P.ID, P.SEX\nFROM Patient P\nJOIN Laboratory L ON P.ID = L.ID\nWHERE P.Diagnosis = 'SLE' AND L.HGB > 10 AND L.HGB < 17\nORDER BY P.Birthday ASC\nLIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "111": "SELECT P.ID, strftime('%Y', 'now') - strftime('%Y', P.Birthday) AS age\nFROM Patient P\nJOIN Laboratory L ON P.ID = L.ID\nWHERE L.HCT >= 52\nGROUP BY P.ID\nHAVING COUNT(L.ID) > 1;\t----- bird -----\tthrombosis_prediction",
    "112": "SELECT \n    SUM(PLT < 100) AS Lower_Than_Normal_Range,\n    SUM(PLT > 400) AS Higher_Than_Normal_Range,\n    SUM(PLT < 100) - SUM(PLT > 400) AS Difference\nFROM Laboratory\nWHERE PLT <= 100 OR PLT >= 400;\t----- bird -----\tthrombosis_prediction",
    "113": "SELECT DISTINCT p.ID, p.SEX, p.Birthday, p.Admission, p.Diagnosis \nFROM Patient p\nJOIN Laboratory l ON p.ID = l.ID\nWHERE strftime('%Y', l.Date) = '1984' \nAND (strftime('%Y', 'now') - strftime('%Y', p.Birthday)) < 50 \nAND l.PLT BETWEEN 100 AND 400;\t----- bird -----\tthrombosis_prediction",
    "114": "SELECT \n    (SUM(CASE WHEN P.SEX = 'F' AND L.PT >= 14 THEN 1 ELSE 0 END) * 100.0) / \n    NULLIF(SUM(CASE WHEN L.PT >= 14 THEN 1 ELSE 0 END), 0) AS Female_Percentage_Abnormal_PT\nFROM \n    Patient P\nJOIN \n    Laboratory L ON P.ID = L.ID\nWHERE \n    (STRFTIME('%Y', 'now') - STRFTIME('%Y', P.Birthday)) > 55;\t----- bird -----\tthrombosis_prediction",
    "115": "SELECT COUNT(DISTINCT P.ID) \nFROM Patient P \nJOIN Laboratory L ON P.ID = L.ID \nWHERE P.SEX = 'M' \nAND L.WBC > 3.5 AND L.WBC < 9.0 \nAND (L.FG <= 150 OR L.FG >= 450);\t----- bird -----\tthrombosis_prediction",
    "116": "SELECT COUNT(DISTINCT ID) FROM Laboratory WHERE IGG >= 2000;\t----- bird -----\tthrombosis_prediction",
    "117": "SELECT COUNT(*) \nFROM Patient p \nJOIN Laboratory l ON p.ID = l.ID \nJOIN Examination e ON p.ID = e.ID \nWHERE l.IGG > 900 AND l.IGG < 2000 AND e.Symptoms IS NOT NULL;\t----- bird -----\tthrombosis_prediction",
    "118": "SELECT COUNT(*) \nFROM Patient \nJOIN Laboratory ON Patient.ID = Laboratory.ID \nWHERE Laboratory.IGA > 80 AND Laboratory.IGA < 500 \nAND Patient.`First Date` >= '1990-01-01';\t----- bird -----\tthrombosis_prediction",
    "119": "SELECT Diagnosis, COUNT(Diagnosis) as DiagnosisCount \nFROM Patient \nJOIN Laboratory ON Patient.ID = Laboratory.ID \nWHERE IGM <= 40 OR IGM >= 400 \nGROUP BY Diagnosis \nORDER BY DiagnosisCount DESC \nLIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "120": "SELECT COUNT(DISTINCT p.ID) \nFROM Patient p \nJOIN Laboratory l ON p.ID = l.ID \nWHERE l.CRP = '+' AND p.Description IS NULL;\t----- bird -----\tthrombosis_prediction",
    "121": "SELECT COUNT(DISTINCT P.ID) \nFROM Patient P \nJOIN Laboratory L ON P.ID = L.ID \nWHERE L.CRE >= 1.5 AND (strftime('%Y', 'now') - strftime('%Y', P.Birthday)) < 70;\t----- bird -----\tthrombosis_prediction",
    "122": "SELECT COUNT(DISTINCT p.ID) \nFROM Patient p \nJOIN Laboratory l ON p.ID = l.ID \nWHERE l.RNP IN ('-', '+-') AND p.Admission = '+';\t----- bird -----\tthrombosis_prediction",
    "123": "SELECT COUNT(*) \nFROM Patient p \nJOIN Laboratory l ON p.ID = l.ID \nJOIN Examination e ON p.ID = e.ID \nWHERE l.SM NOT IN ('-', '+-') AND e.Thrombosis = 0;\t----- bird -----\tthrombosis_prediction",
    "124": "SELECT COUNT(DISTINCT Patient.ID) \nFROM Patient \nJOIN Laboratory ON Patient.ID = Laboratory.ID \nJOIN Examination ON Patient.ID = Examination.ID \nWHERE Laboratory.SC170 IN ('negative', '0') \nAND Patient.SEX = 'F' \nAND Examination.Symptoms IS NULL;\t----- bird -----\tthrombosis_prediction",
    "125": "SELECT COUNT(DISTINCT P.ID) \nFROM Patient P \nJOIN Laboratory L ON P.ID = L.ID \nWHERE L.CENTROMEA IN ('-', '+-') \nAND L.SSB IN ('-', '+-') \nAND P.SEX = 'M';\t----- bird -----\tthrombosis_prediction",
    "126": "SELECT MIN(Birthday) AS Youngest_Birthday \nFROM Patient \nWHERE ID IN (\n    SELECT ID \n    FROM Laboratory \n    WHERE GOT >= 60\n);\t----- bird -----\tthrombosis_prediction",
    "127": "SELECT COUNT(DISTINCT p.ID) \nFROM Patient p \nJOIN Laboratory l ON p.ID = l.ID \nJOIN Examination e ON p.ID = e.ID \nWHERE l.CPK < 250 AND (e.KCT = '+' OR e.RVVT = '+' OR e.LAC = '+');\t----- bird -----\tthrombosis_prediction",
    "128": "SELECT L.name \nFROM Match M \nJOIN League L ON M.league_id = L.id \nWHERE M.season = '2015/2016' \nGROUP BY L.name \nORDER BY SUM(home_team_goal + away_team_goal) DESC \nLIMIT 1;\t----- bird -----\teuropean_football_2",
    "129": "SELECT T.team_long_name\nFROM Match M\nJOIN Team T ON M.away_team_api_id = T.team_api_id\nJOIN League L ON M.league_id = L.id\nWHERE L.name = 'Scotland Premier League' AND M.season = '2009/2010' AND (M.away_team_goal - M.home_team_goal) > 0\nGROUP BY T.team_api_id\nORDER BY COUNT(*) DESC\nLIMIT 1;\t----- bird -----\teuropean_football_2",
    "130": "SELECT team_api_id, buildUpPlaySpeed \nFROM Team_Attributes \nORDER BY buildUpPlaySpeed DESC \nLIMIT 4;\t----- bird -----\teuropean_football_2",
    "131": "SELECT L.name\nFROM Match M\nJOIN League L ON M.league_id = L.id\nWHERE M.season = '2015/2016'\nGROUP BY L.id\nHAVING SUM(home_team_goal = away_team_goal) = (\n    SELECT MAX(draw_count)\n    FROM (\n        SELECT COUNT(*) AS draw_count\n        FROM Match\n        WHERE season = '2015/2016'\n        GROUP BY league_id\n        HAVING home_team_goal = away_team_goal\n    )\n)\t----- bird -----\teuropean_football_2",
    "132": "SELECT player_name, \n       (strftime('%Y', 'now') - strftime('%Y', birthday)) AS age \nFROM Player P \nJOIN Player_Attributes PA ON P.player_api_id = PA.player_api_id \nWHERE sprint_speed >= 97 \n  AND date BETWEEN '2013-01-01' AND '2015-12-31';\t----- bird -----\teuropean_football_2",
    "133": "SELECT League.name, COUNT(Match.id) AS total_matches \nFROM Match \nJOIN League ON Match.league_id = League.id \nGROUP BY League.id \nORDER BY total_matches DESC \nLIMIT 1;\t----- bird -----\teuropean_football_2",
    "134": "SELECT team_fifa_api_id FROM Team_Attributes WHERE buildUpPlaySpeed > 50 AND buildUpPlaySpeed < 60;\t----- bird -----\teuropean_football_2",
    "135": "SELECT T.team_long_name \nFROM Team_Attributes TA\nJOIN Team T ON TA.team_api_id = T.team_api_id\nWHERE TA.buildUpPlayPassing > (SELECT AVG(buildUpPlayPassing) \n                                 FROM Team_Attributes \n                                 WHERE strftime('%Y', date) = '2012' AND buildUpPlayPassing IS NOT NULL)\nAND strftime('%Y', TA.date) = '2012';\t----- bird -----\teuropean_football_2",
    "136": "SELECT \n    (SUM(pa.preferred_foot = 'left') * 100.0 / COUNT(p.player_fifa_api_id)) AS percentage_left_foot_players\nFROM \n    Player p\nJOIN \n    Player_Attributes pa ON p.player_fifa_api_id = pa.player_fifa_api_id\nWHERE \n    YEAR(p.birthday) BETWEEN 1987 AND 1992;\t----- bird -----\teuropean_football_2",
    "137": "SELECT AVG(long_shots) FROM Player_Attributes WHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Ahmed Samir Farag');\t----- bird -----\teuropean_football_2",
    "138": "SELECT P.player_name\nFROM Player P\nJOIN Player_Attributes PA ON P.player_fifa_api_id = PA.player_fifa_api_id\nWHERE P.height > 180\nGROUP BY P.player_fifa_api_id\nORDER BY AVG(PA.heading_accuracy) DESC\nLIMIT 10;\t----- bird -----\teuropean_football_2",
    "139": "SELECT L.name \nFROM Match M \nJOIN League L ON M.league_id = L.id \nWHERE M.season = '2009/2010' \nGROUP BY L.name \nHAVING AVG(M.home_team_goal) > AVG(M.away_team_goal);\t----- bird -----\teuropean_football_2",
    "140": "SELECT * FROM Player WHERE substr(birthday, 1, 7) = '1970-10';\t----- bird -----\teuropean_football_2",
    "141": "SELECT pa.overall_rating \nFROM Player_Attributes pa \nJOIN Player p ON pa.player_api_id = p.player_api_id \nWHERE p.player_name = 'Gabriel Tamas' AND strftime('%Y', pa.date) = '2011';\t----- bird -----\teuropean_football_2",
    "142": "SELECT AVG(home_team_goal) \nFROM Match \nJOIN Country ON Match.country_id = Country.id \nWHERE Country.name = 'Poland' AND Match.season = '2010/2011';\t----- bird -----\teuropean_football_2",
    "143": "SELECT AVG(finishing) AS average_finishing_rate, player_name\nFROM Player\nJOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id\nWHERE height IN (SELECT MAX(height) FROM Player) OR height IN (SELECT MIN(height) FROM Player)\nGROUP BY player_name\nORDER BY average_finishing_rate DESC\nLIMIT 1;\t----- bird -----\teuropean_football_2",
    "144": "SELECT AVG(pa.overall_rating) AS average_overall_rating\nFROM Player_Attributes pa\nJOIN Player p ON pa.player_api_id = p.player_api_id\nWHERE strftime('%Y', pa.date) BETWEEN '2010' AND '2015'\nAND p.height > 170;\t----- bird -----\teuropean_football_2",
    "145": "SELECT \n    (SELECT SUM(CASE WHEN p.player_name = 'Abdou Diallo' THEN pa.ball_control ELSE 0 END) / \n            COUNT(CASE WHEN p.player_name = 'Abdou Diallo' THEN pa.id ELSE NULL END) \n     FROM Player p \n     JOIN Player_Attributes pa ON p.player_api_id = pa.player_api_id) - \n    (SELECT SUM(CASE WHEN p.player_name = 'Aaron Appindangoye' THEN pa.ball_control ELSE 0 END) / \n            COUNT(CASE WHEN p.player_name = 'Aaron Appindangoye' THEN pa.id ELSE NULL END) \n     FROM Player p \n     JOIN Player_Attributes pa ON p.player_api_id = pa.player_api_id) AS difference;\t----- bird -----\teuropean_football_2",
    "146": "SELECT player_name, birthday\nFROM Player\nWHERE player_name IN ('Aaron Lennon', 'Abdelaziz Barrada')\nORDER BY birthday ASC\nLIMIT 1;\t----- bird -----\teuropean_football_2",
    "147": "SELECT player_name, height FROM Player ORDER BY height DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "148": "SELECT COUNT(*) \nFROM Player_Attributes \nWHERE preferred_foot = 'left' AND attacking_work_rate = 'low';\t----- bird -----\teuropean_football_2",
    "149": "SELECT COUNT(DISTINCT Player.player_api_id) \nFROM Player \nJOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id \nWHERE strftime('%Y', Player.birthday) < '1986' AND Player_Attributes.defensive_work_rate = 'high';\t----- bird -----\teuropean_football_2",
    "150": "SELECT p.player_name\nFROM Player p\nJOIN Player_Attributes pa ON p.player_api_id = pa.player_api_id\nWHERE pa.volleys > 70 AND pa.dribbling > 70;\t----- bird -----\teuropean_football_2",
    "151": "SELECT COUNT(*) \nFROM Match \nJOIN League ON Match.league_id = League.id \nWHERE League.name = 'Belgium Jupiler League' AND SUBSTR(Match.date, 1, 7) = '2009-04';\t----- bird -----\teuropean_football_2",
    "152": "SELECT L.name \nFROM Match M \nJOIN League L ON M.league_id = L.id \nWHERE M.season = '2008/2009' \nGROUP BY L.name \nORDER BY COUNT(M.id) DESC \nLIMIT 1;\t----- bird -----\teuropean_football_2",
    "153": "SELECT \n    ((SELECT overall_rating FROM Player_Attributes WHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Ariel Borysiuk')) - \n    (SELECT overall_rating FROM Player_Attributes WHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Paulin Puel'))) / \n    (SELECT overall_rating FROM Player_Attributes WHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Paulin Puel')) * 100 AS percentage_difference;\t----- bird -----\teuropean_football_2",
    "154": "SELECT AVG(pa.overall_rating) \nFROM Player_Attributes pa \nJOIN Player p ON pa.player_api_id = p.player_api_id \nWHERE p.player_name = 'Pietro Marino';\t----- bird -----\teuropean_football_2",
    "155": "SELECT MAX(chanceCreationPassing) AS highest_score, chanceCreationPassingClass \nFROM Team_Attributes \nJOIN Team ON Team_Attributes.team_fifa_api_id = Team.team_fifa_api_id \nWHERE Team.team_long_name = 'Ajax';\t----- bird -----\teuropean_football_2",
    "156": "SELECT p.player_name \nFROM Player_Attributes pa \nJOIN Player p ON pa.player_api_id = p.player_api_id \nWHERE pa.overall_rating = 77 AND pa.date LIKE '2016-06-23%' \nORDER BY p.birthday ASC \nLIMIT 1;\t----- bird -----\teuropean_football_2",
    "157": "SELECT pa.overall_rating \nFROM Player_Attributes pa \nJOIN Player p ON pa.player_api_id = p.player_api_id \nWHERE p.player_name = 'Aaron Mooy' AND pa.date LIKE '2016-02-04%';\t----- bird -----\teuropean_football_2",
    "158": "SELECT pa.attacking_work_rate \nFROM Player_Attributes pa \nJOIN Player p ON pa.player_api_id = p.player_api_id \nWHERE p.player_name = 'Francesco Migliore' AND pa.date LIKE '2015-05-01%';\t----- bird -----\teuropean_football_2",
    "159": "SELECT date \nFROM Player_Attributes \nWHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Kevin Constant') \nAND crossing = (SELECT MAX(crossing) FROM Player_Attributes WHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Kevin Constant'));\t----- bird -----\teuropean_football_2",
    "160": "SELECT buildUpPlayPassingClass \nFROM Team_Attributes \nJOIN Team ON Team_Attributes.team_fifa_api_id = Team.team_fifa_api_id \nWHERE Team.team_long_name = 'FC Lorient' AND Team_Attributes.date LIKE '2010-02-22%';\t----- bird -----\teuropean_football_2",
    "161": "SELECT ta.defenceAggressionClass \nFROM Team_Attributes ta \nJOIN Team t ON ta.team_api_id = t.team_api_id \nWHERE t.team_long_name = 'Hannover 96' AND ta.date LIKE '2015-09-10%';\t----- bird -----\teuropean_football_2",
    "162": "SELECT AVG(pa.overall_rating) \nFROM Player_Attributes pa \nJOIN Player p ON pa.player_api_id = p.player_api_id \nWHERE p.player_name = 'Marko Arnautovic' \nAND SUBSTR(pa.date, 1, 10) BETWEEN '2007-02-22' AND '2016-04-21';\t----- bird -----\teuropean_football_2",
    "163": "SELECT \n    (SELECT overall_rating FROM Player_Attributes \n     WHERE player_fifa_api_id = (SELECT player_fifa_api_id FROM Player WHERE player_name = 'Landon Donovan') \n     AND date = '2013-07-12') - \n    (SELECT overall_rating FROM Player_Attributes \n     WHERE player_fifa_api_id = (SELECT player_fifa_api_id FROM Player WHERE player_name = 'Jordan Bowery') \n     AND date = '2013-07-12') AS rating_difference,\n    ((SELECT overall_rating FROM Player_Attributes \n      WHERE player_fifa_api_id = (SELECT player_fifa_api_id FROM Player WHERE player_name = 'Landon Donovan') \n      AND date = '2013-07-12') - \n    (SELECT overall_rating FROM Player_Attributes \n     WHERE player_fifa_api_id = (SELECT player_fifa_api_id FROM Player WHERE player_name = 'Jordan Bowery') \n     AND date = '2013-07-12')) * 100.0 / \n    (SELECT overall_rating FROM Player_Attributes \n     WHERE player_fifa_api_id = (SELECT player_fifa_api_id FROM Player WHERE player_name = 'Jordan Bowery') \n     AND date = '2013-07-12') AS percentage_higher;\t----- bird -----\teuropean_football_2",
    "164": "SELECT player_name \nFROM Player \nWHERE height = (SELECT MAX(height) FROM Player);\t----- bird -----\teuropean_football_2",
    "165": "SELECT player_name FROM Player JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id ORDER BY overall_rating DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "166": "SELECT player_name \nFROM Player \nJOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id \nWHERE attacking_work_rate = 'high';\t----- bird -----\teuropean_football_2",
    "167": "SELECT t.team_short_name \nFROM Team_Attributes ta \nJOIN Team t ON ta.team_api_id = t.team_api_id \nWHERE ta.chanceCreationPassingClass = 'Safe';\t----- bird -----\teuropean_football_2",
    "168": "SELECT COUNT(*) \nFROM Player \nWHERE player_name LIKE 'Aaron%' AND birthday > '1990-12-31';\t----- bird -----\teuropean_football_2",
    "169": "SELECT (SELECT jumping FROM Player_Attributes WHERE id = 6) - (SELECT jumping FROM Player_Attributes WHERE id = 23) AS difference;\t----- bird -----\teuropean_football_2",
    "170": "SELECT player_api_id \nFROM Player_Attributes \nWHERE potential = (SELECT MIN(potential) FROM Player_Attributes) \nAND preferred_foot = 'right' \nLIMIT 4;\t----- bird -----\teuropean_football_2",
    "171": "SELECT COUNT(*) \nFROM Player_Attributes \nWHERE crossing = (SELECT MAX(crossing) FROM Player_Attributes) \nAND preferred_foot = 'left';\t----- bird -----\teuropean_football_2",
    "172": "SELECT home_team_goal, away_team_goal \nFROM Match \nJOIN League ON Match.league_id = League.id \nWHERE Match.date LIKE '2008-09-24%' AND League.name = 'Belgium Jupiler League';\t----- bird -----\teuropean_football_2",
    "173": "SELECT buildUpPlaySpeedClass FROM Team_Attributes \nWHERE team_fifa_api_id = (SELECT team_fifa_api_id FROM Team WHERE team_long_name = 'KSV Cercle Brugge');\t----- bird -----\teuropean_football_2",
    "174": "SELECT pa.finishing AS finishing_rate, pa.curve AS curve_score \nFROM Player p \nJOIN Player_Attributes pa ON p.player_api_id = pa.player_api_id \nWHERE p.weight = (SELECT MAX(weight) FROM Player);\t----- bird -----\teuropean_football_2",
    "175": "SELECT L.name, COUNT(M.id) as games_count\nFROM Match M\nJOIN League L ON M.league_id = L.id\nWHERE M.season = '2015/2016'\nGROUP BY L.name\nORDER BY games_count DESC\nLIMIT 4;\t----- bird -----\teuropean_football_2",
    "176": "SELECT T.team_long_name \nFROM Team T \nJOIN Match M ON T.team_api_id = M.away_team_api_id \nWHERE M.away_team_goal = (SELECT MAX(away_team_goal) FROM Match);\t----- bird -----\teuropean_football_2",
    "177": "SELECT P.player_name, PA.overall_rating\t----- bird -----\teuropean_football_2",
    "178": "SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM Player_Attributes)) AS percentage \nFROM Player_Attributes \nJOIN Player ON Player.player_api_id = Player_Attributes.player_api_id \nWHERE Player.height < 180 AND Player_Attributes.overall_rating > 70;\t----- bird -----\teuropean_football_2",
    "179": "SELECT d.driverRef \nFROM qualifying q\nJOIN drivers d ON q.driverId = d.driverId\nWHERE q.raceId = 20 AND q.q1 IS NOT NULL\nORDER BY q.q1 DESC \nLIMIT 5;\t----- bird -----\tformula_1",
    "180": "SELECT d.surname \nFROM qualifying q \nJOIN drivers d ON q.driverId = d.driverId \nWHERE q.raceId = 19 AND q.q2 = (SELECT MIN(q2) FROM qualifying WHERE raceId = 19);\t----- bird -----\tformula_1",
    "181": "SELECT races.name \nFROM races \nJOIN circuits ON races.circuitId = circuits.circuitId \nWHERE circuits.country = 'Germany';\t----- bird -----\tformula_1",
    "182": "SELECT c.lat, c.lng \nFROM circuits c \nJOIN races r ON c.circuitId = r.circuitId \nWHERE r.name = 'Australian Grand Prix';\t----- bird -----\tformula_1",
    "183": "SELECT lat, lng FROM circuits WHERE circuitId = (SELECT circuitId FROM races WHERE name = 'Abu Dhabi Grand Prix');\t----- bird -----\tformula_1",
    "184": "SELECT q1 FROM qualifying q \nJOIN drivers d ON q.driverId = d.driverId \nWHERE d.forename = 'Bruno' AND d.surname = 'Senna' AND q.raceId = 354;\t----- bird -----\tformula_1",
    "185": "SELECT driverId FROM qualifying WHERE raceId = 903 AND q3 LIKE '0:01:54%';\t----- bird -----\tformula_1",
    "186": "SELECT COUNT(*) \nFROM results \nWHERE raceId = (SELECT raceId FROM races WHERE name = 'Bahrain Grand Prix' AND year = 2007) \nAND time IS NULL;\t----- bird -----\tformula_1",
    "187": "SELECT d.forename, d.surname, d.dob \nFROM results r \nJOIN drivers d ON r.driverId = d.driverId \nWHERE r.raceId = 592 AND r.time IS NOT NULL \nORDER BY d.dob ASC \nLIMIT 1;\t----- bird -----\tformula_1",
    "188": "SELECT d.url \nFROM lapTimes lt \nJOIN drivers d ON lt.driverId = d.driverId \nWHERE lt.time LIKE '0:01:27' AND lt.raceId = 161;\t----- bird -----\tformula_1",
    "189": "SELECT c.lat, c.lng \nFROM races r \nJOIN circuits c ON r.circuitId = c.circuitId \nWHERE r.name = 'Malaysian Grand Prix';\t----- bird -----\tformula_1",
    "190": "SELECT c.url\nFROM constructorResults cr\nJOIN constructors c ON cr.constructorId = c.constructorId\nWHERE cr.raceId = 9 AND cr.points = (SELECT MAX(points) FROM constructorResults WHERE raceId = 9);\t----- bird -----\tformula_1",
    "191": "SELECT d.code \nFROM qualifying q \nJOIN drivers d ON q.driverId = d.driverId \nWHERE q.raceId = 45 AND q.q3 LIKE '0:01:33%';\t----- bird -----\tformula_1",
    "192": "SELECT s.url \nFROM seasons s \nJOIN races r ON s.year = r.year \nWHERE r.raceId = 901;\t----- bird -----\tformula_1",
    "193": "SELECT driverId, dob \nFROM drivers \nJOIN results ON drivers.driverId = results.driverId \nWHERE results.raceId = 872 AND results.time IS NOT NULL \nORDER BY dob DESC \nLIMIT 1;\t----- bird -----\tformula_1",
    "194": "SELECT d.nationality\nFROM results r\nJOIN drivers d ON r.driverId = d.driverId\nWHERE r.fastestLapSpeed = (SELECT MAX(fastestLapSpeed) FROM results);\t----- bird -----\tformula_1",
    "195": "SELECT \n    (SELECT fastestLapSpeed FROM results \n     WHERE raceId = 853 \n     AND driverId = (SELECT driverId FROM drivers WHERE forename = 'Paul' AND surname = 'di Resta')) - \n    (SELECT fastestLapSpeed FROM results \n     WHERE raceId = 854 \n     AND driverId = (SELECT driverId FROM drivers WHERE forename = 'Paul' AND surname = 'di Resta')) AS speed_difference,\n    ((SELECT fastestLapSpeed FROM results \n      WHERE raceId = 853 \n      AND driverId = (SELECT driverId FROM drivers WHERE forename = 'Paul' AND surname = 'di Resta')) - \n    (SELECT fastestLapSpeed FROM results \n     WHERE raceId = 854 \n     AND driverId = (SELECT driverId FROM drivers WHERE forename = 'Paul' AND surname = 'di Resta'))) * 100.0 / \n    (SELECT fastestLapSpeed FROM results \n     WHERE raceId = 854 \n     AND driverId = (SELECT driverId FROM drivers WHERE forename = 'Paul' AND surname = 'di Resta')) AS percent_faster;\t----- bird -----\tformula_1",
    "196": "SELECT \n    (COUNT(CASE WHEN r.time IS NOT NULL THEN r.driverId END) * 100.0 / COUNT(r.driverId)) AS completion_rate\nFROM \n    results r\nJOIN \n    races ra ON r.raceId = ra.raceId\nWHERE \n    ra.date = '1983-07-16';\t----- bird -----\tformula_1",
    "197": "SELECT name \nFROM races \nWHERE year = (SELECT MIN(year) FROM races) \nAND strftime('%m', date) = (SELECT strftime('%m', MIN(date)) FROM races WHERE year = (SELECT MIN(year) FROM races));\t----- bird -----\tformula_1",
    "198": "SELECT d.forename, d.surname, MAX(ds.points) AS max_points\nFROM drivers d\nJOIN driverStandings ds ON d.driverId = ds.driverId\nGROUP BY d.driverId\nORDER BY max_points DESC\nLIMIT 1;\t----- bird -----\tformula_1",
    "199": "SELECT d.forename, d.surname, r.name \nFROM lapTimes lt \nJOIN drivers d ON lt.driverId = d.driverId \nJOIN races r ON lt.raceId = r.raceId \nWHERE lt.milliseconds = (SELECT MIN(milliseconds) FROM lapTimes);\t----- bird -----\tformula_1",
    "200": "SELECT AVG(lapTimes.milliseconds) AS average_lap_time\nFROM lapTimes\nJOIN races ON lapTimes.raceId = races.raceId\nJOIN drivers ON lapTimes.driverId = drivers.driverId\nWHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton' \nAND races.name = 'Malaysian Grand Prix';\t----- bird -----\tformula_1",
    "201": "SELECT \n    (COUNT(raceId) * 1.0 - COUNT(CASE WHEN results.position = 1 THEN 1 END)) * 100.0 / COUNT(raceId) AS percentage\nFROM results \nJOIN drivers ON results.driverId = drivers.driverId \nJOIN races ON results.raceId = races.raceId \nWHERE drivers.surname = 'Hamilton' AND races.year >= 2010;\t----- bird -----\tformula_1",
    "202": "SELECT d.forename || ' ' || d.surname AS driver_full_name, d.nationality, MAX(ds.points) AS max_points\nFROM drivers d\nJOIN driverStandings ds ON d.driverId = ds.driverId\nGROUP BY d.driverId\nHAVING SUM(ds.wins) = (SELECT MAX(total_wins)\n                       FROM (SELECT SUM(wins) AS total_wins\n                             FROM driverStandings\n                             GROUP BY driverId));\t----- bird -----\tformula_1",
    "203": "SELECT forename, surname, (strftime('%Y', 'now') - strftime('%Y', dob)) AS age \nFROM drivers \nWHERE nationality = 'Japanese' \nORDER BY dob DESC \nLIMIT 1;\t----- bird -----\tformula_1",
    "204": "SELECT races.name AS race_name, circuits.name AS circuit_name, circuits.location \nFROM races \nJOIN circuits ON races.circuitId = circuits.circuitId \nWHERE strftime('%Y', races.date) = '2005' AND strftime('%m', races.date) = '09';\t----- bird -----\tformula_1",
    "205": "SELECT r.name, r.date \nFROM results res \nJOIN drivers d ON res.driverId = d.driverId \nJOIN races r ON res.raceId = r.raceId \nWHERE d.forename = 'Alex' AND d.surname = 'Yoong' AND res.position < 20;\t----- bird -----\tformula_1",
    "206": "SELECT r.name, r.year \nFROM results res \nJOIN races r ON res.raceId = r.raceId \nJOIN drivers d ON res.driverId = d.driverId \nWHERE d.forename = 'Michael' AND d.surname = 'Schumacher' \nORDER BY res.fastestLapTime ASC \nLIMIT 1;\t----- bird -----\tformula_1",
    "207": "SELECT r.raceId, rs.points \nFROM results rs\nJOIN races r ON rs.raceId = r.raceId\nJOIN drivers d ON rs.driverId = d.driverId\nWHERE d.forename = 'Lewis' AND d.surname = 'Hamilton'\nORDER BY r.year, r.round\nLIMIT 1;\t----- bird -----\tformula_1",
    "208": "SELECT (COUNT(CASE WHEN circuits.country = 'Germany' THEN 1 END) * 100.0 / COUNT(*)) AS percentage \nFROM races \nJOIN circuits ON races.circuitId = circuits.circuitId \nWHERE races.name = 'European Grand Prix';\t----- bird -----\tformula_1",
    "209": "SELECT lat, lng FROM circuits WHERE name = 'Silverstone Circuit';\t----- bird -----\tformula_1",
    "210": "SELECT circuitRef FROM circuits WHERE name = 'Marina Bay Street Circuit';\t----- bird -----\tformula_1",
    "211": "SELECT nationality FROM drivers ORDER BY dob ASC LIMIT 1;\t----- bird -----\tformula_1",
    "212": "SELECT d.driverRef \nFROM results r \nJOIN races ra ON r.raceId = ra.raceId \nJOIN drivers d ON r.driverId = d.driverId \nWHERE ra.name = 'Canadian Grand Prix' AND ra.year = 2007 AND r.positionOrder = 1;\t----- bird -----\tformula_1",
    "213": "SELECT races.name, results.rank \nFROM results \nJOIN drivers ON results.driverId = drivers.driverId \nJOIN races ON results.raceId = races.raceId \nWHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton' \nORDER BY results.rank ASC \nLIMIT 1;\t----- bird -----\tformula_1",
    "214": "SELECT MAX(fastestLapSpeed) \nFROM results \nJOIN races ON results.raceId = races.raceId \nWHERE races.name = 'Spanish Grand Prix' AND races.year = 2009;\t----- bird -----\tformula_1",
    "215": "SELECT r.rank \nFROM results r \nJOIN drivers d ON r.driverId = d.driverId \nJOIN races ra ON r.raceId = ra.raceId \nWHERE d.forename = 'Lewis' AND d.surname = 'Hamilton' \nAND ra.name = 'Chinese Grand Prix' \nAND r.raceId IN (SELECT raceId FROM races WHERE year = 2008);\t----- bird -----\tformula_1",
    "216": "SELECT r.time \nFROM results res \nJOIN races r ON res.raceId = r.raceId \nWHERE r.name = 'Chinese Grand Prix' AND r.year = 2008 AND res.positionOrder = 2;\t----- bird -----\tformula_1",
    "217": "SELECT COUNT(DISTINCT d.driverId) \nFROM results r \nJOIN drivers d ON r.driverId = d.driverId \nWHERE r.raceId = (SELECT raceId FROM races WHERE year = 2008 AND name LIKE '%Chinese Grand Prix%') \nAND r.position IS NOT NULL;\t----- bird -----\tformula_1",
    "218": "SELECT \n    ((strftime('%s', (SELECT time FROM results WHERE raceId = (SELECT raceId FROM races WHERE year = 2008 AND round = 1) AND position = 1)) - strftime('%s', (SELECT time FROM results WHERE raceId = (SELECT raceId FROM races WHERE year = 2008 AND round = 1) AND position = (SELECT MAX(position) FROM results WHERE raceId = (SELECT raceId FROM races WHERE year = 2008 AND round = 1) AND time IS NOT NULL)))) / \n    strftime('%s', (SELECT time FROM results WHERE raceId = (SELECT raceId FROM races WHERE year = 2008 AND round = 1) AND position = (SELECT MAX(position) FROM results WHERE raceId = (SELECT raceId FROM races WHERE year = 2008 AND round = 1) AND time IS NOT NULL))) * 100) AS percentage_faster;\t----- bird -----\tformula_1",
    "219": "SELECT COUNT(*) FROM circuits WHERE country = 'Australia' AND location = 'Adelaide';\t----- bird -----\tformula_1",
    "220": "SELECT MAX(cs.points) \nFROM constructorStandings cs \nJOIN constructors c ON cs.constructorId = c.constructorId \nWHERE c.nationality = 'British';\t----- bird -----\tformula_1",
    "221": "SELECT c.name \nFROM constructors c \nJOIN constructorResults cr ON c.constructorId = cr.constructorId \nWHERE cr.raceId = 291 AND cr.points = 0;\t----- bird -----\tformula_1",
    "222": "SELECT COUNT(DISTINCT c.constructorId) \nFROM constructors c\nJOIN constructorResults cr ON c.constructorId = cr.constructorId\nWHERE c.nationality = 'Japanese' \nGROUP BY c.constructorId \nHAVING COUNT(DISTINCT cr.raceId) = 2 AND SUM(cr.points) = 0;\t----- bird -----\tformula_1",
    "223": "SELECT \n    (COUNT(r.time) * 100.0 / COUNT(r.driverId)) AS race_completion_percentage\nFROM \n    results AS r\nJOIN \n    drivers AS d ON r.driverId = d.driverId\nJOIN \n    races AS ra ON r.raceId = ra.raceId\nWHERE \n    d.nationality = 'Japanese' AND \n    ra.year BETWEEN 2007 AND 2009;\t----- bird -----\tformula_1",
    "224": "SELECT \n    year, \n    AVG(\n        (CAST(SUBSTR(time, 1, 2) AS INTEGER) * 3600) + \n         (CAST(SUBSTR(time, 4, 2) AS INTEGER) * 60) + \n         (CAST(SUBSTR(time, 7, 2) AS INTEGER) + \n         (CAST(SUBSTR(time, 10) AS INTEGER) / 1000))\n        )\n    ) AS average_time_seconds\nFROM \n    results \nJOIN \n    races ON results.raceId = races.raceId \nWHERE \n    statusId IS NOT NULL \n    AND year < 1975 \n    AND time IS NOT NULL \n    AND positionOrder = 1 \nGROUP BY \n    year;\t----- bird -----\tformula_1",
    "225": "SELECT fastestLap FROM results \nWHERE raceId IN (SELECT raceId FROM races WHERE year = 2009) \nAND driverId IN (SELECT driverId FROM driverStandings WHERE raceId IN (SELECT raceId FROM races WHERE year = 2009) ORDER BY points DESC LIMIT 1) \nORDER BY fastestLap;\t----- bird -----\tformula_1",
    "226": "SELECT AVG(fastestLapSpeed) \nFROM results \nJOIN races ON results.raceId = races.raceId \nWHERE races.name = 'Spanish Grand Prix' AND races.year = 2009;\t----- bird -----\tformula_1",
    "227": "SELECT \n    (COUNT(DISTINCT r.driverId) * 100.0 / NULLIF(COUNT(DISTINCT d.driverId), 0)) AS percentage\nFROM \n    results r\nJOIN \n    drivers d ON r.driverId = d.driverId\nWHERE \n    d.dob < '1985-01-01' \n    AND r.laps > 50 \n    AND r.raceId IN (\n        SELECT raceId \n        FROM races \n        WHERE year BETWEEN 2000 AND 2005\n    );\t----- bird -----\tformula_1",
    "228": "SELECT COUNT(DISTINCT d.driverId) \nFROM drivers d \nJOIN lapTimes l ON d.driverId = l.driverId \nWHERE d.nationality = 'French' AND l.milliseconds < 120000;\t----- bird -----\tformula_1",
    "229": "SELECT driverId, driverRef, forename, surname FROM drivers WHERE nationality = 'American';\t----- bird -----\tformula_1",
    "230": "SELECT driverId, code FROM drivers WHERE driverId IN (SELECT driverId FROM drivers ORDER BY dob DESC LIMIT 3); \nSELECT COUNT(*) FROM drivers WHERE nationality = 'Netherlands' AND driverId IN (SELECT driverId FROM drivers ORDER BY dob DESC LIMIT 3);\t----- bird -----\tformula_1",
    "231": "SELECT driverRef FROM drivers WHERE nationality = 'German' ORDER BY dob ASC LIMIT 1;\t----- bird -----\tformula_1",
    "232": "SELECT d.driverId, d.code \nFROM drivers d \nJOIN results r ON d.driverId = r.driverId \nWHERE strftime('%Y', d.dob) = '1971' AND r.fastestLapTime IS NOT NULL;\t----- bird -----\tformula_1",
    "233": "SELECT COUNT(*) \nFROM results \nWHERE raceId > 50 AND raceId < 100 \n  AND statusId = 2 \n  AND time IS NOT NULL;\t----- bird -----\tformula_1",
    "234": "SELECT COUNT(circuitId) AS timesHeld, location, lat, lng \nFROM circuits \nWHERE country = 'Austria' \nGROUP BY location, lat, lng;\t----- bird -----\tformula_1",
    "235": "SELECT d.forename, d.surname, MIN(r.date) AS first_qualifying_date, r.time, strftime('%Y', d.dob) AS birth_year\nFROM drivers d\nJOIN qualifying q ON d.driverId = q.driverId\nJOIN races r ON q.raceId = r.raceId\nGROUP BY d.driverId\nORDER BY d.dob DESC\nLIMIT 1;\t----- bird -----\tformula_1",
    "236": "SELECT d.forename || ' ' || d.surname AS full_name, \n       AVG(ps.milliseconds) / 1000.0 AS avg_pit_stop_duration\nFROM drivers d\nJOIN pitStops ps ON d.driverId = ps.driverId\nWHERE d.nationality = 'German' \n  AND strftime('%Y', d.dob) BETWEEN '1980' AND '1985'\nGROUP BY d.driverId\nORDER BY avg_pit_stop_duration\nLIMIT 3;\t----- bird -----\tformula_1",
    "237": "SELECT d.forename || ' ' || d.surname AS champion, r.time\nFROM results r\nJOIN races ra ON r.raceId = ra.raceId\nJOIN drivers d ON r.driverId = d.driverId\nWHERE ra.year = 2008 AND ra.name = 'Canadian Grand Prix' AND r.positionOrder = 1;\t----- bird -----\tformula_1",
    "238": "SELECT c.constructorRef, c.url \nFROM results r \nJOIN constructors c ON r.constructorId = c.constructorId \nJOIN races ra ON r.raceId = ra.raceId \nWHERE ra.year = 2009 AND ra.name = 'Singapore Grand Prix' \nAND r.time = (SELECT MAX(time) FROM results WHERE raceId = r.raceId);\t----- bird -----\tformula_1",
    "239": "SELECT sp.power_name \nFROM superhero s \nJOIN hero_power hp ON s.id = hp.hero_id \nJOIN superpower sp ON hp.power_id = sp.id \nWHERE s.superhero_name = '3-D Man';\t----- bird -----\tsuperhero",
    "240": "SELECT SUM(cs.points) AS total_points, c.name, c.nationality \nFROM constructorStandings cs\nJOIN races r ON cs.raceId = r.raceId\nJOIN constructors c ON cs.constructorId = c.constructorId\nWHERE r.year BETWEEN 1980 AND 2010 AND r.name = 'Monaco Grand Prix'\nGROUP BY cs.constructorId\nORDER BY total_points DESC\nLIMIT 1;\t----- bird -----\tformula_1",
    "241": "SELECT d.forename || ' ' || d.surname AS full_name \nFROM qualifying q\nJOIN races r ON q.raceId = r.raceId\nJOIN drivers d ON q.driverId = d.driverId\nWHERE r.year = 2008 AND r.round = 3 AND q.q3 IS NOT NULL\nORDER BY q.q3 \nLIMIT 1;\t----- bird -----\tformula_1",
    "242": "SELECT d.forename || ' ' || d.surname AS full_name, d.nationality, r.name AS first_race\nFROM drivers d\nJOIN results res ON d.driverId = res.driverId\nJOIN races r ON res.raceId = r.raceId\nWHERE d.dob = (SELECT MAX(dob) FROM drivers)\nLIMIT 1;\t----- bird -----\tformula_1",
    "243": "SELECT driverId, COUNT(*) AS accidents \nFROM results \nWHERE raceId = (SELECT raceId FROM races WHERE name = 'Canadian Grand Prix') \nAND statusId = 3 \nGROUP BY driverId \nORDER BY accidents DESC \nLIMIT 1;\t----- bird -----\tformula_1",
    "244": "SELECT d.forename || ' ' || d.surname AS full_name\nFROM lapTimes lt\nJOIN drivers d ON lt.driverId = d.driverId\nWHERE lt.time IS NOT NULL\nORDER BY lt.milliseconds ASC\nLIMIT 20;\t----- bird -----\tformula_1",
    "245": "SELECT l.raceId, l.driverId, l.lap, l.time, l.milliseconds, c.circuitRef, c.name, c.country\nFROM lapTimes l\nJOIN races r ON l.raceId = r.raceId\nJOIN circuits c ON r.circuitId = c.circuitId\nWHERE c.country = 'Italy'\nORDER BY l.milliseconds ASC;\t----- bird -----\tformula_1",
    "246": "SELECT COUNT(*) \nFROM superhero s\nJOIN hero_power hp ON s.id = hp.hero_id\nJOIN superpower sp ON hp.power_id = sp.id\nWHERE sp.power_name = 'Super Strength' AND s.height_cm > 200;\t----- bird -----\tsuperhero",
    "247": "SELECT COUNT(DISTINCT h.id) \nFROM superhero h \nJOIN colour c ON h.eye_colour_id = c.id \nJOIN hero_power hp ON h.id = hp.hero_id \nJOIN superpower sp ON hp.power_id = sp.id \nWHERE c.colour = 'Blue' AND sp.power_name = 'Agility';\t----- bird -----\tsuperhero",
    "248": "SELECT superhero_name \nFROM superhero \nWHERE eye_colour_id = (SELECT id FROM colour WHERE colour = 'Blue') \nAND hair_colour_id = (SELECT id FROM colour WHERE colour = 'Blond');\t----- bird -----\tsuperhero",
    "249": "SELECT superhero.superhero_name, superhero.height_cm\nFROM superhero\nJOIN publisher ON superhero.publisher_id = publisher.id\nWHERE publisher.publisher_name = 'Marvel Comics'\nORDER BY superhero.height_cm DESC;\t----- bird -----\tsuperhero",
    "250": "SELECT c.colour, COUNT(s.id) AS superhero_count \nFROM superhero s\nJOIN publisher p ON s.publisher_id = p.id\nJOIN colour c ON s.eye_colour_id = c.id\nWHERE p.publisher_name = 'Marvel Comics'\nGROUP BY c.colour\nORDER BY superhero_count DESC;\t----- bird -----\tsuperhero",
    "251": "SELECT s.superhero_name, s.full_name \nFROM superhero s\nJOIN publisher p ON s.publisher_id = p.id\nJOIN hero_power hp ON s.id = hp.hero_id\nJOIN superpower sp ON hp.power_id = sp.id\nWHERE p.publisher_name = 'Marvel Comics' AND sp.power_name = 'Super Strength';\t----- bird -----\tsuperhero",
    "252": "SELECT p.publisher_name \nFROM publisher p\nJOIN superhero s ON p.id = s.publisher_id\nJOIN hero_attribute ha ON s.id = ha.hero_id\nWHERE ha.attribute_id = (SELECT id FROM attribute WHERE attribute_name = 'Speed') \nORDER BY ha.attribute_value ASC \nLIMIT 1;\t----- bird -----\tsuperhero",
    "253": "SELECT COUNT(*) \nFROM superhero s \nJOIN colour c ON s.eye_colour_id = c.id \nWHERE c.colour = 'Gold' \nAND s.publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics');\t----- bird -----\tsuperhero",
    "254": "SELECT s.superhero_name, ha.attribute_value \nFROM superhero s\nJOIN hero_attribute ha ON s.id = ha.hero_id\nJOIN attribute a ON ha.attribute_id = a.id\nWHERE a.attribute_name = 'Intelligence'\nORDER BY ha.attribute_value ASC\nLIMIT 1;\t----- bird -----\tsuperhero",
    "255": "SELECT r.race \nFROM superhero s \nJOIN race r ON s.race_id = r.id \nWHERE s.superhero_name = 'Copycat';\t----- bird -----\tsuperhero",
    "256": "SELECT h.superhero_name, h.full_name \nFROM superhero h\nJOIN hero_attribute ha ON h.id = ha.hero_id\nJOIN attribute a ON ha.attribute_id = a.id\nWHERE a.attribute_name = 'Durability' AND ha.attribute_value < 50;\t----- bird -----\tsuperhero",
    "257": "SELECT s.superhero_name \nFROM superhero s \nJOIN hero_power hp ON s.id = hp.hero_id \nJOIN superpower sp ON hp.power_id = sp.id \nWHERE sp.power_name = 'Death Touch';\t----- bird -----\tsuperhero",
    "258": "SELECT COUNT(DISTINCT h.id) \nFROM superhero h \nJOIN gender g ON h.gender_id = g.id \nJOIN hero_attribute ha ON h.id = ha.hero_id \nJOIN attribute a ON ha.attribute_id = a.id \nWHERE g.gender = 'Female' AND a.attribute_name = 'Strength' AND ha.attribute_value = 100;\t----- bird -----\tsuperhero",
    "259": "SELECT \n    (COUNT(CASE WHEN a.alignment = 'Bad' THEN 1 END) * 100.0) / COUNT(s.id) AS percentage_bad_superheroes,\n    COUNT(CASE WHEN a.alignment = 'Bad' AND p.publisher_name = 'Marvel Comics' THEN 1 END) AS marvel_bad_superheroes\nFROM \n    superhero s\nJOIN \n    alignment a ON s.alignment_id = a.id\nJOIN \n    publisher p ON s.publisher_id = p.id;\t----- bird -----\tsuperhero",
    "260": "SELECT \n    SUM(publisher_name = 'Marvel Comics') - SUM(publisher_name = 'DC Comics') AS difference\nFROM \n    superhero\nJOIN \n    publisher ON superhero.publisher_id = publisher.id;\t----- bird -----\tsuperhero",
    "261": "SELECT id FROM publisher WHERE publisher_name = 'Star Trek';\t----- bird -----\tsuperhero",
    "262": "SELECT COUNT(*) FROM superhero WHERE full_name IS NULL;\t----- bird -----\tsuperhero",
    "263": "SELECT AVG(weight_kg) \nFROM superhero \nWHERE gender_id = (SELECT id FROM gender WHERE gender = 'Female');\t----- bird -----\tsuperhero",
    "264": "SELECT DISTINCT sp.power_name \nFROM superhero s \nJOIN hero_power hp ON s.id = hp.hero_id \nJOIN superpower sp ON hp.power_id = sp.id \nWHERE s.gender_id = (SELECT id FROM gender WHERE gender = 'Male') \nLIMIT 5;\t----- bird -----\tsuperhero",
    "265": "SELECT superhero_name \nFROM superhero \nWHERE height_cm BETWEEN 170 AND 190 \nAND eye_colour_id IS NULL;\t----- bird -----\tsuperhero",
    "266": "SELECT c.colour \nFROM superhero s \nJOIN race r ON s.race_id = r.id \nJOIN colour c ON s.hair_colour_id = c.id \nWHERE s.height_cm = 185 AND r.race = 'human';\t----- bird -----\tsuperhero",
    "267": "SELECT \n    (SUM(CASE WHEN publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics') THEN 1 ELSE 0 END) * 100.0) / COUNT(*) AS percentage\nFROM \n    superhero\nWHERE \n    height_cm BETWEEN 150 AND 180;\t----- bird -----\tsuperhero",
    "268": "SELECT sh.superhero_name \nFROM superhero sh \nJOIN gender g ON sh.gender_id = g.id \nWHERE g.gender = 'Male' AND sh.weight_kg > (SELECT AVG(weight_kg) * 0.79 FROM superhero);\t----- bird -----\tsuperhero",
    "269": "SELECT sp.power_name \nFROM hero_power hp \nJOIN superpower sp ON hp.power_id = sp.id \nWHERE hp.hero_id = 1;\t----- bird -----\tsuperhero",
    "270": "SELECT COUNT(DISTINCT hero_id) FROM hero_power WHERE power_id = (SELECT id FROM superpower WHERE power_name = 'Stealth');\t----- bird -----\tsuperhero",
    "271": "SELECT sh.full_name \nFROM superhero sh \nJOIN hero_attribute ha ON sh.id = ha.hero_id \nJOIN attribute a ON ha.attribute_id = a.id \nWHERE a.attribute_name = 'strength' \nAND ha.attribute_value = (SELECT MAX(attribute_value) \n                          FROM hero_attribute \n                          JOIN attribute ON hero_attribute.attribute_id = attribute.id \n                          WHERE attribute.attribute_name = 'strength');\t----- bird -----\tsuperhero",
    "272": "SELECT s.superhero_name\nFROM superhero s\nJOIN publisher p ON s.publisher_id = p.id\nJOIN hero_attribute ha ON s.id = ha.hero_id\nJOIN attribute a ON ha.attribute_id = a.id\nWHERE a.attribute_name = 'durability' AND p.publisher_name = 'Dark Horse Comics'\nORDER BY ha.attribute_value DESC\nLIMIT 1;\t----- bird -----\tsuperhero",
    "273": "SELECT c1.colour AS eye_colour, c2.colour AS hair_colour, c3.colour AS skin_colour \nFROM superhero s\nJOIN gender g ON s.gender_id = g.id\nJOIN publisher p ON s.publisher_id = p.id\nJOIN colour c1 ON s.eye_colour_id = c1.id\nJOIN colour c2 ON s.hair_colour_id = c2.id\nJOIN colour c3 ON s.skin_colour_id = c3.id\nWHERE g.gender = 'Female' AND p.publisher_name = 'Dark Horse Comics';\t----- bird -----\tsuperhero",
    "274": "SELECT s.superhero_name, p.publisher_name\nFROM superhero s\nJOIN publisher p ON s.publisher_id = p.id\nWHERE s.hair_colour_id = s.skin_colour_id AND s.hair_colour_id = s.eye_colour_id;\t----- bird -----\tsuperhero",
    "275": "SELECT \n    (SUM(CASE WHEN c.colour = 'Blue' THEN 1 ELSE 0 END) * 100.0) / COUNT(*) AS percentage_blue_female_superheroes\nFROM \n    superhero s\nJOIN \n    gender g ON s.gender_id = g.id\nJOIN \n    colour c ON s.skin_colour_id = c.id\nWHERE \n    g.gender = 'Female';\t----- bird -----\tsuperhero",
    "276": "SELECT COUNT(*) \nFROM hero_power \nWHERE hero_id = (SELECT id FROM superhero WHERE superhero_name = 'Amazo');\t----- bird -----\tsuperhero",
    "277": "SELECT height_cm \nFROM superhero \nWHERE eye_colour_id = (SELECT id FROM colour WHERE colour = 'Amber');\t----- bird -----\tsuperhero",
    "278": "SELECT superhero_name \nFROM superhero \nJOIN colour AS eye_colour ON superhero.eye_colour_id = eye_colour.id \nJOIN colour AS hair_colour ON superhero.hair_colour_id = hair_colour.id \nWHERE eye_colour.colour = 'Black' AND hair_colour.colour = 'Black';\t----- bird -----\tsuperhero",
    "279": "SELECT superhero_name FROM superhero JOIN alignment ON superhero.alignment_id = alignment.id WHERE alignment.alignment = 'Neutral';\t----- bird -----\tsuperhero",
    "280": "SELECT COUNT(DISTINCT hero_id) \nFROM hero_attribute \nWHERE attribute_id = (SELECT id FROM attribute WHERE attribute_name = 'Strength') \nAND attribute_value = (SELECT MAX(attribute_value) FROM hero_attribute WHERE attribute_id = (SELECT id FROM attribute WHERE attribute_name = 'Strength'));\t----- bird -----\tsuperhero",
    "281": "SELECT \n    (SUM(CASE WHEN g.gender = 'Female' THEN 1 ELSE 0 END) * 100.0) / COUNT(p.publisher_name) AS female_percentage\nFROM \n    publisher p\nJOIN \n    superhero s ON p.id = s.publisher_id\nJOIN \n    gender g ON s.gender_id = g.id\nWHERE \n    p.publisher_name = 'Marvel Comics';\t----- bird -----\tsuperhero",
    "282": "SELECT \n    (SUM(weight_kg) FILTER (WHERE full_name = 'Emil Blonsky') - SUM(weight_kg) FILTER (WHERE full_name = 'Charles Chandler')) AS weight_difference\nFROM \n    superhero;\t----- bird -----\tsuperhero",
    "283": "SELECT AVG(height_cm) AS average_height FROM superhero;\t----- bird -----\tsuperhero",
    "284": "SELECT sp.power_name \nFROM superhero s \nJOIN hero_power hp ON s.id = hp.hero_id \nJOIN superpower sp ON hp.power_id = sp.id \nWHERE s.superhero_name = 'Abomination';\t----- bird -----\tsuperhero",
    "285": "SELECT s.superhero_name \nFROM superhero s \nJOIN hero_attribute ha ON s.id = ha.hero_id \nJOIN attribute a ON ha.attribute_id = a.id \nWHERE a.attribute_name = 'Speed' \nORDER BY ha.attribute_value DESC \nLIMIT 1;\t----- bird -----\tsuperhero",
    "286": "SELECT a.attribute_name, ha.attribute_value \nFROM superhero s \nJOIN hero_attribute ha ON s.id = ha.hero_id \nJOIN attribute a ON ha.attribute_id = a.id \nWHERE s.superhero_name = '3-D Man';\t----- bird -----\tsuperhero",
    "287": "SELECT superhero_name \nFROM superhero \nJOIN colour AS eye_color ON superhero.eye_colour_id = eye_color.id \nJOIN colour AS hair_color ON superhero.hair_colour_id = hair_color.id \nWHERE eye_color.colour = 'Blue' AND hair_color.colour = 'Brown';\t----- bird -----\tsuperhero",
    "288": "SELECT p.publisher_name \nFROM superhero s\nJOIN publisher p ON s.publisher_id = p.id\nWHERE s.superhero_name IN ('Hawkman', 'Karate Kid', 'Speedy');\t----- bird -----\tsuperhero",
    "289": "SELECT (COUNT(*) FILTER (WHERE eye_colour.colour = 'Blue') * 100.0 / COUNT(*)) AS blue_eye_percentage \nFROM superhero \nJOIN colour AS eye_colour ON superhero.eye_colour_id = eye_colour.id;\t----- bird -----\tsuperhero",
    "290": "SELECT \n    SUM(gender_id = (SELECT id FROM gender WHERE gender = 'Male')) * 1.0 / \n    NULLIF(SUM(gender_id = (SELECT id FROM gender WHERE gender = 'Female')), 0) AS ratio \nFROM \n    superhero;\t----- bird -----\tsuperhero",
    "291": "SELECT colour.colour \nFROM superhero \nJOIN colour ON superhero.eye_colour_id = colour.id \nWHERE superhero.full_name = 'Karen Beecher-Duncan';\t----- bird -----\tsuperhero",
    "292": "SELECT \n    (SUM(CASE WHEN eye_colour_id = 7 THEN 1 ELSE 0 END) - \n    SUM(CASE WHEN eye_colour_id IS NULL THEN 1 ELSE 0 END)) AS difference\nFROM superhero\nWHERE weight_kg IS NULL OR weight_kg = 0;\t----- bird -----\tsuperhero",
    "293": "SELECT COUNT(*) \nFROM superhero \nJOIN colour ON superhero.skin_colour_id = colour.id \nJOIN alignment ON superhero.alignment_id = alignment.id \nWHERE colour.colour = 'Green' AND alignment.alignment = 'Bad';\t----- bird -----\tsuperhero",
    "294": "SELECT DISTINCT s.superhero_name\nFROM superhero s\nJOIN hero_power hp ON s.id = hp.hero_id\nJOIN superpower sp ON hp.power_id = sp.id\nWHERE sp.power_name = 'Wind Control'\nORDER BY s.superhero_name;\t----- bird -----\tsuperhero",
    "295": "SELECT g.gender \nFROM superhero s \nJOIN hero_power hp ON s.id = hp.hero_id \nJOIN superpower sp ON hp.power_id = sp.id \nJOIN gender g ON s.gender_id = g.id \nWHERE sp.power_name = 'Phoenix Force';\t----- bird -----\tsuperhero",
    "296": "SELECT \n    (SELECT COUNT(*) FROM superhero s JOIN publisher p ON s.publisher_id = p.id WHERE p.publisher_name = 'DC Comics') - \n    (SELECT COUNT(*) FROM superhero s JOIN publisher p ON s.publisher_id = p.id WHERE p.publisher_name = 'Marvel Comics') AS difference;\t----- bird -----\tsuperhero",
    "297": "SELECT DisplayName, MAX(Reputation) AS MaxReputation \nFROM users \nWHERE DisplayName IN ('Harlan', 'Jarrod Dixon') \nGROUP BY DisplayName \nORDER BY MaxReputation DESC \nLIMIT 1;\t----- bird -----\tcodebase_community",
    "298": "SELECT DisplayName FROM users WHERE strftime('%Y', CreationDate) = '2011';\t----- bird -----\tcodebase_community",
    "299": "SELECT COUNT(*) FROM users WHERE LastAccessDate > '2014-09-01';\t----- bird -----\tcodebase_community",
    "300": "SELECT u.DisplayName \nFROM posts p \nJOIN users u ON p.OwnerUserId = u.Id \nWHERE p.Title = 'Eliciting priors from experts';\t----- bird -----\tcodebase_community",
    "301": "SELECT COUNT(*) \nFROM posts \nWHERE OwnerUserId = (SELECT Id FROM users WHERE DisplayName = 'csgillespie');\t----- bird -----\tcodebase_community",
    "302": "SELECT LastEditorDisplayName FROM posts WHERE Title = 'Examples for teaching: Correlation does not mean causation';\t----- bird -----\tcodebase_community",
    "303": "SELECT COUNT(*) \nFROM posts \nWHERE OwnerUserId IN (SELECT Id FROM users WHERE Age > 65) \nAND Score >= 20;\t----- bird -----\tcodebase_community",
    "304": "SELECT p.Body \nFROM posts p \nJOIN tags t ON p.Id = t.ExcerptPostId \nWHERE t.TagName = 'bayesian';\t----- bird -----\tcodebase_community",
    "305": "SELECT AVG(p.Score) \nFROM posts p \nJOIN users u ON p.OwnerUserId = u.Id \nWHERE u.DisplayName = 'csgillespie';\t----- bird -----\tcodebase_community",
    "306": "SELECT \n    (COUNT(CASE WHEN u.Age > 65 THEN p.Id END) * 100.0 / COUNT(p.Id)) AS elder_user_percentage\nFROM \n    posts p\nJOIN \n    users u ON p.OwnerUserId = u.Id\nWHERE \n    p.Score > 5;\t----- bird -----\tcodebase_community",
    "307": "SELECT FavoriteCount \nFROM posts \nWHERE Id = (SELECT PostId \n            FROM comments \n            WHERE UserId = 3025 \n            AND CreationDate = '2014/4/23 20:29:39.0');\t----- bird -----\tcodebase_community",
    "308": "SELECT CASE WHEN p.ClosedDate IS NULL THEN 'Yes' ELSE 'No' END AS WellFinished\nFROM comments c\nJOIN posts p ON c.PostId = p.Id\nWHERE c.UserId = 23853 AND c.CreationDate = '2013-07-12 09:08:18';\t----- bird -----\tcodebase_community",
    "309": "SELECT COUNT(*) \nFROM posts \nWHERE OwnerUserId = (SELECT Id FROM users WHERE DisplayName = 'Tiago Pasqualini');\t----- bird -----\tcodebase_community",
    "310": "SELECT DisplayName FROM users INNER JOIN votes ON users.Id = votes.UserId WHERE votes.Id = 6347;\t----- bird -----\tcodebase_community",
    "311": "SELECT COUNT(posts.Id) * 1.0 / COUNT(votes.Id) AS PostToVoteRatio \nFROM posts \nLEFT JOIN votes ON posts.Id = votes.PostId \nWHERE posts.OwnerUserId = 24;\t----- bird -----\tcodebase_community",
    "312": "SELECT ViewCount FROM posts WHERE Title = 'Integration of Weka and/or RapidMiner into Informatica PowerCenter/Developer';\t----- bird -----\tcodebase_community",
    "313": "SELECT Text FROM comments WHERE Score = 17;\t----- bird -----\tcodebase_community",
    "314": "SELECT UserDisplayName FROM comments WHERE Text = 'thank you user93!';\t----- bird -----\tcodebase_community",
    "315": "SELECT u.DisplayName, u.Reputation \nFROM posts p \nJOIN users u ON p.OwnerUserId = u.Id \nWHERE p.Title = 'Understanding what Dassault iSight is doing?';\t----- bird -----\tcodebase_community",
    "316": "SELECT u.DisplayName \nFROM posts p \nJOIN users u ON p.OwnerUserId = u.Id \nWHERE p.Title = 'Open source tools for visualizing multi-dimensional data?';\t----- bird -----\tcodebase_community",
    "317": "SELECT c.Text \nFROM comments c\nJOIN posts p ON c.PostId = p.Id\nWHERE p.Title = 'Why square the difference instead of taking the absolute value in standard deviation?'\t----- bird -----\tcodebase_community",
    "318": "SELECT u.DisplayName \nFROM votes v \nJOIN posts p ON v.PostId = p.Id \nJOIN users u ON v.UserId = u.Id \nWHERE v.BountyAmount = 50 AND p.Title LIKE '%variance%';\t----- bird -----\tcodebase_community",
    "319": "SELECT p.Title, c.Text, AVG(p.ViewCount) AS AverageViewCount\nFROM posts p\nJOIN tags t ON t.Id = p.Tags\nJOIN comments c ON c.PostId = p.Id\nWHERE t.TagName = 'humor'\nGROUP BY p.Id, c.Id;\t----- bird -----\tcodebase_community",
    "320": "SELECT COUNT(DISTINCT UserId) \nFROM badges \nGROUP BY UserId \nHAVING COUNT(Name) > 5;\t----- bird -----\tcodebase_community",
    "321": "SELECT ph.UserId\nFROM postHistory ph\nJOIN posts p ON ph.PostId = p.Id\nGROUP BY ph.PostId, ph.UserId\nHAVING COUNT(ph.Id) = 1 AND p.ViewCount >= 1000;\t----- bird -----\tcodebase_community",
    "322": "SELECT \n    (COUNT(CASE WHEN strftime('%Y', Date) = '2010' AND Name = 'Student' THEN 1 END) * 100.0 / COUNT(CASE WHEN Name = 'Student' THEN 1 END)) - \n    (COUNT(CASE WHEN strftime('%Y', Date) = '2011' AND Name = 'Student' THEN 1 END) * 100.0 / COUNT(CASE WHEN Name = 'Student' THEN 1 END)) AS PercentageDifference \nFROM badges;\t----- bird -----\tcodebase_community",
    "323": "SELECT AVG(u.UpVotes) AS AverageUpVotes, AVG(u.Age) AS AverageAge \nFROM users u \nJOIN (\n    SELECT OwnerUserId, COUNT(*) AS PostCount \n    FROM posts \n    GROUP BY OwnerUserId \n    HAVING COUNT(*) > 10\n) AS postCounts ON u.Id = postCounts.OwnerUserId;\t----- bird -----\tcodebase_community",
    "324": "SELECT \n    COUNT(CASE WHEN strftime('%Y', CreationDate) = '2010' THEN Id END) * 1.0 / \n    COUNT(CASE WHEN strftime('%Y', CreationDate) = '2011' THEN Id END) AS VoteRatio \nFROM votes;\t----- bird -----\tcodebase_community",
    "325": "SELECT Id FROM posts WHERE OwnerUserId = (SELECT Id FROM users WHERE DisplayName = 'slashnick') ORDER BY AnswerCount DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "326": "SELECT MAX(ViewCount) AS MaxViewCount \nFROM posts \nWHERE OwnerUserId IN (SELECT Id FROM users WHERE DisplayName IN ('Harvey Motulsky', 'Noah Snyder')) \nGROUP BY OwnerUserId;\t----- bird -----\tcodebase_community",
    "327": "SELECT t.TagName \nFROM tags t \nJOIN posts p ON t.ExcerptPostId = p.Id \nJOIN users u ON p.OwnerUserId = u.Id \nWHERE u.DisplayName = 'Mark Meckes' AND p.CommentCount = 0;\t----- bird -----\tcodebase_community",
    "328": "SELECT \n    (COUNT(CASE WHEN t.TagName = 'r' THEN p.Id END) * 100.0 / COUNT(p.Id)) AS percentage\nFROM \n    posts p\nJOIN \n    users u ON p.OwnerUserId = u.Id\nJOIN \n    tags t ON p.Tags LIKE '%' || t.TagName || '%'\nWHERE \n    u.DisplayName = 'Community';\t----- bird -----\tcodebase_community",
    "329": "SELECT \n    (SELECT SUM(ViewCount) FROM posts INNER JOIN users ON posts.OwnerUserId = users.Id WHERE users.DisplayName = 'Mornington') - \n    (SELECT SUM(ViewCount) FROM posts INNER JOIN users ON posts.OwnerUserId = users.Id WHERE users.DisplayName = 'Amos') AS ViewCountDifference;\t----- bird -----\tcodebase_community",
    "330": "SELECT COUNT(Id) / 12.0 AS AverageMonthlyLinks\nFROM postLinks\nWHERE strftime('%Y', CreationDate) = '2010' AND PostId IN (\n    SELECT Id FROM posts WHERE AnswerCount <= 2\n);\t----- bird -----\tcodebase_community",
    "331": "SELECT MIN(CreationDate) \nFROM votes \nWHERE UserId = (SELECT Id FROM users WHERE DisplayName = 'chl');\t----- bird -----\tcodebase_community",
    "332": "SELECT u.DisplayName \nFROM badges b \nJOIN users u ON b.UserId = u.Id \nWHERE b.Name = 'Autobiographer' \nORDER BY b.Date \nLIMIT 1;\t----- bird -----\tcodebase_community",
    "333": "SELECT COUNT(DISTINCT u.Id) \nFROM users u \nJOIN posts p ON u.Id = p.OwnerUserId \nWHERE u.Location = 'United Kingdom' AND p.FavoriteCount >= 4;\t----- bird -----\tcodebase_community",
    "334": "SELECT Id, Title \nFROM posts \nWHERE OwnerUserId = (SELECT Id FROM users WHERE DisplayName = 'Harvey Motulsky') \nORDER BY ViewCount DESC \nLIMIT 1;\t----- bird -----\tcodebase_community",
    "335": "SELECT Id, OwnerDisplayName \nFROM posts \nWHERE FavoriteCount = (SELECT MAX(FavoriteCount) \n                       FROM posts \n                       WHERE strftime('%Y', CreaionDate) = '2010');\t----- bird -----\tcodebase_community",
    "336": "SELECT (COUNT(p.Id) * 100.0 / (SELECT COUNT(*) FROM posts)) AS percentage\nFROM posts p\nJOIN users u ON p.OwnerUserId = u.Id\nWHERE strftime('%Y', p.CreaionDate) = '2011' AND u.Reputation > 1000;\t----- bird -----\tcodebase_community",
    "337": "SELECT p.ViewCount, u.DisplayName \nFROM posts p \nJOIN users u ON p.LastEditorUserId = u.Id \nWHERE p.Title = 'Computer Game Datasets';\t----- bird -----\tcodebase_community",
    "338": "SELECT COUNT(*) \nFROM comments \nWHERE PostId = (SELECT Id FROM posts ORDER BY Score DESC LIMIT 1);\t----- bird -----\tcodebase_community",
    "339": "SELECT c.Text, c.UserDisplayName \nFROM comments c \nJOIN posts p ON c.PostId = p.Id \nWHERE p.Title = 'Analysing wind data with R' \nORDER BY c.CreationDate DESC \nLIMIT 10;\t----- bird -----\tcodebase_community",
    "340": "SELECT \n    (COUNT(CASE WHEN p.Score > 50 THEN 1 END) * 100.0 / COUNT(*)) AS Percentage\nFROM \n    posts p\nJOIN \n    users u ON p.OwnerUserId = u.Id\nWHERE \n    u.Reputation = (SELECT MAX(Reputation) FROM users);\t----- bird -----\tcodebase_community",
    "341": "SELECT ExcerptPostId, WikiPostId FROM tags WHERE TagName = 'sample';\t----- bird -----\tcodebase_community",
    "342": "SELECT u.Reputation, u.UpVotes \nFROM users u \nJOIN comments c ON u.Id = c.UserId \nWHERE c.Text = 'fine, you win :)';\t----- bird -----\tcodebase_community",
    "343": "SELECT c.Text \nFROM comments c \nJOIN posts p ON c.PostId = p.Id \nWHERE p.ViewCount BETWEEN 100 AND 150 \nORDER BY c.Score DESC \nLIMIT 1;\t----- bird -----\tcodebase_community",
    "344": "SELECT COUNT(*) \nFROM comments \nWHERE PostId IN (\n    SELECT Id \n    FROM posts \n    WHERE CommentCount = 1\n) AND Score = 0;\t----- bird -----\tcodebase_community",
    "345": "SELECT \n    (COUNT(DISTINCT c.UserId) * 100.0 / NULLIF(COUNT(DISTINCT c.UserId), 0)) AS Percentage\nFROM \n    comments c\nJOIN \n    users u ON c.UserId = u.Id\nWHERE \n    c.Score BETWEEN 5 AND 10 AND u.UpVotes = 0;\t----- bird -----\tcodebase_community",
    "346": "SELECT * FROM cards WHERE cardKingdomFoilId IS NOT NULL AND cardKingdomId IS NOT NULL;\t----- bird -----\tcard_games",
    "347": "SELECT * FROM cards WHERE borderColor = 'borderless' AND (cardKingdomFoilId IS NULL OR cardKingdomId IS NULL);\t----- bird -----\tcard_games",
    "348": "SELECT DISTINCT cards.name\nFROM cards\nJOIN legalities ON cards.uuid = legalities.uuid\nWHERE cards.rarity = 'mythic' AND legalities.status = 'Banned' AND legalities.format = 'gladiator';\t----- bird -----\tcard_games",
    "349": "SELECT l.status \nFROM cards c \nJOIN legalities l ON c.uuid = l.uuid \nWHERE c.types = 'Artifact' AND c.side IS NULL AND l.format = 'vintage';\t----- bird -----\tcard_games",
    "350": "SELECT c.id, c.artist \nFROM cards c \nJOIN legalities l ON c.uuid = l.uuid \nWHERE (c.power = '*' OR c.power IS NULL) \nAND l.format = 'commander' \nAND l.status = 'Legal';\t----- bird -----\tcard_games",
    "351": "SELECT c.id, r.text, \n       CASE WHEN c.hasContentWarning = 1 THEN 'Missing or degraded properties' ELSE 'No issues' END AS properties_status\nFROM cards c\nLEFT JOIN rulings r ON c.uuid = r.uuid\nWHERE c.artist = 'Stephen Daniele';\t----- bird -----\tcard_games",
    "352": "SELECT c.name, c.artist, COUNT(r.uuid) as ruling_count, c.isPromo \nFROM cards c \nLEFT JOIN rulings r ON c.uuid = r.uuid \nGROUP BY c.uuid \nORDER BY ruling_count DESC \nLIMIT 1;\t----- bird -----\tcard_games",
    "353": "SELECT (SUM(CASE WHEN language = 'Chinese Simplified' THEN 1 ELSE 0 END) * 100.0 / COUNT(*)) AS percentage \nFROM foreign_data;\t----- bird -----\tcard_games",
    "354": "SELECT COUNT(*) FROM cards WHERE power = '*';\t----- bird -----\tcard_games",
    "355": "SELECT borderColor FROM cards WHERE name = 'Ancestor''s Chosen';\t----- bird -----\tcard_games",
    "356": "SELECT l.format, l.status \nFROM cards c \nJOIN legalities l ON c.uuid = l.uuid \nWHERE c.name = 'Benalish Knight';\t----- bird -----\tcard_games",
    "357": "SELECT (COUNT(id) * 100.0 / (SELECT COUNT(id) FROM cards)) AS percentage_borderless FROM cards WHERE borderColor = 'borderless';\t----- bird -----\tcard_games",
    "358": "SELECT \n    (COUNT(fd.id) * 100.0 / (SELECT COUNT(id) FROM cards WHERE isStorySpotlight = 1)) AS percentage \nFROM \n    foreign_data fd \nJOIN \n    cards c ON fd.uuid = c.uuid \nWHERE \n    fd.language = 'French' AND c.isStorySpotlight = 1;\t----- bird -----\tcard_games",
    "359": "SELECT COUNT(*) \nFROM cards \nWHERE originalType = 'Summon - Angel' \nAND subtypes != 'Angel';\t----- bird -----\tcard_games",
    "360": "SELECT id FROM cards WHERE duelDeck = 'a';\t----- bird -----\tcard_games",
    "361": "SELECT COUNT(*) \nFROM legalities \nJOIN cards ON legalities.uuid = cards.uuid \nWHERE legalities.status = 'Banned' AND cards.borderColor = 'white';\t----- bird -----\tcard_games",
    "362": "SELECT cards.name, foreign_data.language, foreign_data.text \nFROM cards \nJOIN foreign_data ON cards.uuid = foreign_data.uuid \nWHERE cards.originalType = 'Artifact' AND cards.colors = 'B';\t----- bird -----\tcard_games",
    "363": "SELECT manaCost \nFROM cards \nWHERE layout = 'normal' \nAND frameVersion = '2003' \nAND borderColor = 'black' \nAND availability = 'mtgo,paper';\t----- bird -----\tcard_games",
    "364": "SELECT \n    (SUM(CASE WHEN isStorySpotlight = 1 AND isTextless = 0 THEN 1 ELSE 0 END) * 100.0 / COUNT(*)) AS percentage,\n    GROUP_CONCAT(id) AS ids\nFROM \n    cards;\t----- bird -----\tcard_games",
    "365": "SELECT COUNT(*) \nFROM sets s \nJOIN set_translations st ON s.code = st.setCode \nWHERE s.block = 'Commander' AND st.language = 'Portuguese (Brasil)';\t----- bird -----\tcard_games",
    "366": "SELECT DISTINCT subtypes, supertypes \nFROM cards \nJOIN foreign_data ON cards.uuid = foreign_data.uuid \nWHERE foreign_data.language = 'German' \nAND subtypes IS NOT NULL \nAND supertypes IS NOT NULL;\t----- bird -----\tcard_games",
    "367": "SELECT COUNT(*) \nFROM cards \nWHERE (power IS NULL OR power = '*') AND text LIKE '%triggered ability%';\t----- bird -----\tcard_games",
    "368": "SELECT COUNT(*) \nFROM cards c \nJOIN legalities l ON c.uuid = l.uuid \nJOIN rulings r ON c.uuid = r.uuid \nWHERE l.format = 'premodern' \nAND r.text = 'This is a triggered mana ability.' \nAND c.side IS NULL;\t----- bird -----\tcard_games",
    "369": "SELECT fd.name \nFROM cards c \nJOIN foreign_data fd ON c.uuid = fd.uuid \nWHERE fd.language = 'French' \nAND c.type = 'Creature' \nAND c.layout = 'normal' \nAND c.borderColor = 'black' \nAND c.artist = 'Matthew D. Wilson';\t----- bird -----\tcard_games",
    "370": "SELECT st.language \nFROM sets s \nJOIN set_translations st ON s.code = st.setCode \nWHERE s.block = 'Ravnica' AND s.baseSetSize = 180;\t----- bird -----\tcard_games",
    "371": "SELECT \n    (COUNT(CASE WHEN c.hasContentWarning = 0 THEN 1 END) * 100.0 / COUNT(c.id)) AS percentage \nFROM \n    cards c \nJOIN \n    legalities l ON c.uuid = l.uuid \nWHERE \n    l.format = 'commander' AND l.status = 'legal';\t----- bird -----\tcard_games",
    "372": "SELECT (COUNT(f.language) * 100.0 / COUNT(c.power)) AS percentage\nFROM cards c\nLEFT JOIN foreign_data f ON c.uuid = f.uuid\nWHERE (c.power IS NULL OR c.power = '*') AND f.language = 'French';\t----- bird -----\tcard_games",
    "373": "SELECT language FROM foreign_data WHERE multiverseid = 149934;\t----- bird -----\tcard_games",
    "374": "SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM cards)) AS proportion\nFROM cards\nWHERE isTextless = 1 AND layout = 'normal';\t----- bird -----\tcard_games",
    "375": "SELECT DISTINCT st.language \nFROM sets s \nJOIN set_translations st ON s.code = st.setCode \nWHERE s.mcmName = 'Archenemy' AND s.code = 'ARC';\t----- bird -----\tcard_games",
    "376": "SELECT language FROM foreign_data WHERE uuid = (SELECT uuid FROM cards WHERE name = 'A Pedra Fellwar');\t----- bird -----\tcard_games",
    "377": "SELECT name, convertedManaCost FROM cards WHERE name IN ('Serra Angel', 'Shrine Keeper');\t----- bird -----\tcard_games",
    "378": "SELECT st.translation \nFROM cards c \nJOIN sets s ON c.setCode = s.code \nJOIN set_translations st ON s.code = st.setCode \nWHERE c.name = 'Ancestor''s Chosen' AND st.language = 'Italian';\t----- bird -----\tcard_games",
    "379": "SELECT fd.*\nFROM cards c\nJOIN foreign_data fd ON c.uuid = fd.uuid\nWHERE c.name = 'Ancestor''s Chosen' AND fd.language = 'Korean';\t----- bird -----\tcard_games",
    "380": "SELECT COUNT(*) \nFROM cards \nJOIN set_translations ON cards.setCode = set_translations.setCode \nWHERE set_translations.translation = 'Hauptset Zehnte Edition' \nAND cards.artist = 'Adam Rex';\t----- bird -----\tcard_games",
    "381": "SELECT translation FROM set_translations WHERE setCode = (SELECT code FROM sets WHERE name = 'Eighth Edition') AND language = 'Chinese Simplified';\t----- bird -----\tcard_games",
    "382": "SELECT COUNT(*) > 0 \nFROM cards \nJOIN sets ON cards.setCode = sets.code \nWHERE cards.name = 'Angel of Mercy' AND sets.mtgoCode IS NOT NULL;\t----- bird -----\tcard_games",
    "383": "SELECT COUNT(*) \nFROM sets s \nJOIN set_translations st ON s.code = st.setCode \nWHERE s.block = 'Ice Age' AND st.language = 'Italian' AND st.translation IS NOT NULL;\t----- bird -----\tcard_games",
    "384": "SELECT s.isForeignOnly \nFROM cards c \nJOIN sets s ON c.setCode = s.code \nWHERE c.name = 'Adarkar Valkyrie';\t----- bird -----\tcard_games",
    "385": "SELECT COUNT(DISTINCT sets.id) \nFROM sets \nJOIN set_translations ON sets.code = set_translations.setCode \nWHERE set_translations.language = 'Italian' \nAND sets.baseSetSize < 100;\t----- bird -----\tcard_games",
    "386": "SELECT DISTINCT cards.artist \nFROM cards \nJOIN sets ON cards.setCode = sets.code \nWHERE sets.name = 'Coldsnap' \nAND cards.artist IN ('Jeremy Jarvis', 'Aaron Miller', 'Chippy');\t----- bird -----\tcard_games",
    "387": "SELECT COUNT(*) \nFROM cards \nJOIN sets ON cards.setCode = sets.code \nWHERE sets.name = 'Coldsnap' AND cards.convertedManaCost > 5 AND (cards.power = '*' OR cards.power IS NULL);\t----- bird -----\tcard_games",
    "388": "SELECT flavorText FROM foreign_data WHERE language = 'Italian' AND name = 'Ancestor''s Chosen';\t----- bird -----\tcard_games",
    "389": "SELECT f.text \nFROM foreign_data f \nJOIN cards c ON f.uuid = c.uuid \nJOIN sets s ON c.setCode = s.code \nWHERE s.name = 'Coldsnap' AND f.language = 'Italian';\t----- bird -----\tcard_games",
    "390": "SELECT f.name \nFROM cards c \nJOIN sets s ON c.setCode = s.code \nJOIN foreign_data f ON c.uuid = f.uuid \nWHERE s.name = 'Coldsnap' AND f.language = 'Italian' \nAND c.convertedManaCost = (SELECT MAX(convertedManaCost) FROM cards WHERE setCode = s.code);\t----- bird -----\tcard_games",
    "391": "SELECT (SUM(CASE WHEN convertedManaCost = 7 THEN 1 ELSE 0 END) * 100.0 / COUNT(*)) AS percentage\nFROM cards\nJOIN sets ON cards.setCode = sets.code\nWHERE sets.name = 'Coldsnap';\t----- bird -----\tcard_games",
    "392": "SELECT (SUM(CASE WHEN cardKingdomFoilId IS NOT NULL AND cardKingdomId IS NOT NULL THEN 1 ELSE 0 END) * 100.0 / COUNT(*)) AS percentage_incredibly_powerful\nFROM cards\nWHERE name = 'Coldsnap';\t----- bird -----\tcard_games",
    "393": "SELECT l.format, GROUP_CONCAT(c.name) AS banned_cards\nFROM legalities l\nJOIN cards c ON l.uuid = c.uuid\nWHERE l.status = 'Banned'\nGROUP BY l.format\nHAVING COUNT(l.status) = (\n    SELECT MAX(banned_count)\n    FROM (\n        SELECT COUNT(l.status) AS banned_count\n        FROM legalities l\n        WHERE l.status = 'Banned'\n        GROUP BY l.format\n    )\n)\t----- bird -----\tcard_games",
    "394": "SELECT c.name, l.format \nFROM cards c \nJOIN legalities l ON c.uuid = l.uuid \nWHERE c.edhrecRank = 1 AND l.status = 'Banned';\t----- bird -----\tcard_games",
    "395": "SELECT c.name, l.format\nFROM cards c\nJOIN legalities l ON c.uuid = l.uuid\nJOIN sets s ON s.code = c.setCode\nWHERE s.name = 'Hour of Devastation' AND l.status = 'Legal';\t----- bird -----\tcard_games",
    "396": "SELECT s.name \nFROM sets s \nLEFT JOIN set_translations st ON s.code = st.setCode \nWHERE st.language = 'Korean' \nAND s.code NOT IN (SELECT setCode FROM set_translations WHERE language LIKE '%Japanese%');\t----- bird -----\tcard_games",
    "397": "SELECT DISTINCT frameVersion FROM cards WHERE artist = 'Allen Williams';  \nSELECT name FROM cards WHERE artist = 'Allen Williams';  \nSELECT * FROM legalities WHERE status = 'Banned';  \t----- bird -----\tcard_games",
    "398": "SELECT bond_type FROM bond GROUP BY bond_type ORDER BY COUNT(bond_type) DESC LIMIT 1;\t----- bird -----\ttoxicology",
    "399": "SELECT AVG(oxygen_count) FROM (\n    SELECT m.molecule_id, COUNT(a.atom_id) AS oxygen_count\n    FROM molecule m\n    JOIN bond b ON m.molecule_id = b.molecule_id AND b.bond_type = '-'\n    JOIN connected c ON b.bond_id = c.bond_id\n    JOIN atom a ON c.atom_id = a.atom_id OR c.atom_id2 = a.atom_id\n    WHERE a.element = 'o'\n    GROUP BY m.molecule_id\n) AS subquery;\t----- bird -----\ttoxicology",
    "400": "SELECT AVG(single_bond_count) AS average_single_bonded_carcinogenic \nFROM (\n    SELECT COUNT(c.atom_id) AS single_bond_count\n    FROM molecule m\n    JOIN bond b ON m.molecule_id = b.molecule_id AND b.bond_type = '-'\n    JOIN connected c ON b.bond_id = c.bond_id\n    WHERE m.label = '+'\n    GROUP BY m.molecule_id\n);\t----- bird -----\ttoxicology",
    "401": "SELECT DISTINCT m.molecule_id, m.label \nFROM molecule m \nJOIN bond b ON m.molecule_id = b.molecule_id \nWHERE b.bond_type = '#' AND m.label = '+';\t----- bird -----\ttoxicology",
    "402": "SELECT (SUM(CASE WHEN a.element = 'c' THEN 1 ELSE 0 END) * 1.0 / COUNT(a.atom_id)) * 100 AS carbon_percentage\nFROM atom a\nJOIN connected c ON a.atom_id = c.atom_id OR a.atom_id = c.atom_id2\nJOIN bond b ON c.bond_id = b.bond_id\nWHERE b.bond_type = '=' \nGROUP BY b.molecule_id;\t----- bird -----\ttoxicology",
    "403": "SELECT DISTINCT a.element \nFROM atom a \nJOIN connected c ON a.atom_id = c.atom_id OR a.atom_id = c.atom_id2 \nJOIN bond b ON c.bond_id = b.bond_id \nWHERE b.bond_id = 'TR004_8_9';\t----- bird -----\ttoxicology",
    "404": "SELECT DISTINCT a.element \nFROM bond b \nJOIN connected c ON b.bond_id = c.bond_id \nJOIN atom a ON c.atom_id = a.atom_id \nWHERE b.bond_type = '=';\t----- bird -----\ttoxicology",
    "405": "SELECT label, COUNT(label) as label_count \nFROM atom \nJOIN molecule ON atom.molecule_id = molecule.molecule_id \nWHERE element = 'h' \nGROUP BY label \nORDER BY label_count DESC \nLIMIT 1;\t----- bird -----\ttoxicology",
    "406": "SELECT element FROM atom \nWHERE molecule_id IN (SELECT molecule_id FROM molecule WHERE label = '-') \nGROUP BY element \nORDER BY COUNT(element) ASC \nLIMIT 1;\t----- bird -----\ttoxicology",
    "407": "SELECT b.bond_type \nFROM connected c \nJOIN bond b ON c.bond_id = b.bond_id \nWHERE (c.atom_id = 'TR004_8' AND c.atom_id2 = 'TR004_20') \n   OR (c.atom_id = 'TR004_20' AND c.atom_id2 = 'TR004_8');\t----- bird -----\ttoxicology",
    "408": "SELECT COUNT(DISTINCT a.atom_id) AS distinct_atoms_count\nFROM atom a\nJOIN connected c ON a.atom_id = c.atom_id OR a.atom_id = c.atom_id2\nJOIN bond b ON c.bond_id = b.bond_id\nWHERE (a.element = 'i' OR a.element = 's') AND b.bond_type = '-';\t----- bird -----\ttoxicology",
    "409": "SELECT \n    (100.0 * (COUNT(DISTINCT m.molecule_id) - SUM(CASE WHEN a.element = 'f' THEN 1 ELSE 0 END)) / COUNT(DISTINCT m.molecule_id)) AS percentage_not_containing_fluorine\nFROM \n    molecule m\nLEFT JOIN \n    atom a ON m.molecule_id = a.molecule_id\nWHERE \n    m.label = '+';\t----- bird -----\ttoxicology",
    "410": "SELECT (SUM(bond.bond_type = '#') * 100.0 / COUNT(bond.bond_id)) AS percent\nFROM molecule\nJOIN bond ON molecule.molecule_id = bond.molecule_id\nWHERE molecule.label = '+';\t----- bird -----\ttoxicology",
    "411": "SELECT DISTINCT element FROM atom WHERE molecule_id = 'TR000' ORDER BY element LIMIT 3;\t----- bird -----\ttoxicology",
    "412": "SELECT ROUND((SUM(bond_type = '=') * 100.0) / COUNT(bond_id), 5) AS percent \nFROM bond \nWHERE molecule_id = 'TR008';\t----- bird -----\ttoxicology",
    "413": "SELECT ROUND((SUM(label = '+') * 100.0) / COUNT(molecule_id), 3) AS percent FROM molecule;\t----- bird -----\ttoxicology",
    "414": "SELECT ROUND((SUM(CASE WHEN element = 'h' THEN 1 ELSE 0 END) * 100.0) / COUNT(atom_id), 4) AS percent FROM atom WHERE molecule_id = 'TR206';\t----- bird -----\ttoxicology",
    "415": "SELECT a.element, m.label \nFROM atom a \nJOIN molecule m ON a.molecule_id = m.molecule_id \nWHERE m.molecule_id = 'TR060';\t----- bird -----\ttoxicology",
    "416": "SELECT bond_type \nFROM bond \nWHERE molecule_id = 'TR010' \nGROUP BY bond_type \nORDER BY COUNT(*) DESC \nLIMIT 1;\n\nSELECT CASE \n    WHEN EXISTS (\n        SELECT 1 \n        FROM molecule \n        WHERE molecule_id = 'TR010' AND label LIKE '%carcinogenic%'\n    ) THEN 'Yes' \n    ELSE 'No' \nEND as is_carcinogenic;\t----- bird -----\ttoxicology",
    "417": "SELECT DISTINCT m.molecule_id \nFROM molecule m \nJOIN bond b ON m.molecule_id = b.molecule_id \nJOIN connected c ON b.bond_id = c.bond_id \nWHERE b.bond_type = '-' AND m.label = '-' \nORDER BY m.molecule_id \nLIMIT 3;\t----- bird -----\ttoxicology",
    "418": "SELECT COUNT(*) \nFROM connected \nWHERE (atom_id = 'TR009_12' OR atom_id2 = 'TR009_12') \nAND bond_id IN (SELECT bond_id FROM bond WHERE molecule_id = 'TR009');\t----- bird -----\ttoxicology",
    "419": "SELECT b.bond_type, c.atom_id, c.atom_id2 \nFROM bond b \nJOIN connected c ON b.bond_id = c.bond_id \nWHERE b.bond_id = 'TR001_6_9';\t----- bird -----\ttoxicology",
    "420": "SELECT COUNT(bond_id) AS connections FROM connected WHERE atom_id = 'TR%_19' OR atom_id2 = 'TR%_19';\t----- bird -----\ttoxicology",
    "421": "SELECT DISTINCT a.element \nFROM atom a \nJOIN molecule m ON a.molecule_id = m.molecule_id \nWHERE m.molecule_id = 'TR004';\t----- bird -----\ttoxicology",
    "422": "SELECT DISTINCT m.molecule_id\nFROM molecule m\nJOIN atom a ON m.molecule_id = a.molecule_id\nWHERE SUBSTR(a.atom_id, 7, 2) BETWEEN '21' AND '25' AND m.label = '+';\t----- bird -----\ttoxicology",
    "423": "SELECT DISTINCT b.bond_id \nFROM bond b\nJOIN connected c1 ON b.bond_id = c1.bond_id\nJOIN atom a1 ON c1.atom_id = a1.atom_id\nJOIN connected c2 ON b.bond_id = c2.bond_id\nJOIN atom a2 ON c2.atom_id2 = a2.atom_id\nWHERE a1.element = 'p' AND a2.element = 'n';\t----- bird -----\ttoxicology",
    "424": "SELECT m.molecule_id, m.label, COUNT(b.bond_id) AS double_bond_count\nFROM molecule m\nJOIN bond b ON m.molecule_id = b.molecule_id\nWHERE b.bond_type = ' = '\nGROUP BY m.molecule_id\nORDER BY double_bond_count DESC\nLIMIT 1;\t----- bird -----\ttoxicology",
    "425": "SELECT AVG(bond_count) AS average_bonds\nFROM (\n    SELECT COUNT(c.bond_id) AS bond_count\n    FROM atom a\n    LEFT JOIN connected c ON a.atom_id = c.atom_id\n    WHERE a.element = 'i'\n    GROUP BY a.atom_id\n) AS bond_counts;\t----- bird -----\ttoxicology",
    "426": "SELECT element FROM atom WHERE atom_id NOT IN (SELECT atom_id FROM connected UNION SELECT atom_id2 FROM connected);\t----- bird -----\ttoxicology",
    "427": "SELECT c.atom_id, c.atom_id2 \nFROM bond b \nJOIN connected c ON b.bond_id = c.bond_id \nWHERE b.molecule_id = 'TR041' AND b.bond_type = '#';\t----- bird -----\ttoxicology",
    "428": "SELECT a.element \nFROM atom a \nJOIN connected c ON a.atom_id = c.atom_id OR a.atom_id = c.atom_id2 \nJOIN bond b ON c.bond_id = b.bond_id \nWHERE b.bond_id = 'TR144_8_19';\t----- bird -----\ttoxicology",
    "429": "SELECT DISTINCT a.element \nFROM connected c\nJOIN bond b ON c.bond_id = b.bond_id\nJOIN atom a ON c.atom_id = a.atom_id OR c.atom_id2 = a.atom_id\nWHERE b.bond_type = '#';\t----- bird -----\ttoxicology",
    "430": "SELECT ROUND((SUM(m.label = '+') * 100.0) / COUNT(b.bond_id), 5) AS carcinogenic_proportion \nFROM bond b \nJOIN molecule m ON b.molecule_id = m.molecule_id \nWHERE b.bond_type = '-';\t----- bird -----\ttoxicology",
    "431": "SELECT COUNT(DISTINCT a.atom_id) AS total_atoms\nFROM atom a\nJOIN connected c ON a.atom_id = c.atom_id OR a.atom_id = c.atom_id2\nJOIN bond b ON c.bond_id = b.bond_id\nJOIN molecule m ON b.molecule_id = m.molecule_id\nWHERE b.bond_type = '#' AND (a.element = 'p' OR a.element = 'br');\t----- bird -----\ttoxicology",
    "432": "SELECT \n    (SUM(CASE WHEN a.element = 'cl' THEN 1 ELSE 0 END) * 100.0 / COUNT(a.atom_id)) AS percent \nFROM \n    atom a \nJOIN \n    connected c ON a.atom_id = c.atom_id OR a.atom_id = c.atom_id2 \nJOIN \n    bond b ON c.bond_id = b.bond_id \nWHERE \n    b.bond_type = '-'\nGROUP BY \n    b.molecule_id;\t----- bird -----\ttoxicology",
    "433": "SELECT a.element \nFROM connected c\nJOIN atom a ON c.atom_id = a.atom_id OR c.atom_id2 = a.atom_id\nJOIN bond b ON c.bond_id = b.bond_id\nWHERE b.bond_id = 'TR001_10_11';\t----- bird -----\ttoxicology",
    "434": "SELECT \n    (SUM(a.element = 'cl') * 100.0) / COUNT(DISTINCT m.molecule_id) AS percentage\nFROM \n    molecule m\nJOIN \n    atom a ON m.molecule_id = a.molecule_id\nWHERE \n    m.label = '+';\t----- bird -----\ttoxicology",
    "435": "SELECT a.element \nFROM molecule m \nJOIN atom a ON m.molecule_id = a.molecule_id \nWHERE m.label = '+' AND substr(a.atom_id, 7, 1) = '4';\t----- bird -----\ttoxicology",
    "436": "SELECT label, \n       CAST(SUM(CASE WHEN element = 'h' THEN 1 ELSE 0 END) AS FLOAT) / COUNT(element) AS hydrogen_ratio \nFROM atom \nJOIN molecule ON atom.molecule_id = molecule.molecule_id \nWHERE molecule.molecule_id = 'TR006' \nGROUP BY label;\t----- bird -----\ttoxicology",
    "437": "SELECT m.molecule_id, m.label, COUNT(a.atom_id) AS atom_count\nFROM molecule m\nJOIN atom a ON m.molecule_id = a.molecule_id\nWHERE m.label = '-'\nGROUP BY m.molecule_id\nHAVING COUNT(a.atom_id) > 5;\t----- bird -----\ttoxicology",
    "438": "SELECT COUNT(*) \nFROM schools s \nJOIN satscores sa ON s.CDSCode = sa.cds \nWHERE sa.AvgScrMath > 400 AND s.Virtual = 'F';\t----- bird -----\tcalifornia_schools",
    "439": "SELECT frpm.CDSCode \nFROM frpm \nWHERE (`Enrollment (K-12)` + `Enrollment (Ages 5-17)`) > 500;\t----- bird -----\tcalifornia_schools",
    "440": "SELECT MAX(`Percent (%) Eligible Free (Ages 5-17)`)\nFROM (\n    SELECT fr.CDSCode, \n           (CAST(ss.NumGE1500 AS REAL) / ss.NumTstTakr) AS ExcellenceRate,\n           (fr.`Free Meal Count (Ages 5-17)` / fr.`Enrollment (Ages 5-17)`) AS EligibleFreeRate\n    FROM satscores ss\n    JOIN frpm fr ON ss.cds = fr.CDSCode\n    WHERE (CAST(ss.NumGE1500 AS REAL) / ss.NumTstTakr) > 0.3\n) AS SubQuery;\t----- bird -----\tcalifornia_schools",
    "441": "SELECT s.CharterNum, AVG(sa.AvgScrWrite) AS AvgWritingScore\nFROM satscores sa\nJOIN schools s ON sa.cds = s.CDSCode\nWHERE sa.AvgScrWrite > 499 AND s.CharterNum IS NOT NULL\nGROUP BY s.CharterNum\nORDER BY AvgWritingScore DESC;\t----- bird -----\tcalifornia_schools",
    "442": "SELECT s.School, s.Street, s.City, s.Zip\nFROM frpm f\nJOIN schools s ON f.CDSCode = s.CDSCode\nWHERE ABS(f.`Enrollment (K-12)` - f.`Enrollment (Ages 5-17)`) > 30;\t----- bird -----\tcalifornia_schools",
    "443": "SELECT s.\"School Name\" \nFROM frpm AS f \nJOIN satscores AS s ON f.CDSCode = s.cds \nWHERE (f.\"Free Meal Count (K-12)\" / f.\"Enrollment (K-12)\") > 0.1 \nAND s.NumTstTakr > 0 \nAND (s.AvgScrRead + s.AvgScrMath + s.AvgScrWrite) >= 1500;\t----- bird -----\tcalifornia_schools",
    "444": "SELECT s.School, s.FundingType\nFROM schools s\nJOIN satscores sat ON s.CDSCode = sat.cds\nWHERE s.County = 'Riverside'\nGROUP BY s.CDSCode\nHAVING AVG(sat.AvgScrMath) > 400;\t----- bird -----\tcalifornia_schools",
    "445": "SELECT s.School, s.Street, s.City, s.State, s.Zip \nFROM frpm f \nJOIN schools s ON f.CDSCode = s.CDSCode \nWHERE f.`County Name` = 'Monterey' \nAND f.`Free Meal Count (Ages 5-17)` > 800 \nAND s.StatusType = 'High School';\t----- bird -----\tcalifornia_schools",
    "446": "SELECT s.School, AVG(sa.AvgScrWrite) AS Average_Writing_Score, s.Phone\nFROM schools s\nJOIN satscores sa ON s.CDSCode = sa.cds\nWHERE (s.OpenDate > '1991-12-31' OR s.ClosedDate < '2000-01-01')\nGROUP BY s.School, s.Phone;\t----- bird -----\tcalifornia_schools",
    "447": "SELECT s.School AS SchoolName, s.DOCType \nFROM schools s \nJOIN frpm f ON s.CDSCode = f.CDSCode \nWHERE f.`Enrollment (K-12)` - f.`Enrollment (Ages 5-17)` > \n    (SELECT AVG(f1.`Enrollment (K-12)` - f1.`Enrollment (Ages 5-17)`) \n     FROM frpm f1 \n     WHERE f1.`NSLP Provision Status` = 'Locally Funded');\t----- bird -----\tcalifornia_schools",
    "448": "SELECT \n    `School Name`, \n    (`Free Meal Count (K-12)` / `Enrollment (K-12)`) AS EligibleFreeRate \nFROM \n    frpm \nWHERE \n    `Enrollment (K-12)` > 0 \nORDER BY \n    `Enrollment (K-12)` DESC \nLIMIT 2 OFFSET 9;\t----- bird -----\tcalifornia_schools",
    "449": "SELECT \n    f.`School Name`, \n    (f.`FRPM Count (K-12)` / f.`Enrollment (K-12)`) AS Eligible_Rate \nFROM \n    frpm f \nJOIN \n    schools s ON f.CDSCode = s.CDSCode \nWHERE \n    s.Charter = 66 \n    AND f.`Enrollment (K-12)` > 0 \nORDER BY \n    f.`FRPM Count (K-12)` DESC \nLIMIT 5;\t----- bird -----\tcalifornia_schools",
    "450": "SELECT s.Street, s.City, s.Zip, s.State \nFROM satscores sa \nJOIN schools s ON sa.cds = s.CDSCode \nWHERE sa.NumTstTakr > 0 \nORDER BY (sa.NumGE1500 * 1.0 / sa.NumTstTakr) ASC \nLIMIT 1;\t----- bird -----\tcalifornia_schools",
    "451": "SELECT s.AdmFName1 || ' ' || s.AdmLName1 AS FullName\nFROM satscores ss\nJOIN schools s ON ss.cds = s.CDSCode\nWHERE ss.NumGE1500 = (SELECT MAX(NumGE1500) FROM satscores)\nLIMIT 1;\t----- bird -----\tcalifornia_schools",
    "452": "SELECT AVG(NumTstTakr) \nFROM satscores \nJOIN schools ON satscores.cds = schools.CDSCode \nWHERE schools.OpenDate BETWEEN '1980-01-01' AND '1980-12-31' \nAND schools.County = 'Fresno';\t----- bird -----\tcalifornia_schools",
    "453": "SELECT s.Phone \nFROM satscores sa \nJOIN schools s ON sa.cds = s.CDSCode \nWHERE s.District = 'Fresno Unified' \nORDER BY sa.AvgScrRead ASC \nLIMIT 1;\t----- bird -----\tcalifornia_schools",
    "454": "SELECT s.School, s.County \nFROM schools s\nJOIN satscores sa ON s.CDSCode = sa.cds\nWHERE s.Virtual = 'F' \nGROUP BY s.County \nORDER BY AVG(sa.AvgScrRead) DESC \nLIMIT 5;\t----- bird -----\tcalifornia_schools",
    "455": "SELECT s.School, AVG(sa.AvgScrWrite) AS Average_Writing_Score\nFROM schools s\nJOIN satscores sa ON s.CDSCode = sa.cds\nWHERE s.AdmFName1 = 'Ricci' AND s.AdmLName1 = 'Ulrich'\nGROUP BY s.School;\t----- bird -----\tcalifornia_schools",
    "456": "SELECT s.School, SUM(f.`Enrollment (K-12)`) AS TotalEnrollees\nFROM schools s\nJOIN frpm f ON s.CDSCode = f.CDSCode\nWHERE s.DOC = 31\nGROUP BY s.School\nORDER BY TotalEnrollees DESC\nLIMIT 1;\t----- bird -----\tcalifornia_schools",
    "457": "SELECT COUNT(*) / 12 AS MonthlyAverageOpenedSchools \nFROM schools \nWHERE County = 'Alameda' \n  AND DOC = '52' \n  AND strftime('%Y', OpenDate) = '1980';\t----- bird -----\tcalifornia_schools",
    "458": "SELECT \n    (SELECT COUNT(*) FROM schools WHERE County = 'Orange' AND DOC = '54') * 1.0 / \n    (SELECT COUNT(*) FROM schools WHERE County = 'Orange' AND DOC = '52') AS Ratio;\t----- bird -----\tcalifornia_schools",
    "459": "SELECT s.Street, s.School \nFROM satscores sa \nJOIN schools s ON sa.cds = s.CDSCode \nWHERE sa.AvgScrMath IS NOT NULL \nORDER BY sa.AvgScrMath DESC \nLIMIT 1 OFFSET 6;\t----- bird -----\tcalifornia_schools",
    "460": "SELECT COUNT(*) \nFROM frpm \nJOIN schools ON frpm.CDSCode = schools.CDSCode \nWHERE schools.County = 'Los Angeles' \nAND frpm.`Charter School (Y/N)` = 0 \nAND (frpm.`Free Meal Count (K-12)` * 100 / frpm.`Enrollment (K-12)`) < 0.18;\t----- bird -----\tcalifornia_schools",
    "461": "SELECT `Enrollment (Ages 5-17)` \nFROM frpm \nJOIN schools ON frpm.CDSCode = schools.CDSCode \nWHERE schools.EdOpsCode = 'SSS' \nAND frpm.`Academic Year` = '2014-2015' \nAND frpm.`County Name` = 'Fremont';\t----- bird -----\tcalifornia_schools",
    "462": "SELECT s.School AS SchoolName, (f.`FRPM Count (Ages 5-17)` / f.`Enrollment (Ages 5-17)` * 100) AS `Percent Eligible FRPM (Ages 5-17)` \nFROM frpm f \nJOIN schools s ON f.CDSCode = s.CDSCode \nWHERE f.`Low Grade` = 'K' AND f.`High Grade` = '9' AND s.County = 'Los Angeles';\t----- bird -----\tcalifornia_schools",
    "463": "SELECT County, COUNT(*) AS SchoolCount \nFROM schools \nWHERE Virtual = 'F' AND County IN ('San Diego', 'Santa Barbara') \nGROUP BY County \nORDER BY SchoolCount DESC \nLIMIT 1;\t----- bird -----\tcalifornia_schools",
    "464": "SELECT `Low Grade`, `High Grade` \nFROM schools \nORDER BY ABS(Longitude) DESC \nLIMIT 1;\t----- bird -----\tcalifornia_schools",
    "465": "SELECT COUNT(*) AS MultipleProvisionMagnetSchools\nFROM frpm \nJOIN schools ON frpm.CDSCode = schools.CDSCode \nWHERE frpm.`Low Grade` = 'K' \nAND frpm.`High Grade` = '8' \nAND frpm.`NSLP Provision Status` = 'Multiple Provision Types' \nAND schools.Magnet = 1;\n\nSELECT City, COUNT(*) AS SchoolsCount\nFROM schools\nJOIN frpm ON schools.CDSCode = frpm.CDSCode\nWHERE frpm.`Low Grade` = 'K' \nAND frpm.`High Grade` = '8'\nGROUP BY City;\t----- bird -----\tcalifornia_schools",
    "466": "SELECT `District Code`, (`Free Meal Count (K-12)` / `Enrollment (K-12)` * 100) AS `Percent (%) Eligible Free (K-12)`\nFROM frpm\nJOIN schools ON frpm.CDSCode = schools.CDSCode\nWHERE AdmFName1 = 'Alusine';\t----- bird -----\tcalifornia_schools",
    "467": "SELECT AdmEmail1, AdmEmail2, AdmEmail3 \nFROM schools \nWHERE County = 'San Bernardino' \n  AND District = 'San Bernardino City Unified' \n  AND OpenDate BETWEEN '2009-01-01' AND '2010-12-31' \n  AND (SOC = '62' OR DOC = '54');\t----- bird -----\tcalifornia_schools",
    "468": "SELECT COUNT(DISTINCT a.account_id) \nFROM account a \nJOIN disp d ON a.account_id = d.account_id \nJOIN district ds ON a.district_id = ds.district_id \nWHERE ds.A3 = 'East Bohemia' AND d.type = 'POPLATEK PO OBRATU';\t----- bird -----\tfinancial",
    "469": "SELECT COUNT(*) \nFROM district \nWHERE A11 > 6000 AND A11 < 10000 \n  AND district_id IN (SELECT district_id \n                      FROM client \n                      WHERE gender = 'F');\t----- bird -----\tfinancial",
    "470": "SELECT COUNT(*) \nFROM client \nJOIN district ON client.district_id = district.district_id \nWHERE client.gender = 'M' \nAND district.A3 = 'North Bohemia' \nAND district.A11 > 8000;\t----- bird -----\tfinancial",
    "471": "SELECT \n    a.account_id,\n    MAX(d.A11) - MIN(d.A11) AS salary_gap\nFROM \n    client c\nJOIN \n    district d ON c.district_id = d.district_id\nJOIN \n    disp disp ON c.client_id = disp.client_id\nJOIN \n    account a ON disp.account_id = a.account_id\nWHERE \n    c.gender = 'F'\nGROUP BY \n    a.account_id\nHAVING \n    c.birth_date = (SELECT MIN(birth_date) FROM client WHERE gender = 'F')\nORDER BY \n    d.A11 ASC\nLIMIT 1;\t----- bird -----\tfinancial",
    "472": "SELECT a.account_id\nFROM account a\nJOIN client c ON a.district_id = c.district_id\nJOIN district d ON c.district_id = d.district_id\nWHERE c.birth_date = (\n    SELECT MIN(birth_date)\n    FROM client\n)\nAND d.A11 = (\n    SELECT MAX(A11)\n    FROM district\n);\t----- bird -----\tfinancial",
    "473": "SELECT a.account_id, l.amount \nFROM loan l \nJOIN account a ON l.account_id = a.account_id \nWHERE l.date BETWEEN '1997-01-01' AND '1997-12-31' \nAND a.frequency = 'POPLATEK TYDNE' \nORDER BY l.amount ASC \nLIMIT 1;\t----- bird -----\tfinancial",
    "474": "SELECT a.account_id, l.amount\nFROM account a\nJOIN loan l ON a.account_id = l.account_id\nWHERE l.duration > 12 AND a.date LIKE '1993%'\nORDER BY l.amount DESC\nLIMIT 1;\t----- bird -----\tfinancial",
    "475": "SELECT COUNT(*) \nFROM client c \nJOIN district d ON c.district_id = d.district_id \nWHERE c.gender = 'F' \nAND c.birth_date < '1950-01-01' \nAND d.A2 = 'Sokolov';\t----- bird -----\tfinancial",
    "476": "SELECT d.A2 \nFROM client c \nJOIN account a ON c.district_id = a.district_id \nJOIN district d ON c.district_id = d.district_id \nWHERE c.gender = 'F' AND c.birth_date = '1976-01-29';\t----- bird -----\tfinancial",
    "477": "SELECT \n    (COUNT(CASE WHEN c.gender = 'M' THEN 1 END) * 100.0 / COUNT(c.client_id)) AS male_percentage\nFROM \n    client c\nJOIN \n    district d ON c.district_id = d.district_id\nWHERE \n    d.A3 = 'South Bohemia'\nGROUP BY \n    d.A4\nORDER BY \n    SUM(d.A4) DESC\nLIMIT 1;\t----- bird -----\tfinancial",
    "478": "SELECT \n    (end_balance.balance - start_balance.balance) * 100.0 / start_balance.balance AS increase_rate \nFROM \n    (SELECT \n         acc.account_id, t.balance \n     FROM \n         account acc \n     JOIN \n         loan l ON acc.account_id = l.account_id \n     JOIN \n         disp d ON l.account_id = d.account_id \n     JOIN \n         trans t ON acc.account_id = t.account_id \n     WHERE \n         l.date = (SELECT MIN(date) FROM loan WHERE date >= '1993-07-05') \n         AND l.status = 'approved' \n         AND t.date = '1993-03-22') AS start_balance,\n    (SELECT \n         t.balance \n     FROM \n         trans t \n     WHERE \n         t.account_id = (SELECT acc.account_id \n                         FROM loan l \n                         JOIN account acc ON l.account_id = acc.account_id \n                         WHERE l.date = (SELECT MIN(date) FROM loan WHERE date >= '1993-07-05')) \n         AND t.date = '1998-12-27') AS end_balance;\t----- bird -----\tfinancial",
    "479": "SELECT \n    (SUM(CASE WHEN status = 'A' THEN amount ELSE 0 END) / SUM(amount)) * 100 AS percentage_of_fully_paid_loans\nFROM loan;\t----- bird -----\tfinancial",
    "480": "SELECT \n    (COUNT(CASE WHEN status = 'C' THEN 1 END) * 100.0 / COUNT(*)) AS percentage_running\nFROM \n    loan\nWHERE \n    amount < 100000;\t----- bird -----\tfinancial",
    "481": "SELECT d.district_id, ( (d.A13 - d.A12) / d.A12 ) * 100 AS unemployment_increment_rate\nFROM loan l\nJOIN account a ON l.account_id = a.account_id\nJOIN client c ON a.district_id = c.district_id\nJOIN district d ON c.district_id = d.district_id\nWHERE l.status = 'D';\t----- bird -----\tfinancial",
    "482": "SELECT d.A2, COUNT(c.client_id) AS female_account_holders\nFROM district d\nJOIN client c ON d.district_id = c.district_id\nJOIN disp disp ON c.client_id = disp.client_id\nJOIN account a ON disp.account_id = a.account_id\nWHERE c.gender = 'F'\nGROUP BY d.district_id\nORDER BY female_account_holders DESC\nLIMIT 9;\t----- bird -----\tfinancial",
    "483": "SELECT COUNT(DISTINCT l.account_id) \nFROM loan l \nJOIN account a ON l.account_id = a.account_id \nWHERE l.date BETWEEN '1995-01-01' AND '1997-12-31' \nAND l.amount >= 250000 \nAND a.frequency = 'POPLATEK MESICNE' \nAND l.status = 'approved';\t----- bird -----\tfinancial",
    "484": "SELECT COUNT(DISTINCT a.account_id) \nFROM account a \nJOIN loan l ON a.account_id = l.account_id \nJOIN disp d ON a.account_id = d.account_id \nWHERE l.status IN ('C', 'D') \nAND d.type = '1';\t----- bird -----\tfinancial",
    "485": "SELECT COUNT(*) \nFROM client c \nJOIN district d ON c.district_id = d.district_id \nWHERE c.gender = 'M' \nAND d.A15 = (SELECT A15 \n             FROM district \n             ORDER BY A15 DESC \n             LIMIT 1 OFFSET 1);\t----- bird -----\tfinancial",
    "486": "SELECT d.A2 AS district_name, SUM(t.amount) AS total_withdrawals\nFROM trans t\nJOIN account a ON t.account_id = a.account_id\nJOIN district d ON a.district_id = d.district_id\nWHERE t.type = 'VYDAJ' AND t.date LIKE '1996-01%'\nGROUP BY d.A2\nORDER BY total_withdrawals DESC\nLIMIT 10;\t----- bird -----\tfinancial",
    "487": "SELECT COUNT(DISTINCT a.account_id) \nFROM account a \nJOIN loan l ON a.account_id = l.account_id \nWHERE l.status IN ('C', 'D') \nAND a.district_id = 1;\t----- bird -----\tfinancial",
    "488": "SELECT COUNT(*) \nFROM client \nWHERE gender = 'M' \nAND district_id = (SELECT district_id \n                   FROM district \n                   ORDER BY A15 DESC \n                   LIMIT 1 OFFSET 1);\t----- bird -----\tfinancial",
    "489": "SELECT DISTINCT c.client_id\nFROM trans t\nJOIN disp d ON t.account_id = d.account_id\nJOIN client c ON d.client_id = c.client_id\nWHERE t.operation = 'VYBER KARTOU'\n  AND t.amount < (SELECT AVG(amount)\n                  FROM trans\n                  WHERE operation = 'VYBER KARTOU' AND date BETWEEN '1998-01-01' AND '1998-12-31')\n  AND t.date BETWEEN '1998-01-01' AND '1998-12-31';\t----- bird -----\tfinancial",
    "490": "SELECT DISTINCT a.frequency \nFROM account a \nJOIN district d ON a.district_id = d.district_id \nWHERE d.A11 > 8000 AND d.A11 <= 9000 AND a.frequency != 'OWNER';\t----- bird -----\tfinancial",
    "491": "SELECT AVG(A15) AS average_crimes\nFROM district d\nJOIN account a ON d.district_id = a.district_id\nWHERE A15 > 4000 AND a.date >= '1997-01-01';\t----- bird -----\tfinancial",
    "492": "SELECT t.*\nFROM trans t\nJOIN disp d ON t.account_id = d.account_id\nWHERE d.client_id = 3356 AND t.operation = 'VYBER';\t----- bird -----\tfinancial",
    "493": "SELECT (COUNT(CASE WHEN c.gender = 'F' THEN 1 END) * 100.0 / COUNT(*)) AS percentage_women\nFROM client c \nJOIN district d ON c.district_id = d.district_id\nJOIN account a ON c.district_id = a.district_id\nWHERE d.A11 > 10000;\t----- bird -----\tfinancial",
    "494": "SELECT \n    (SUM(CASE WHEN strftime('%Y', l.date) = '1997' THEN l.amount ELSE 0 END) - SUM(CASE WHEN strftime('%Y', l.date) = '1996' THEN l.amount ELSE 0 END)) / NULLIF(SUM(CASE WHEN strftime('%Y', l.date) = '1996' THEN l.amount ELSE 0 END), 0) * 100 AS growth_rate\nFROM \n    loan l\nJOIN \n    account a ON l.account_id = a.account_id\nJOIN \n    disp d ON a.account_id = d.account_id\nJOIN \n    client c ON d.client_id = c.client_id\nWHERE \n    c.gender = 'M';\t----- bird -----\tfinancial",
    "495": "SELECT frequency, \n       SUM(CASE WHEN k_symbol IS NOT NULL THEN amount ELSE 0 END) AS total_debited,\n       GROUP_CONCAT(DISTINCT k_symbol) AS k_symbols\nFROM account \nJOIN trans ON account.account_id = trans.account_id \nWHERE account.account_id = 3\nGROUP BY frequency;\t----- bird -----\tfinancial",
    "496": "SELECT \n    (COUNT(CASE WHEN c.gender = 'M' THEN 1 END) * 100.0 / COUNT(*)) AS percentage_male_weekly_statements\nFROM \n    client c\nJOIN \n    account a ON c.district_id = a.district_id\nWHERE \n    a.frequency = 'POPLATEK TYDNE';\t----- bird -----\tfinancial",
    "497": "SELECT a.account_id \nFROM account a \nJOIN client c ON a.district_id = c.district_id \nJOIN district d ON c.district_id = d.district_id \nWHERE c.gender = 'F' \nORDER BY c.birth_date ASC, d.A11 ASC \nLIMIT 1;\t----- bird -----\tfinancial",
    "498": "SELECT AVG(l.amount) AS average_loan_amount\nFROM loan l\nJOIN trans t ON l.account_id = t.account_id\nWHERE l.status IN ('C', 'D') \nAND t.operation = 'POPLATEK PO OBRATU';\t----- bird -----\tfinancial",
    "499": "SELECT c.client_id, (strftime('%Y', 'now') - strftime('%Y', c.birth_date)) AS age\nFROM client c\nJOIN disp d ON c.client_id = d.client_id\nJOIN card ca ON d.account_id = ca.card_id\nWHERE ca.type = 'gold' AND d.type = 'OWNER';\t----- bird -----\tfinancial"
}