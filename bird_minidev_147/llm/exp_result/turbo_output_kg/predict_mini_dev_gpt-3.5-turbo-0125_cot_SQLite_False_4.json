{
    "0": "SELECT CAST((SELECT COUNT(*) FROM customers WHERE Currency = 'EUR') AS REAL) / NULLIF((SELECT COUNT(*) FROM customers WHERE Currency = 'CZK'), 0) AS ratio;\t----- bird -----\tdebit_card_specializing",
    "1": "SELECT CustomerID, MIN(Consumption) FROM yearmonth WHERE Date BETWEEN '201201' AND '201212' GROUP BY CustomerID ORDER BY MIN(Consumption) ASC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "2": "SELECT AVG(Consumption) / 12 FROM yearmonth WHERE Date BETWEEN '201301' AND '201312' AND CustomerID IN (SELECT CustomerID FROM customers WHERE Segment = 'SME')\t----- bird -----\tdebit_card_specializing",
    "3": "SELECT \n    (SELECT SUM(Consumption) FROM yearmonth AS Y1 INNER JOIN customers AS C1 ON Y1.CustomerID = C1.CustomerID WHERE C1.Currency = 'CZK' AND Y1.Date BETWEEN '201201' AND '201212') -\n    (SELECT SUM(Consumption) FROM yearmonth AS Y2 INNER JOIN customers AS C2 ON Y2.CustomerID = C2.CustomerID WHERE C2.Currency = 'EUR' AND Y2.Date BETWEEN '201201' AND '201212') AS ConsumptionDifference;\t----- bird -----\tdebit_card_specializing",
    "4": "SELECT SUBSTR(Date, 1, 4) AS Year, SUM(Consumption) AS TotalConsumption FROM yearmonth WHERE CustomerID IN (SELECT CustomerID FROM customers WHERE Currency = 'CZK') GROUP BY Year ORDER BY TotalConsumption DESC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "5": "SELECT Date, MAX(Consumption) FROM yearmonth AS Y INNER JOIN customers AS C ON Y.CustomerID = C.CustomerID WHERE C.Segment = 'SME' AND Y.Date BETWEEN '201301' AND '201312' GROUP BY Date ORDER BY Consumption DESC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "6": "SELECT \n    (SELECT AVG(Consumption) FROM yearmonth WHERE Date BETWEEN '201301' AND '201312' AND CustomerID = (SELECT CustomerID FROM customers WHERE Segment = 'SME' ORDER BY Consumption LIMIT 1)) -\n    (SELECT AVG(Consumption) FROM yearmonth WHERE Date BETWEEN '201301' AND '201312' AND CustomerID = (SELECT CustomerID FROM customers WHERE Segment = 'LAM' ORDER BY Consumption LIMIT 1)) AS Difference_SME_LAM,\n    (SELECT AVG(Consumption) FROM yearmonth WHERE Date BETWEEN '201301' AND '201312' AND CustomerID = (SELECT CustomerID FROM customers WHERE Segment = 'LAM' ORDER BY Consumption LIMIT 1)) -\n    (SELECT AVG(Consumption) FROM yearmonth WHERE Date BETWEEN '201301' AND '201312' AND CustomerID = (SELECT CustomerID FROM customers WHERE Segment = 'KAM' ORDER BY Consumption LIMIT 1)) AS Difference_LAM_KAM,\n    (SELECT AVG(Consumption) FROM yearmonth WHERE Date BETWEEN '201301' AND '201312' AND CustomerID = (SELECT CustomerID FROM customers WHERE Segment = 'KAM' ORDER BY Consumption LIMIT 1)) -\n    (SELECT AVG(Consumption) FROM yearmonth WHERE Date BETWEEN '201301' AND '201312' AND CustomerID = (SELECT CustomerID FROM customers WHERE Segment = 'SME' ORDER BY Consumption LIMIT 1)) AS Difference_KAM_SME;\t----- bird -----\tdebit_card_specializing",
    "7": "SELECT Segment, \n       100.0 * (SUM(CASE WHEN substr(Date, 1, 4) = '2013' THEN Consumption ELSE 0 END) - \n                 SUM(CASE WHEN substr(Date, 1, 4) = '2012' THEN Consumption ELSE 0 END)) / \n       NULLIF(SUM(CASE WHEN substr(Date, 1, 4) = '2013' THEN Consumption ELSE 0 END), 0) AS Percentage_Change\nFROM yearmonth \nJOIN customers ON yearmonth.CustomerID = customers.CustomerID\nWHERE substr(Date, 1, 4) IN ('2012', '2013')\nGROUP BY Segment\nORDER BY Percentage_Change DESC;\t----- bird -----\tdebit_card_specializing",
    "8": "SELECT SUM(Consumption) FROM yearmonth WHERE CustomerID = 6 AND Date BETWEEN '201308' AND '201311';\t----- bird -----\tdebit_card_specializing",
    "9": "SELECT \n    (SELECT COUNT(*) FROM gasstations WHERE Country = 'CZE' AND Segment = 'discount') - \n    (SELECT COUNT(*) FROM gasstations WHERE Country = 'SVK' AND Segment = 'discount') AS more_discount_gas_stations;\t----- bird -----\tdebit_card_specializing",
    "10": "SELECT \n    (SELECT COUNT(DISTINCT T1.CustomerID) FROM transactions_1k AS T1 \n     INNER JOIN customers AS C ON T1.CustomerID = C.CustomerID \n     WHERE C.Segment = 'SME' AND C.Currency = 'CZK') \n    - \n    (SELECT COUNT(DISTINCT T2.CustomerID) FROM transactions_1k AS T2 \n     INNER JOIN customers AS C ON T2.CustomerID = C.CustomerID \n     WHERE C.Segment = 'SME' AND C.Currency = 'EUR') AS SMEs_difference;\t----- bird -----\tdebit_card_specializing",
    "11": "SELECT (COUNT(CASE WHEN Consumption > 46.73 THEN 1 END) * 100.0) / COUNT(*) \nFROM yearmonth AS Y INNER JOIN customers AS C ON Y.CustomerID = C.CustomerID \nWHERE C.Segment = 'LAM';\t----- bird -----\tdebit_card_specializing",
    "12": "SELECT CAST(SUM(CASE WHEN Consumption > 528.3 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) \nFROM yearmonth \nWHERE Date LIKE '201202%';\t----- bird -----\tdebit_card_specializing",
    "13": "SELECT MAX(Consumption) FROM yearmonth WHERE Date LIKE '2012%'\t----- bird -----\tdebit_card_specializing",
    "14": "SELECT DISTINCT P.Description \nFROM products AS P \nINNER JOIN transactions_1k AS T ON P.ProductID = T.ProductID \nINNER JOIN yearmonth AS Y ON T.CustomerID = Y.CustomerID \nWHERE Y.Date LIKE '201309%';\t----- bird -----\tdebit_card_specializing",
    "15": "SELECT DISTINCT G.Country \nFROM gasstations AS G \nINNER JOIN transactions_1k AS T ON G.GasStationID = T.GasStationID \nINNER JOIN yearmonth AS Y ON T.CustomerID = Y.CustomerID \nWHERE Y.Date LIKE '201306%';\t----- bird -----\tdebit_card_specializing",
    "16": "SELECT COUNT(DISTINCT C.CustomerID) \nFROM customers AS C \nINNER JOIN yearmonth AS Y ON C.CustomerID = Y.CustomerID \nWHERE C.Currency = 'EUR' AND Y.Consumption > 1000;\t----- bird -----\tdebit_card_specializing",
    "17": "SELECT DISTINCT P.Description \nFROM products AS P \nINNER JOIN transactions_1k AS T ON P.ProductID = T.ProductID \nINNER JOIN gasstations AS G ON T.GasStationID = G.GasStationID \nWHERE G.Country = 'CZE';\t----- bird -----\tdebit_card_specializing",
    "18": "SELECT DISTINCT Time FROM transactions_1k WHERE GasStationID IN (SELECT GasStationID FROM gasstations WHERE ChainID = 11)\t----- bird -----\tdebit_card_specializing",
    "19": "SELECT COUNT(T1.TransactionID) \nFROM transactions_1k AS T1 \nINNER JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID \nWHERE T2.Country = 'CZE' AND T1.Date > '2012-01-01';\t----- bird -----\tdebit_card_specializing",
    "20": "SELECT C.Currency \nFROM transactions_1k AS T \nINNER JOIN customers AS C ON T.CustomerID = C.CustomerID \nWHERE T.Date = '2012-08-24' AND T.Time = '16:25:00';\t----- bird -----\tdebit_card_specializing",
    "21": "SELECT T1.Segment FROM customers AS T1 INNER JOIN transactions_1k AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Date = '2012-08-23' AND T2.Time = '21:20:00' LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "22": "SELECT COUNT(T1.TransactionID) FROM transactions_1k AS T1 \nINNER JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID \nWHERE T2.Country = 'CZE' AND T1.Date = '2012-08-26' AND T1.Time BETWEEN '08:00:00' AND '09:00:00';\t----- bird -----\tdebit_card_specializing",
    "23": "SELECT C.Currency FROM customers AS C \nINNER JOIN transactions_1k AS T ON C.CustomerID = T.CustomerID \nWHERE T.Amount = 548.4 AND T.Date = '2012-08-24';\t----- bird -----\tdebit_card_specializing",
    "24": "SELECT CAST(SUM(CASE WHEN Currency = 'EUR' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) \nFROM customers \nWHERE CustomerID IN (SELECT CustomerID FROM yearmonth WHERE Date = '2012-08-25');\t----- bird -----\tdebit_card_specializing",
    "25": "SELECT (T1.Consumption - T2.Consumption) / T1.Consumption AS consumption_decrease_rate \nFROM yearmonth AS T1 \nINNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID \nWHERE T1.Date = '2012' AND T2.Date = '2013' \nAND T1.CustomerID = (SELECT CustomerID FROM transactions_1k WHERE Amount = 634.8 AND Date = '2012-08-25');\t----- bird -----\tdebit_card_specializing",
    "26": "SELECT CAST(SUM(CASE WHEN Segment = 'premium' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) \nFROM customers \nWHERE Currency = 'SVK'\t----- bird -----\tdebit_card_specializing",
    "27": "SELECT SUM(Amount) AS TotalSpent, SUM(CASE WHEN Date LIKE '201201%' THEN Amount ELSE 0 END) AS January2012Spent FROM transactions_1k WHERE CustomerID = 38508;\t----- bird -----\tdebit_card_specializing",
    "28": "SELECT T1.CustomerID, AVG(T2.Price / T2.Amount) AS AveragePrice, T1.Currency\nFROM customers AS T1\nINNER JOIN transactions_1k AS T2 ON T1.CustomerID = T2.CustomerID\nGROUP BY T1.CustomerID\nORDER BY SUM(T2.Price) DESC\nLIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "29": "SELECT Y.CustomerID, Y.Consumption \nFROM yearmonth AS Y \nINNER JOIN transactions_1k AS T ON Y.CustomerID = T.CustomerID \nWHERE Y.Date = '201208' AND (T.Price / T.Amount) > 29.00 AND T.ProductID = 5;\t----- bird -----\tdebit_card_specializing",
    "30": "SELECT T2.major_name \nFROM member AS T1 \nINNER JOIN major AS T2 ON T1.link_to_major = T2.major_id \nWHERE T1.first_name = 'Angela' AND T1.last_name = 'Sanders'\t----- bird -----\tstudent_club",
    "31": "SELECT COUNT(T1.member_id) \nFROM member AS T1 \nINNER JOIN attendance AS T2 ON T1.member_id = T2.link_to_member \nINNER JOIN event AS T3 ON T2.link_to_event = T3.event_id \nWHERE T3.event_name = 'Women''s Soccer' AND T1.t_shirt_size = 'Medium';\t----- bird -----\tstudent_club",
    "32": "SELECT COUNT(DISTINCT E.event_id) FROM event AS E INNER JOIN attendance AS A ON E.event_id = A.link_to_event WHERE E.type = 'Meeting' GROUP BY E.event_id HAVING COUNT(A.link_to_member) > 10;\t----- bird -----\tstudent_club",
    "33": "SELECT event_name FROM event WHERE event_id IN (SELECT link_to_event FROM attendance GROUP BY link_to_event HAVING COUNT(link_to_member) > 20) AND type != 'fundraiser';\t----- bird -----\tstudent_club",
    "34": "SELECT SUM(amount) FROM income AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T2.position = 'Vice President'\t----- bird -----\tstudent_club",
    "35": "SELECT first_name || ' ' || last_name AS full_name FROM member AS T1 INNER JOIN zip_code AS T2 ON T1.zip = T2.zip_code WHERE T2.state = 'Illinois';\t----- bird -----\tstudent_club",
    "36": "SELECT T1.approved FROM expense AS T1 INNER JOIN event AS T2 ON T1.link_to_budget = T2.event_id WHERE T2.event_name = 'October Meeting' AND T2.event_date = '2019-10-08';\t----- bird -----\tstudent_club",
    "37": "SELECT AVG(T1.cost) FROM expense AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T2.first_name = 'Elijah' AND T2.last_name = 'Allen' AND (strftime('%m', T1.expense_date) = '09' OR strftime('%m', T1.expense_date) = '10');\t----- bird -----\tstudent_club",
    "38": "SELECT SUM(CASE WHEN substr(E.event_date, 1, 4) = '2019' THEN B.spent ELSE 0 END) - \n       SUM(CASE WHEN substr(E.event_date, 1, 4) = '2020' THEN B.spent ELSE 0 END) \nFROM event AS E \nINNER JOIN budget AS B ON E.event_id = B.link_to_event \nWHERE E.event_name = 'Student_Club';\t----- bird -----\tstudent_club",
    "39": "SELECT notes FROM income WHERE source = 'Fundraising' AND date_received = '2019-09-14'\t----- bird -----\tstudent_club",
    "40": "SELECT phone FROM member WHERE first_name = 'Carlo' AND last_name = 'Jacobs'\t----- bird -----\tstudent_club",
    "41": "SELECT E.status \nFROM event AS E \nINNER JOIN expense AS EXP ON E.event_id = EXP.link_to_budget \nWHERE EXP.expense_description = 'Post Cards, Posters' AND EXP.expense_date = '2019-8-20'\t----- bird -----\tstudent_club",
    "42": "SELECT T2.major_name FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.first_name = 'Brent' AND T1.last_name = 'Thomason'\t----- bird -----\tstudent_club",
    "43": "SELECT COUNT(*) FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.major_name = 'Business' AND T1.t_shirt_size = 'Medium';\t----- bird -----\tstudent_club",
    "44": "SELECT T2.department FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.position = 'President'\t----- bird -----\tstudent_club",
    "45": "SELECT date_received FROM income AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T2.first_name = 'Connor' AND T2.last_name = 'Hilton' AND T1.source = 'Dues'\t----- bird -----\tstudent_club",
    "46": "SELECT SUM(CASE WHEN T1.event_name = 'Yearly Kickoff' THEN T2.amount ELSE 0 END) * 1.0 / \n       NULLIF(SUM(CASE WHEN T1.event_name = 'October Meeting' THEN T2.amount ELSE 0 END), 0) \nFROM budget AS T2 \nINNER JOIN event AS T1 ON T2.link_to_event = T1.event_id \nWHERE T2.category = 'Advertisement';\t----- bird -----\tstudent_club",
    "47": "SELECT SUM(cost) FROM expense WHERE expense_description = 'Pizza'\t----- bird -----\tstudent_club",
    "48": "SELECT COUNT(DISTINCT city) FROM zip_code WHERE county = 'Orange County' AND state = 'Virginia'\t----- bird -----\tstudent_club",
    "49": "SELECT T2.major_name FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.phone = '809-555-3360';\t----- bird -----\tstudent_club",
    "50": "SELECT COUNT(T1.link_to_member) FROM attendance AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T2.event_name = 'Women''s Soccer'\t----- bird -----\tstudent_club",
    "51": "SELECT first_name || ' ' || last_name AS full_name \nFROM member \nWHERE link_to_major IN (SELECT major_id FROM major WHERE department = 'School of Applied Sciences, Technology and Education');\t----- bird -----\tstudent_club",
    "52": "SELECT event.event_name, MAX(spent * 1.0 / amount) AS spend_to_budget_ratio \nFROM event \nINNER JOIN budget ON event.event_id = budget.link_to_event \nWHERE event.status = 'Closed' \nGROUP BY event.event_name \nORDER BY spend_to_budget_ratio DESC \nLIMIT 1;\t----- bird -----\tstudent_club",
    "53": "SELECT MAX(spent) FROM budget;\t----- bird -----\tstudent_club",
    "54": "SELECT SUM(spent) FROM budget WHERE category = 'Food';\t----- bird -----\tstudent_club",
    "55": "SELECT T1.first_name || ' ' || T1.last_name AS full_name \nFROM member AS T1 \nINNER JOIN attendance AS T2 ON T1.member_id = T2.link_to_member \nGROUP BY T1.member_id \nHAVING COUNT(T2.link_to_event) > 7;\t----- bird -----\tstudent_club",
    "56": "SELECT m.first_name || ' ' || m.last_name AS full_name \nFROM member AS m \nINNER JOIN budget AS b ON m.member_id = b.link_to_member \nINNER JOIN event AS e ON b.link_to_event = e.event_id \nWHERE e.event_name = 'Yearly Kickoff';\t----- bird -----\tstudent_club",
    "57": "SELECT event.event_name FROM event INNER JOIN budget ON event.event_id = budget.link_to_event WHERE budget.spent = (SELECT MIN(spent) FROM budget)\t----- bird -----\tstudent_club",
    "58": "SELECT (SUM(T2.cost) * 100.0 / (SELECT SUM(cost) FROM expense)) AS percentage FROM expense AS T2 INNER JOIN budget AS T1 ON T2.link_to_budget = T1.budget_id INNER JOIN event AS T3 ON T1.link_to_event = T3.event_id WHERE T3.event_name = 'Yearly Kickoff'\t----- bird -----\tstudent_club",
    "59": "SELECT source FROM income WHERE date_received BETWEEN '2019-09-01' AND '2019-09-30' GROUP BY source ORDER BY SUM(amount) DESC LIMIT 1;\t----- bird -----\tstudent_club",
    "60": "SELECT COUNT(member_id) FROM member WHERE link_to_major = (SELECT major_id FROM major WHERE major_name = 'Physics Teaching')\t----- bird -----\tstudent_club",
    "61": "SELECT event_name FROM event AS E INNER JOIN budget AS B ON E.event_id = B.link_to_event WHERE B.category = 'Advertisement' AND B.spent = (SELECT MAX(spent) FROM budget WHERE category = 'Advertisement')\t----- bird -----\tstudent_club",
    "62": "SELECT COUNT(*) > 0 FROM attendance AS A \nINNER JOIN member AS M ON A.link_to_member = M.member_id \nINNER JOIN event AS E ON A.link_to_event = E.event_id \nWHERE M.first_name = 'Maya' AND M.last_name = 'Mclean' AND E.event_name = 'Women''s Soccer';\t----- bird -----\tstudent_club",
    "63": "SELECT cost FROM expense AS T1 INNER JOIN event AS T2 ON T1.link_to_budget = (SELECT budget_id FROM budget WHERE link_to_event = T2.event_id) WHERE T2.event_name = 'September Speaker' AND T1.expense_description = 'Posters';\t----- bird -----\tstudent_club",
    "64": "SELECT T1.event_name FROM event AS T1 INNER JOIN budget AS T2 ON T1.event_id = T2.link_to_event WHERE T1.status = 'Closed' AND T2.remaining < 0 ORDER BY T2.remaining ASC LIMIT 1;\t----- bird -----\tstudent_club",
    "65": "SELECT expense_description, SUM(cost) FROM expense AS T1 INNER JOIN budget AS T2 ON T1.link_to_budget = T2.budget_id INNER JOIN event AS T3 ON T2.link_to_event = T3.event_id WHERE T3.event_name = 'October Meeting' AND T1.approved = 'yes' GROUP BY expense_description;\t----- bird -----\tstudent_club",
    "66": "SELECT category, SUM(amount) AS total_budgeted FROM budget AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T2.event_name = 'April Speaker' GROUP BY category ORDER BY total_budgeted ASC;\t----- bird -----\tstudent_club",
    "67": "SELECT SUM(cost) FROM expense WHERE expense_date = '2019-08-20'\t----- bird -----\tstudent_club",
    "68": "SELECT T1.first_name || ' ' || T1.last_name AS full_name, SUM(T2.cost) AS total_cost \nFROM member AS T1 \nINNER JOIN expense AS T2 ON T1.member_id = T2.link_to_member \nWHERE T1.member_id = 'rec4BLdZHS2Blfp4v' \nGROUP BY T1.member_id;\t----- bird -----\tstudent_club",
    "69": "SELECT expense_description FROM expense WHERE link_to_member = (SELECT member_id FROM member WHERE first_name = 'Sacha' AND last_name = 'Harrison')\t----- bird -----\tstudent_club",
    "70": "SELECT DISTINCT type FROM event WHERE location = 'MU 215'\t----- bird -----\tstudent_club",
    "71": "SELECT M.last_name, MA.department, MA.college \nFROM member AS M \nINNER JOIN major AS MA ON M.link_to_major = MA.major_id \nWHERE MA.major_name = 'Environmental Engineering'\t----- bird -----\tstudent_club",
    "72": "SELECT B.category \nFROM budget AS B \nINNER JOIN event AS E ON B.link_to_event = E.event_id \nWHERE E.location = 'MU 215' AND E.type = 'Guest Speaker' AND B.spent = 0;\t----- bird -----\tstudent_club",
    "73": "SELECT CAST(SUM(CASE WHEN T2.amount = 50 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.member_id) \nFROM member AS T1 \nINNER JOIN income AS T2 ON T1.member_id = T2.link_to_member \nWHERE T1.t_shirt_size = 'Medium' AND T1.position = 'Member'\t----- bird -----\tstudent_club",
    "74": "SELECT event_name \nFROM event \nWHERE type = 'Game' AND status = 'Closed' AND event_date BETWEEN '2019-03-15' AND '2020-03-20';\t----- bird -----\tstudent_club",
    "75": "SELECT first_name || ' ' || last_name AS full_name, phone \nFROM member \nWHERE member_id IN (\n    SELECT link_to_member \n    FROM expense \n    GROUP BY link_to_member \n    HAVING SUM(cost) > AVG(cost)\n);\t----- bird -----\tstudent_club",
    "76": "SELECT M.first_name || ' ' || M.last_name AS full_name, E.cost \nFROM expense AS E \nINNER JOIN member AS M ON E.link_to_member = M.member_id \nWHERE E.expense_description = 'Water, Veggie tray, supplies'\t----- bird -----\tstudent_club",
    "77": "SELECT T1.first_name || ' ' || T1.last_name AS full_name, T2.amount \nFROM member AS T1 \nINNER JOIN income AS T2 ON T1.member_id = T2.link_to_member \nWHERE T2.date_received = '9/9/2019';\t----- bird -----\tstudent_club",
    "78": "SELECT \n    ABS(COUNT(CASE WHEN SEX = 'M' AND Admission = '+' THEN ID END) * 100.0 / NULLIF(COUNT(CASE WHEN SEX = 'M' AND Admission = '-' THEN ID END), 0)) AS percentage_deviation\nFROM Patient;\t----- bird -----\tthrombosis_prediction",
    "79": "SELECT CAST(COUNT(ID) AS REAL) * 100 / (SELECT COUNT(ID) FROM Patient WHERE SEX = 'F') FROM Patient WHERE Birthday > '1930-01-01' AND SEX = 'F'\t----- bird -----\tthrombosis_prediction",
    "80": "SELECT \n    CAST(COUNT(ID) AS REAL) / NULLIF((SELECT COUNT(ID) FROM Patient WHERE Diagnosis = 'SLE' AND Admission = '-'), 0) AS outpatient_to_inpatient_ratio \nFROM \n    Patient \nWHERE \n    Diagnosis = 'SLE' AND Admission = '+';\t----- bird -----\tthrombosis_prediction",
    "81": "SELECT Diagnosis, Date FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE P.ID = '30609';\t----- bird -----\tthrombosis_prediction",
    "82": "SELECT P.ID, P.SEX, P.Birthday FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE L.LDH > 500;\t----- bird -----\tthrombosis_prediction",
    "83": "SELECT Patient.ID, strftime('%Y', 'now') - strftime('%Y', Patient.Birthday) AS age FROM Patient INNER JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.RVVT = '+';\t----- bird -----\tthrombosis_prediction",
    "84": "SELECT P.ID, P.SEX, P.Diagnosis FROM Patient AS P INNER JOIN Examination AS E ON P.ID = E.ID WHERE E.Thrombosis = 2;\t----- bird -----\tthrombosis_prediction",
    "85": "SELECT COUNT(*) FROM Patient WHERE SEX = 'F' AND strftime('%Y', Description) = '1997' AND Admission = '-'\t----- bird -----\tthrombosis_prediction",
    "86": "SELECT COUNT(Patient.ID) \nFROM Patient \nINNER JOIN Examination ON Patient.ID = Examination.ID \nWHERE Examination.Thrombosis = 1 AND Patient.SEX = 'F' AND strftime('%Y', Examination.`Examination Date`) = '1997'\t----- bird -----\tthrombosis_prediction",
    "87": "SELECT E.Symptoms, E.Diagnosis FROM Patient AS P INNER JOIN Examination AS E ON P.ID = E.ID WHERE P.Birthday = (SELECT MAX(Birthday) FROM Patient) AND E.Symptoms IS NOT NULL;\t----- bird -----\tthrombosis_prediction",
    "88": "SELECT L.Date, (strftime('%Y', P.`First Date`) - strftime('%Y', P.Birthday)) AS age \nFROM Laboratory AS L \nINNER JOIN Patient AS P ON L.ID = P.ID \nWHERE P.Diagnosis = 'SJS' \nORDER BY L.Date ASC \nLIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "89": "SELECT CAST(SUM(CASE WHEN SEX = 'M' AND UA <= 8.0 THEN 1 ELSE 0 END) AS REAL) / NULLIF(SUM(CASE WHEN SEX = 'F' AND UA <= 6.5 THEN 1 ELSE 0 END), 0) AS male_to_female_ratio FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID;\t----- bird -----\tthrombosis_prediction",
    "90": "SELECT COUNT(DISTINCT P.ID) \nFROM Patient AS P \nINNER JOIN Examination AS E ON P.ID = E.ID \nWHERE strftime('%Y', E.`Examination Date`) BETWEEN '1990' AND '1993' \nAND (strftime('%Y', E.`Examination Date`) - strftime('%Y', P.Birthday)) < 18;\t----- bird -----\tthrombosis_prediction",
    "91": "SELECT (julianday(`Examination Date`) - julianday(Birthday)) / 365.25 AS age, Diagnosis FROM Patient AS P INNER JOIN Examination AS E ON P.ID = E.ID WHERE E.HGB = (SELECT MAX(HGB) FROM Examination)\t----- bird -----\tthrombosis_prediction",
    "92": "SELECT `aCL IgM` FROM Examination AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T2.Diagnosis = 'SLE' AND T2.Description = '1994-02-19' AND T1.`Examination Date` = '1993-11-12'\t----- bird -----\tthrombosis_prediction",
    "93": "SELECT (SUM(CASE WHEN L.Date LIKE '1981-11-%' THEN L.`T-CHO` ELSE 0 END) - SUM(CASE WHEN L.Date LIKE '1981-12-%' THEN L.`T-CHO` ELSE 0 END)) * 1.0 / NULLIF(SUM(CASE WHEN L.Date LIKE '1981-12-%' THEN L.`T-CHO` ELSE 0 END), 0) AS decrease_rate\nFROM Patient P\nJOIN Laboratory L ON P.ID = L.ID\nWHERE P.Birthday = '1959-02-18';\t----- bird -----\tthrombosis_prediction",
    "94": "SELECT DISTINCT ID FROM Laboratory WHERE Date BETWEEN '1987-07-06' AND '1996-01-31' AND GPT > 30 AND ALB < 4;\t----- bird -----\tthrombosis_prediction",
    "95": "SELECT COUNT(*) FROM Examination WHERE Thrombosis = 2 AND ANA = 'S' AND `aCL IgM` > (SELECT AVG(`aCL IgM`) * 1.2 FROM Examination WHERE Thrombosis = 2 AND ANA = 'S')\t----- bird -----\tthrombosis_prediction",
    "96": "SELECT DISTINCT P.ID, P.SEX, P.Birthday, P.Description, P.`First Date`, P.Admission, P.Diagnosis \nFROM Patient AS P \nINNER JOIN Laboratory AS L ON P.ID = L.ID \nWHERE P.Admission = '-' \nAND L.Date LIKE '1991-10%' \nAND L.`T-BIL` < 2.0;\t----- bird -----\tthrombosis_prediction",
    "97": "SELECT AVG(LAB.ALB) \nFROM Laboratory AS LAB \nINNER JOIN Patient AS PAT ON LAB.ID = PAT.ID \nWHERE PAT.SEX = 'F' AND LAB.PLT > 400 AND PAT.Diagnosis = 'SLE'\t----- bird -----\tthrombosis_prediction",
    "98": "SELECT COUNT(*) FROM Patient WHERE SEX = 'F' AND Diagnosis = 'APS';\t----- bird -----\tthrombosis_prediction",
    "99": "SELECT CAST(SUM(CASE WHEN SEX = 'F' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM Patient WHERE strftime('%Y', Birthday) = '1980' AND Diagnosis = 'RA'\t----- bird -----\tthrombosis_prediction",
    "100": "SELECT CASE \n           WHEN (UA > 8.0 AND SEX = 'M') OR (UA > 6.5 AND SEX = 'F') THEN 'Within normal range' \n           ELSE 'Not within normal range' \n       END AS uric_acid_status \nFROM Laboratory AS L \nINNER JOIN Patient AS P ON L.ID = P.ID \nWHERE P.ID = 57266;\t----- bird -----\tthrombosis_prediction",
    "101": "SELECT DISTINCT T1.ID FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'M' AND T2.GPT >= 60;\t----- bird -----\tthrombosis_prediction",
    "102": "SELECT P.Diagnosis \nFROM Patient AS P \nINNER JOIN Laboratory AS L ON P.ID = L.ID \nWHERE L.GPT > 60 \nORDER BY P.Birthday ASC;\t----- bird -----\tthrombosis_prediction",
    "103": "SELECT P.ID, P.SEX, P.Birthday \nFROM Patient AS P \nINNER JOIN Laboratory AS L ON P.ID = L.ID \nWHERE L.UN = 29;\t----- bird -----\tthrombosis_prediction",
    "104": "SELECT P.SEX, GROUP_CONCAT(DISTINCT P.ID) AS Patient_Ids \nFROM Patient AS P \nINNER JOIN Laboratory AS L ON P.ID = L.ID \nWHERE L.`T-BIL` >= 2.0 \nGROUP BY P.SEX;\t----- bird -----\tthrombosis_prediction",
    "105": "SELECT AVG(strftime('%Y', 'now') - strftime('%Y', Birthday)) FROM Patient WHERE SEX = 'M' AND ID IN (SELECT ID FROM Laboratory WHERE `T-CHO` >= 250);\t----- bird -----\tthrombosis_prediction",
    "106": "SELECT COUNT(DISTINCT P.ID) \nFROM Patient AS P \nINNER JOIN Laboratory AS L ON P.ID = L.ID \nWHERE L.TG >= 200 AND (SUBSTR(strftime('%Y', 'now'), 1, 4) - SUBSTR(strftime('%Y', P.Birthday), 1, 4)) > 50;\t----- bird -----\tthrombosis_prediction",
    "107": "SELECT COUNT(DISTINCT P.ID) \nFROM Patient AS P \nINNER JOIN Laboratory AS L ON P.ID = L.ID \nWHERE strftime('%Y', P.Birthday) BETWEEN '1936' AND '1956' \nAND P.SEX = 'M' \nAND L.CPK >= 250;\t----- bird -----\tthrombosis_prediction",
    "108": "SELECT P.ID, P.SEX, (STRFTIME('%Y', 'now') - STRFTIME('%Y', P.Birthday)) AS age \nFROM Patient AS P \nINNER JOIN Laboratory AS L ON P.ID = L.ID \nWHERE L.GLU >= 180 AND L.`T-CHO` < 250;\t----- bird -----\tthrombosis_prediction",
    "109": "SELECT P.ID, (STRFTIME('%Y', 'now') - STRFTIME('%Y', P.Birthday)) AS Age, P.Diagnosis \nFROM Patient AS P \nINNER JOIN Laboratory AS L ON P.ID = L.ID \nWHERE L.RBC < 3.5;\t----- bird -----\tthrombosis_prediction",
    "110": "SELECT P.ID, P.SEX FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE P.Diagnosis = 'SLE' AND L.HGB > 10 AND L.HGB < 17 ORDER BY P.Birthday ASC LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "111": "SELECT P.ID, (strftime('%Y', 'now') - strftime('%Y', P.Birthday)) AS age \nFROM Patient AS P \nINNER JOIN Laboratory AS L ON P.ID = L.ID \nWHERE L.HCT >= 52 \nGROUP BY P.ID \nHAVING COUNT(L.ID) > 2;\t----- bird -----\tthrombosis_prediction",
    "112": "SELECT \n    SUM(CASE WHEN PLT < 100 THEN 1 ELSE 0 END) AS lower_than_normal,\n    SUM(CASE WHEN PLT > 400 THEN 1 ELSE 0 END) AS higher_than_normal\nFROM Laboratory\nWHERE PLT <= 100 OR PLT >= 400;\t----- bird -----\tthrombosis_prediction",
    "113": "SELECT P.ID, P.SEX, P.Birthday, P.Admission, P.Diagnosis \nFROM Patient AS P \nINNER JOIN Laboratory AS L ON P.ID = L.ID \nWHERE strftime('%Y', L.Date) = '1984' \nAND (strftime('%Y', 'now') - strftime('%Y', P.Birthday)) < 50 \nAND L.PLT BETWEEN 100 AND 400;\t----- bird -----\tthrombosis_prediction",
    "114": "SELECT CAST(SUM(CASE WHEN P.SEX = 'F' AND L.PT >= 14 THEN 1 ELSE 0 END) AS REAL) * 100 / SUM(CASE WHEN L.PT >= 14 THEN 1 ELSE 0 END) \nFROM Patient P \nINNER JOIN Laboratory L ON P.ID = L.ID \nWHERE SUBSTR(date('now'), 1, 4) - SUBSTR(P.Birthday, 1, 4) > 55;\t----- bird -----\tthrombosis_prediction",
    "115": "SELECT COUNT(DISTINCT P.ID) \nFROM Patient AS P \nINNER JOIN Laboratory AS L ON P.ID = L.ID \nWHERE P.SEX = 'M' \nAND L.WBC > 3.5 AND L.WBC < 9.0 \nAND (L.FG <= 150 OR L.FG >= 450);\t----- bird -----\tthrombosis_prediction",
    "116": "SELECT COUNT(DISTINCT ID) FROM Laboratory WHERE IGG >= 2000;\t----- bird -----\tthrombosis_prediction",
    "117": "SELECT COUNT(*) FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE L.IGG > 900 AND L.IGG < 2000 AND L.Symptoms IS NOT NULL;\t----- bird -----\tthrombosis_prediction",
    "118": "SELECT COUNT(DISTINCT P.ID) \nFROM Patient AS P \nINNER JOIN Laboratory AS L ON P.ID = L.ID \nWHERE L.IGA > 80 AND L.IGA < 500 \nAND DATE(P.`First Date`) >= '1990-01-01';\t----- bird -----\tthrombosis_prediction",
    "119": "SELECT Diagnosis FROM Laboratory WHERE IGM <= 40 OR IGM >= 400 GROUP BY Diagnosis ORDER BY COUNT(*) DESC LIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "120": "SELECT COUNT(*) FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE L.CRP = '+' AND P.Description IS NULL;\t----- bird -----\tthrombosis_prediction",
    "121": "SELECT COUNT(*) FROM Patient WHERE ID IN (SELECT ID FROM Laboratory WHERE CRE >= 1.5) AND (strftime('%Y', 'now') - strftime('%Y', Birthday)) < 70;\t----- bird -----\tthrombosis_prediction",
    "122": "SELECT COUNT(DISTINCT P.ID) \nFROM Patient AS P \nINNER JOIN Laboratory AS L ON P.ID = L.ID \nWHERE L.RNP IN ('-', '+-') AND P.Admission = '+';\t----- bird -----\tthrombosis_prediction",
    "123": "SELECT COUNT(*) \nFROM Patient AS P \nINNER JOIN Examination AS E ON P.ID = E.ID \nWHERE E.ANA IN ('-', '+-') AND E.Thrombosis = 0;\t----- bird -----\tthrombosis_prediction",
    "124": "SELECT COUNT(DISTINCT P.ID) \nFROM Patient AS P \nINNER JOIN Laboratory AS L ON P.ID = L.ID \nWHERE P.SEX = 'F' AND L.SC170 IN ('negative', '0') AND L.Symptoms IS NULL;\t----- bird -----\tthrombosis_prediction",
    "125": "SELECT COUNT(DISTINCT P.ID) FROM Patient AS P \nINNER JOIN Laboratory AS L ON P.ID = L.ID \nWHERE L.CENTROMEA IN ('-', '+-') AND L.SSB IN ('-', '+-') AND P.SEX = 'M';\t----- bird -----\tthrombosis_prediction",
    "126": "SELECT MIN(P.Birthday) FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE L.GOT >= 60;\t----- bird -----\tthrombosis_prediction",
    "127": "SELECT COUNT(DISTINCT P.ID) \nFROM Patient AS P \nINNER JOIN Examination AS E ON P.ID = E.ID \nINNER JOIN Laboratory AS L ON P.ID = L.ID \nWHERE L.CPK < 250 AND (E.KCT = '+' OR E.RVVT = '+' OR E.LAC = '+');\t----- bird -----\tthrombosis_prediction",
    "128": "SELECT T1.name FROM League AS T1 INNER JOIN Match AS T2 ON T1.id = T2.league_id WHERE T2.season = '2015/2016' GROUP BY T1.name ORDER BY SUM(T2.home_team_goal + T2.away_team_goal) DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "129": "SELECT T.team_long_name FROM Team AS T \nINNER JOIN Match AS M ON T.team_api_id = M.away_team_api_id \nINNER JOIN League AS L ON M.league_id = L.id \nWHERE L.name = 'Scotland Premier League' AND M.season = '2009/2010' \nGROUP BY T.team_long_name \nHAVING COUNT(*) = (SELECT MAX(away_wins) FROM \n                   (SELECT COUNT(*) AS away_wins FROM Match \n                    WHERE away_team_api_id = T.team_api_id \n                    AND away_team_goal > home_team_goal \n                    AND season = '2009/2010' \n                    GROUP BY away_team_api_id));\t----- bird -----\teuropean_football_2",
    "130": "SELECT team_api_id, buildUpPlaySpeed FROM Team_Attributes ORDER BY buildUpPlaySpeed DESC LIMIT 4;\t----- bird -----\teuropean_football_2",
    "131": "SELECT L.name \nFROM Match M \nINNER JOIN League L ON M.league_id = L.id \nWHERE M.season = '2015/2016' \nGROUP BY L.id \nORDER BY SUM(CASE WHEN M.home_team_goal = M.away_team_goal THEN 1 ELSE 0 END) DESC \nLIMIT 1;\t----- bird -----\teuropean_football_2",
    "132": "SELECT DATETIME('now') - P.birthday AS age FROM Player_Attributes AS PA INNER JOIN Player AS P ON PA.player_api_id = P.player_api_id WHERE PA.sprint_speed >= 97 AND PA.date BETWEEN '2013-01-01' AND '2015-12-31';\t----- bird -----\teuropean_football_2",
    "133": "SELECT T1.name, COUNT(T2.id) AS match_count FROM League AS T1 INNER JOIN Match AS T2 ON T1.id = T2.league_id GROUP BY T1.id ORDER BY match_count DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "134": "SELECT team_fifa_api_id FROM Team_Attributes WHERE buildUpPlaySpeed > 50 AND buildUpPlaySpeed < 60;\t----- bird -----\teuropean_football_2",
    "135": "SELECT T.team_long_name \nFROM Team_Attributes AS T \nJOIN Team AS T2 ON T.team_fifa_api_id = T2.team_fifa_api_id \nWHERE T.buildUpPlayPassing > (SELECT AVG(buildUpPlayPassing) FROM Team_Attributes WHERE buildUpPlayPassing IS NOT NULL AND strftime('%Y', date) = '2012') \nAND strftime('%Y', T.date) = '2012';\t----- bird -----\teuropean_football_2",
    "136": "SELECT CAST(SUM(CASE WHEN PA.preferred_foot = 'left' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(P.player_fifa_api_id) \nFROM Player AS P \nINNER JOIN Player_Attributes AS PA ON P.player_fifa_api_id = PA.player_fifa_api_id \nWHERE P.birthday BETWEEN '1987-01-01' AND '1992-12-31'\t----- bird -----\teuropean_football_2",
    "137": "SELECT AVG(T1.long_shots) FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.player_name = 'Ahmed Samir Farag'\t----- bird -----\teuropean_football_2",
    "138": "SELECT T.player_name, AVG(PA.heading_accuracy) AS average_heading_accuracy \nFROM Player AS T \nINNER JOIN Player_Attributes AS PA ON T.player_fifa_api_id = PA.player_fifa_api_id \nWHERE T.height > 180 \nGROUP BY T.player_name \nORDER BY average_heading_accuracy DESC \nLIMIT 10;\t----- bird -----\teuropean_football_2",
    "139": "SELECT L.name FROM League AS L \nJOIN Match AS M ON L.id = M.league_id \nWHERE M.season = '2009/2010' \nGROUP BY L.name \nHAVING AVG(M.home_team_goal) > AVG(M.away_team_goal);\t----- bird -----\teuropean_football_2",
    "140": "SELECT player_name FROM Player WHERE substr(birthday, 1, 7) = '1970-10';\t----- bird -----\teuropean_football_2",
    "141": "SELECT overall_rating FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.player_name = 'Gabriel Tamas' AND strftime('%Y', T1.date) = '2011'\t----- bird -----\teuropean_football_2",
    "142": "SELECT AVG(home_team_goal) FROM Match AS M INNER JOIN Country AS C ON M.country_id = C.id WHERE C.name = 'Poland' AND M.season = '2010/2011';\t----- bird -----\teuropean_football_2",
    "143": "SELECT player_api_id, AVG(finishing) AS average_finishing \nFROM Player_Attributes \nWHERE player_api_id IN (\n    SELECT player_api_id \n    FROM Player \n    WHERE height = (SELECT MAX(height) FROM Player) \n    OR height = (SELECT MIN(height) FROM Player)\n) \nGROUP BY player_api_id \nORDER BY average_finishing DESC \nLIMIT 1;\t----- bird -----\teuropean_football_2",
    "144": "SELECT AVG(T2.overall_rating) FROM Player_Attributes AS T2 INNER JOIN Player AS T1 ON T2.player_api_id = T1.player_api_id WHERE strftime('%Y', T2.date) >= '2010' AND strftime('%Y', T2.date) <= '2015' AND T1.height > 170;\t----- bird -----\teuropean_football_2",
    "145": "SELECT ABS(SUM(CASE WHEN P.player_name = 'Abdou Diallo' THEN PA.ball_control ELSE 0 END) / COUNT(CASE WHEN P.player_name = 'Abdou Diallo' THEN PA.id ELSE NULL END) - SUM(CASE WHEN P.player_name = 'Aaron Appindangoye' THEN PA.ball_control ELSE 0 END) / COUNT(CASE WHEN P.player_name = 'Aaron Appindangoye' THEN PA.id ELSE NULL END)) AS ball_control_difference \nFROM Player_Attributes AS PA \nJOIN Player AS P ON PA.player_api_id = P.player_api_id;\t----- bird -----\teuropean_football_2",
    "146": "SELECT player_name FROM Player WHERE birthday = (SELECT MIN(birthday) FROM Player WHERE player_name IN ('Aaron Lennon', 'Abdelaziz Barrada'))\t----- bird -----\teuropean_football_2",
    "147": "SELECT player_name FROM Player WHERE height = (SELECT MAX(height) FROM Player);\t----- bird -----\teuropean_football_2",
    "148": "SELECT COUNT(*) FROM Player_Attributes WHERE preferred_foot = 'left' AND attacking_work_rate = 'low';\t----- bird -----\teuropean_football_2",
    "149": "SELECT COUNT(DISTINCT pa.player_api_id) \nFROM Player_Attributes AS pa \nJOIN Player AS p ON pa.player_api_id = p.player_api_id \nWHERE pa.defensive_work_rate = 'high' AND strftime('%Y', p.birthday) < '1986'\t----- bird -----\teuropean_football_2",
    "150": "SELECT P.player_name \nFROM Player AS P \nINNER JOIN Player_Attributes AS PA ON P.player_api_id = PA.player_api_id \nWHERE PA.volleys > 70 AND PA.dribbling > 70;\t----- bird -----\teuropean_football_2",
    "151": "SELECT COUNT(*) FROM Match AS M INNER JOIN League AS L ON M.league_id = L.id WHERE L.name = 'Belgium Jupiler League' AND SUBSTR(M.date, 1, 7) = '2009-04'\t----- bird -----\teuropean_football_2",
    "152": "SELECT T2.name FROM League AS T2 INNER JOIN (SELECT league_id, COUNT(*) AS match_count FROM Match WHERE season = '2008/2009' GROUP BY league_id ORDER BY match_count DESC LIMIT 1) AS T4 ON T2.id = T4.league_id;\t----- bird -----\teuropean_football_2",
    "153": "SELECT (CAST((SELECT overall_rating FROM Player_Attributes WHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Ariel Borysiuk')) AS REAL) - CAST((SELECT overall_rating FROM Player_Attributes WHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Paulin Puel')) AS REAL)) / CAST((SELECT overall_rating FROM Player_Attributes WHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Paulin Puel')) AS REAL) * 100 AS percentage_difference;\t----- bird -----\teuropean_football_2",
    "154": "SELECT AVG(T1.overall_rating) FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.player_name = 'Pietro Marino'\t----- bird -----\teuropean_football_2",
    "155": "SELECT MAX(TA.chanceCreationPassing), TA.chanceCreationPassingClass \nFROM Team_Attributes AS TA \nINNER JOIN Team AS T ON TA.team_fifa_api_id = T.team_fifa_api_id \nWHERE T.team_long_name = 'Ajax'\t----- bird -----\teuropean_football_2",
    "156": "SELECT player_name FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.overall_rating = 77 AND T1.date LIKE '2016-06-23%' ORDER BY T2.birthday ASC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "157": "SELECT overall_rating FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.player_name = 'Aaron Mooy' AND T1.date LIKE '2016-02-04%'\t----- bird -----\teuropean_football_2",
    "158": "SELECT T1.attacking_work_rate FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.player_name = 'Francesco Migliore' AND T1.date LIKE '2015-05-01%'\t----- bird -----\teuropean_football_2",
    "159": "SELECT date FROM Player_Attributes WHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Kevin Constant') AND crossing = (SELECT MAX(crossing) FROM Player_Attributes WHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Kevin Constant'));\t----- bird -----\teuropean_football_2",
    "160": "SELECT T1.buildUpPlayPassingClass FROM Team_Attributes AS T1 INNER JOIN Team AS T2 ON T1.team_fifa_api_id = T2.team_fifa_api_id WHERE T2.team_long_name = 'FC Lorient' AND T1.date LIKE '2010-02-22%'\t----- bird -----\teuropean_football_2",
    "161": "SELECT T1.defenceAggressionClass FROM Team_Attributes AS T1 INNER JOIN Team AS T2 ON T1.team_fifa_api_id = T2.team_fifa_api_id WHERE T2.team_long_name = 'Hannover 96' AND T1.date LIKE '2015-09-10%';\t----- bird -----\teuropean_football_2",
    "162": "SELECT AVG(T1.overall_rating) FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.player_name = 'Marko Arnautovic' AND SUBSTR(T1.date, 1, 10) BETWEEN '2007-02-22' AND '2016-04-21'\t----- bird -----\teuropean_football_2",
    "163": "SELECT (SELECT overall_rating FROM Player_Attributes WHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Landon Donovan') AND date = '2013-07-12') - (SELECT overall_rating FROM Player_Attributes WHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Jordan Bowery') AND date = '2013-07-12') / (SELECT overall_rating FROM Player_Attributes WHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Landon Donovan') AND date = '2013-07-12') * 100 AS percentage;\t----- bird -----\teuropean_football_2",
    "164": "SELECT player_name FROM Player ORDER BY height DESC LIMIT 1;\t----- bird -----\teuropean_football_2",
    "165": "SELECT P.player_name FROM Player AS P INNER JOIN Player_Attributes AS PA ON P.player_api_id = PA.player_api_id WHERE PA.overall_rating = (SELECT MAX(overall_rating) FROM Player_Attributes)\t----- bird -----\teuropean_football_2",
    "166": "SELECT player_name FROM Player INNER JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id WHERE attacking_work_rate = 'high';\t----- bird -----\teuropean_football_2",
    "167": "SELECT T.team_short_name \nFROM Team_Attributes AS TA \nJOIN Team AS T ON T.team_fifa_api_id = TA.team_fifa_api_id \nWHERE TA.chanceCreationPassingClass = 'Safe';\t----- bird -----\teuropean_football_2",
    "168": "SELECT COUNT(*) FROM Player WHERE player_name LIKE 'Aaron%' AND birthday > '1990-12-31'\t----- bird -----\teuropean_football_2",
    "169": "SELECT ABS((SELECT jumping FROM Player_Attributes WHERE player_api_id = 6) - (SELECT jumping FROM Player_Attributes WHERE player_api_id = 23)) AS jumping_difference;\t----- bird -----\teuropean_football_2",
    "170": "SELECT player_api_id FROM Player_Attributes WHERE potential = (SELECT MIN(potential) FROM Player_Attributes) AND preferred_foot = 'right' LIMIT 4;\t----- bird -----\teuropean_football_2",
    "171": "SELECT COUNT(*) FROM Player_Attributes WHERE crossing = (SELECT MAX(crossing) FROM Player_Attributes) AND preferred_foot = 'left'\t----- bird -----\teuropean_football_2",
    "172": "SELECT home_team_goal, away_team_goal \nFROM Match AS M \nINNER JOIN League AS L ON M.league_id = L.id \nWHERE M.date LIKE '2008-09-24%' AND L.name = 'Belgium Jupiler League'\t----- bird -----\teuropean_football_2",
    "173": "SELECT buildUpPlaySpeedClass FROM Team_Attributes AS T1 INNER JOIN Team AS T2 ON T1.team_fifa_api_id = T2.team_fifa_api_id WHERE T2.team_long_name = 'KSV Cercle Brugge'\t----- bird -----\teuropean_football_2",
    "174": "SELECT finishing, curve FROM Player_Attributes WHERE player_api_id = (SELECT player_api_id FROM Player ORDER BY weight DESC LIMIT 1)\t----- bird -----\teuropean_football_2",
    "175": "SELECT L.name, COUNT(M.id) AS game_count \nFROM Match AS M \nINNER JOIN League AS L ON M.league_id = L.id \nWHERE M.season = '2015/2016' \nGROUP BY L.name \nORDER BY game_count DESC \nLIMIT 4;\t----- bird -----\teuropean_football_2",
    "176": "SELECT T3.team_long_name FROM Match AS T1 INNER JOIN Team AS T3 ON T1.away_team_api_id = T3.team_api_id WHERE T1.away_team_goal = (SELECT MAX(away_team_goal) FROM Match)\t----- bird -----\teuropean_football_2",
    "177": "SELECT player_name FROM Player INNER JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id WHERE overall_rating = (SELECT MAX(overall_rating) FROM Player_Attributes);\t----- bird -----\teuropean_football_2",
    "178": "SELECT (CAST(COUNT(CASE WHEN P.height < 180 AND PA.overall_rating > 70 THEN 1 END) AS REAL) * 100) / COUNT(P.id) FROM Player AS P INNER JOIN Player_Attributes AS PA ON P.player_api_id = PA.player_api_id;\t----- bird -----\teuropean_football_2",
    "179": "SELECT T3.driverRef FROM qualifying AS T1 INNER JOIN drivers AS T3 ON T1.driverId = T3.driverId WHERE T1.raceId = 20 AND T1.position IS NOT NULL ORDER BY T1.q1 DESC LIMIT 5;\t----- bird -----\tformula_1",
    "180": "SELECT T1.surname FROM drivers AS T1 INNER JOIN qualifying AS T2 ON T1.driverId = T2.driverId WHERE T2.raceId = 19 AND T2.q2 = (SELECT MIN(q2) FROM qualifying WHERE raceId = 19)\t----- bird -----\tformula_1",
    "181": "SELECT T2.name FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T2.country = 'Germany';\t----- bird -----\tformula_1",
    "182": "SELECT T1.lat, T1.lng \nFROM circuits AS T1 \nINNER JOIN races AS T2 ON T1.circuitId = T2.circuitId \nWHERE T2.name = 'Australian Grand Prix'\t----- bird -----\tformula_1",
    "183": "SELECT T1.lat, T1.lng \nFROM circuits AS T1 \nINNER JOIN races AS T2 ON T1.circuitId = T2.circuitId \nWHERE T2.name = 'Abu Dhabi Grand Prix'\t----- bird -----\tformula_1",
    "184": "SELECT T2.q1 \nFROM qualifying AS T2 \nINNER JOIN drivers AS T1 ON T2.driverId = T1.driverId \nWHERE T2.raceId = 354 AND T1.forename = 'Bruno' AND T1.surname = 'Senna'\t----- bird -----\tformula_1",
    "185": "SELECT T1.number FROM qualifying AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T2.raceId = 903 AND T1.q3 LIKE '0:01:54'\t----- bird -----\tformula_1",
    "186": "SELECT COUNT(DISTINCT T1.driverId) \nFROM results AS T1 \nINNER JOIN races AS T2 ON T1.raceId = T2.raceId \nWHERE T2.name = 'Bahrain Grand Prix' AND T1.time IS NULL;\t----- bird -----\tformula_1",
    "187": "SELECT T1.driverId, T1.forename, T1.surname, T1.dob FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId WHERE T2.raceId = 592 AND T2.time IS NOT NULL ORDER BY T1.dob ASC LIMIT 1\t----- bird -----\tformula_1",
    "188": "SELECT T1.forename, T1.surname, T1.url FROM drivers AS T1 INNER JOIN lapTimes AS T2 ON T1.driverId = T2.driverId WHERE T2.raceId = 161 AND T2.time LIKE '0:01:27';\t----- bird -----\tformula_1",
    "189": "SELECT lat, lng FROM circuits AS T1 INNER JOIN races AS T2 ON T1.circuitId = T2.circuitId WHERE T2.name = 'Malaysian Grand Prix'\t----- bird -----\tformula_1",
    "190": "SELECT T3.url \nFROM constructorResults AS T1 \nINNER JOIN constructors AS T2 ON T1.constructorId = T2.constructorId \nINNER JOIN races AS T3 ON T1.raceId = T3.raceId \nWHERE T1.raceId = 9 AND T1.points = (SELECT MAX(points) FROM constructorResults WHERE raceId = 9);\t----- bird -----\tformula_1",
    "191": "SELECT T3.code FROM qualifying AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId INNER JOIN drivers AS T3 ON T1.driverId = T3.driverId WHERE T2.round = 45 AND T1.q3 LIKE '0:01:33%'\t----- bird -----\tformula_1",
    "192": "SELECT url FROM seasons WHERE year = (SELECT year FROM races WHERE raceId = 901);\t----- bird -----\tformula_1",
    "193": "SELECT T1.driverId, T2.dob FROM results AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T1.raceId = 872 AND T1.time IS NOT NULL ORDER BY T2.dob DESC LIMIT 1;\t----- bird -----\tformula_1",
    "194": "SELECT T1.nationality FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId WHERE T2.fastestLapSpeed = (SELECT MAX(fastestLapSpeed) FROM results)\t----- bird -----\tformula_1",
    "195": "SELECT (T1.fastestLapSpeed - T2.fastestLapSpeed) * 100 / T2.fastestLapSpeed AS percent_faster \nFROM results AS T1 \nJOIN results AS T2 ON T1.raceId = 853 AND T2.raceId = 854 \nJOIN drivers AS D ON T1.driverId = D.driverId \nWHERE D.forename = 'Paul' AND D.surname = 'di Resta';\t----- bird -----\tformula_1",
    "196": "SELECT CAST(COUNT(T1.driverId) AS REAL) * 100 / COUNT(*) AS completion_rate FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T2.date = '1983-07-16' AND T1.time IS NOT NULL;\t----- bird -----\tformula_1",
    "197": "SELECT name FROM races WHERE year = (SELECT MIN(year) FROM races) AND strftime('%m', date) = (SELECT strftime('%m', MIN(date)) FROM races WHERE year = (SELECT MIN(year) FROM races));\t----- bird -----\tformula_1",
    "198": "SELECT D.forename, D.surname, MAX(DS.points) FROM driverStandings AS DS INNER JOIN drivers AS D ON DS.driverId = D.driverId GROUP BY DS.driverId ORDER BY MAX(DS.points) DESC LIMIT 1;\t----- bird -----\tformula_1",
    "199": "SELECT D.forename, D.surname, R.name \nFROM lapTimes AS L \nINNER JOIN drivers AS D ON L.driverId = D.driverId \nINNER JOIN races AS R ON L.raceId = R.raceId \nWHERE L.milliseconds = (SELECT MIN(milliseconds) FROM lapTimes)\t----- bird -----\tformula_1",
    "200": "SELECT AVG(T1.milliseconds) FROM lapTimes AS T1 \nINNER JOIN races AS T2 ON T1.raceId = T2.raceId \nINNER JOIN drivers AS T3 ON T1.driverId = T3.driverId \nWHERE T3.forename = 'Lewis' AND T3.surname = 'Hamilton' \nAND T2.name = 'Malaysian Grand Prix';\t----- bird -----\tformula_1",
    "201": "SELECT CAST(COUNT(CASE WHEN T2.position > 1 THEN 1 END) AS REAL) * 100 / COUNT(T2.raceId) FROM results AS T2 INNER JOIN drivers AS T1 ON T2.driverId = T1.driverId WHERE T1.surname = 'Hamilton' AND T2.raceId IN (SELECT raceId FROM races WHERE year >= 2010);\t----- bird -----\tformula_1",
    "202": "SELECT T1.forename || ' ' || T1.surname AS full_name, T1.nationality, MAX(T2.points) AS max_points \nFROM drivers AS T1 \nINNER JOIN driverStandings AS T2 ON T1.driverId = T2.driverId \nWHERE T2.wins = (SELECT MAX(wins) FROM driverStandings) \nGROUP BY T1.driverId \nORDER BY COUNT(T2.wins) DESC \nLIMIT 1;\t----- bird -----\tformula_1",
    "203": "SELECT forename, surname, (strftime('%Y', 'now') - strftime('%Y', dob)) AS age FROM drivers WHERE nationality = 'Japanese' ORDER BY dob DESC LIMIT 1;\t----- bird -----\tformula_1",
    "204": "SELECT R.name AS race_name, C.name AS circuit_name, C.location \nFROM races AS R \nINNER JOIN circuits AS C ON R.circuitId = C.circuitId \nWHERE strftime('%m', R.date) = '09' AND strftime('%Y', R.date) = '2005'\t----- bird -----\tformula_1",
    "205": "SELECT T2.name, T2.date FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId INNER JOIN drivers AS T3 ON T1.driverId = T3.driverId WHERE T3.forename = 'Alex' AND T3.surname = 'Yoong' AND T1.position < 20;\t----- bird -----\tformula_1",
    "206": "SELECT T2.name, T2.year FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId INNER JOIN drivers AS T3 ON T1.driverId = T3.driverId WHERE T3.forename = 'Michael' AND T3.surname = 'Schumacher' AND T1.fastestLap = 1 ORDER BY T1.milliseconds ASC LIMIT 1;\t----- bird -----\tformula_1",
    "207": "SELECT T1.year, T2.points \nFROM races AS T1 \nINNER JOIN results AS T2 ON T1.raceId = T2.raceId \nINNER JOIN drivers AS T3 ON T2.driverId = T3.driverId \nWHERE T3.forename = 'Lewis' AND T3.surname = 'Hamilton' \nORDER BY T1.year ASC \nLIMIT 1;\t----- bird -----\tformula_1",
    "208": "SELECT CAST(SUM(CASE WHEN circuits.country = 'Germany' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM races INNER JOIN circuits ON races.circuitId = circuits.circuitId WHERE races.name = 'European Grand Prix'\t----- bird -----\tformula_1",
    "209": "SELECT lat, lng FROM circuits WHERE name = 'Silverstone Circuit'\t----- bird -----\tformula_1",
    "210": "SELECT circuitRef FROM circuits WHERE name = 'Marina Bay Street Circuit'\t----- bird -----\tformula_1",
    "211": "SELECT nationality FROM drivers ORDER BY dob ASC LIMIT 1\t----- bird -----\tformula_1",
    "212": "SELECT T3.driverRef FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId INNER JOIN drivers AS T3 ON T1.driverId = T3.driverId WHERE T2.year = 2007 AND T2.name = 'Canadian Grand Prix' AND T1.positionOrder = 1;\t----- bird -----\tformula_1",
    "213": "SELECT T1.raceId FROM results AS T1 \nINNER JOIN drivers AS T2 ON T1.driverId = T2.driverId \nWHERE T2.forename = 'Lewis' AND T2.surname = 'Hamilton' \nORDER BY T1.rank ASC \nLIMIT 1;\t----- bird -----\tformula_1",
    "214": "SELECT MAX(fastestLapSpeed) FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T2.name = 'Spanish Grand Prix' AND T2.year = 2009;\t----- bird -----\tformula_1",
    "215": "SELECT positionOrder FROM results AS R INNER JOIN races AS R2 ON R.raceId = R2.raceId INNER JOIN drivers AS D ON R.driverId = D.driverId WHERE D.forename = 'Lewis' AND D.surname = 'Hamilton' AND R2.name = 'Chinese Grand Prix' AND R2.year = 2008;\t----- bird -----\tformula_1",
    "216": "SELECT T3.time FROM results AS T3 INNER JOIN races AS T2 ON T3.raceId = T2.raceId WHERE T2.year = 2008 AND T2.name = 'Chinese Grand Prix' AND T3.rank = 2;\t----- bird -----\tformula_1",
    "217": "SELECT COUNT(DISTINCT T1.driverId) \nFROM results AS T1 \nINNER JOIN races AS T2 ON T1.raceId = T2.raceId \nWHERE T2.year = 2008 AND T2.round = 2 AND T1.time IS NOT NULL;\t----- bird -----\tformula_1",
    "218": "SELECT \n    (CAST(SUBSTR(champion.time, 1, 2) AS INTEGER) * 3600 + \n    CAST(SUBSTR(champion.time, 4, 2) AS INTEGER) * 60 + \n    CAST(SUBSTR(champion.time, 7, 2) AS INTEGER) + \n    CAST(SUBSTR(champion.time, 10, 3) AS INTEGER) / 1000) AS champion_time,\n    (CAST(SUBSTR(last_driver.time, 1, 2) AS INTEGER) * 3600 + \n    CAST(SUBSTR(last_driver.time, 4, 2) AS INTEGER) * 60 + \n    CAST(SUBSTR(last_driver.time, 7, 2) AS INTEGER) + \n    CAST(SUBSTR(last_driver.time, 10, 3) AS INTEGER) / 1000) AS last_driver_time,\n    100 * ((last_driver.time + champion.time - champion.time) / (last_driver_time)) AS percentage_faster\nFROM \n    results AS champion\nJOIN \n    results AS last_driver ON champion.raceId = last_driver.raceId \nWHERE \n    champion.positionOrder = 1 \n    AND last_driver.positionOrder = (SELECT COUNT(*) FROM results WHERE raceId = champion.raceId) \n    AND champion.raceId = (SELECT raceId FROM races WHERE year = 2008 AND name = 'Australian Grand Prix') \n    AND champion.time IS NOT NULL \n    AND last_driver.time IS NOT NULL;\t----- bird -----\tformula_1",
    "219": "SELECT COUNT(*) FROM circuits WHERE location = 'Adelaide' AND country = 'Australia';\t----- bird -----\tformula_1",
    "220": "SELECT MAX(T1.points) FROM constructorStandings AS T1 INNER JOIN constructors AS T2 ON T1.constructorId = T2.constructorId WHERE T2.nationality = 'British';\t----- bird -----\tformula_1",
    "221": "SELECT C.name FROM constructors AS C \nINNER JOIN constructorResults AS CR ON C.constructorId = CR.constructorId \nWHERE CR.raceId = 291 AND CR.points = 0;\t----- bird -----\tformula_1",
    "222": "SELECT COUNT(DISTINCT T1.constructorId) \nFROM constructorResults AS T1 \nINNER JOIN constructors AS T2 ON T1.constructorId = T2.constructorId \nWHERE T2.nationality = 'Japanese' AND T1.points = 0 \nGROUP BY T1.constructorId \nHAVING COUNT(T1.raceId) = 2;\t----- bird -----\tformula_1",
    "223": "SELECT CAST(COUNT(T1.driverId) AS REAL) * 100 / (SELECT COUNT(T2.driverId) FROM results AS T2 INNER JOIN drivers AS T3 ON T2.driverId = T3.driverId WHERE T3.nationality = 'Japanese' AND T2.raceId IN (SELECT raceId FROM races WHERE year BETWEEN 2007 AND 2009)) FROM results AS T1 INNER JOIN drivers AS T3 ON T1.driverId = T3.driverId WHERE T3.nationality = 'Japanese' AND T1.time IS NOT NULL AND T1.raceId IN (SELECT raceId FROM races WHERE year BETWEEN 2007 AND 2009);\t----- bird -----\tformula_1",
    "224": "SELECT AVG(\n    (CAST(SUBSTR(r.time, 1, 2) AS INTEGER) * 3600) +\n    (CAST(SUBSTR(r.time, 4, 2) AS INTEGER) * 60) +\n    CAST(SUBSTR(r.time, 7, 2) AS INTEGER)\n) AS average_time_seconds\nFROM results AS r\nINNER JOIN races AS ra ON r.raceId = ra.raceId\nWHERE r.time IS NOT NULL AND ra.year < 1975 AND r.positionOrder = 1;\t----- bird -----\tformula_1",
    "225": "SELECT fastestLap FROM results WHERE raceId IN (SELECT raceId FROM driverStandings WHERE driverId IN (SELECT driverId FROM driverStandings WHERE year = 2009 AND position = 1));\t----- bird -----\tformula_1",
    "226": "SELECT AVG(fastestLapSpeed) FROM results AS R INNER JOIN races AS Ra ON R.raceId = Ra.raceId WHERE Ra.name = 'Spanish Grand Prix' AND Ra.year = 2009;\t----- bird -----\tformula_1",
    "227": "SELECT CAST(COUNT(DISTINCT T1.driverId) AS REAL) * 100 / (SELECT COUNT(DISTINCT driverId) FROM results AS T3 INNER JOIN races AS T4 ON T3.raceId = T4.raceId WHERE T4.year BETWEEN 2000 AND 2005) FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId WHERE strftime('%Y', T1.dob) < '1985' AND T2.laps > 50;\t----- bird -----\tformula_1",
    "228": "SELECT COUNT(DISTINCT T1.driverId) \nFROM lapTimes AS T1 \nINNER JOIN drivers AS T2 ON T1.driverId = T2.driverId \nWHERE T1.milliseconds < 120000 AND T2.nationality = 'French';\t----- bird -----\tformula_1",
    "229": "SELECT driverRef FROM drivers WHERE nationality = 'American';\t----- bird -----\tformula_1",
    "230": "SELECT driverId, COUNT(*) AS netherlandic_count FROM drivers WHERE nationality = 'Netherlands' AND driverId IN (SELECT driverId FROM drivers ORDER BY dob DESC LIMIT 3) GROUP BY driverId;\t----- bird -----\tformula_1",
    "231": "SELECT driverRef FROM drivers WHERE dob = (SELECT MIN(dob) FROM drivers WHERE nationality = 'German')\t----- bird -----\tformula_1",
    "232": "SELECT driverId, code FROM drivers WHERE strftime('%Y', dob) = '1971' AND driverId IN (SELECT driverId FROM results WHERE fastestLapTime IS NOT NULL)\t----- bird -----\tformula_1",
    "233": "SELECT COUNT(*) FROM results WHERE raceId > 50 AND raceId < 100 AND statusId = 2 AND time IS NOT NULL;\t----- bird -----\tformula_1",
    "234": "SELECT COUNT(raceId) AS times_held, location, lat, lng FROM circuits INNER JOIN races ON circuits.circuitId = races.circuitId WHERE circuits.country = 'Austria' GROUP BY location, lat, lng;\t----- bird -----\tformula_1",
    "235": "SELECT T1.dob, T2.date, T2.time FROM drivers AS T1 INNER JOIN qualifying AS T3 ON T1.driverId = T3.driverId INNER JOIN races AS T2 ON T3.raceId = T2.raceId WHERE T1.dob = (SELECT MAX(dob) FROM drivers) ORDER BY T2.date ASC LIMIT 1;\t----- bird -----\tformula_1",
    "236": "SELECT T1.forename || ' ' || T1.surname AS full_name, AVG(T2.milliseconds) AS avg_duration \nFROM drivers AS T1 \nINNER JOIN pitStops AS T2 ON T1.driverId = T2.driverId \nWHERE T1.nationality = 'German' AND strftime('%Y', T1.dob) BETWEEN '1980' AND '1985' \nGROUP BY T1.driverId \nORDER BY avg_duration ASC \nLIMIT 3;\t----- bird -----\tformula_1",
    "237": "SELECT D.forename, D.surname, R.time FROM results AS R INNER JOIN races AS RAC ON R.raceId = RAC.raceId INNER JOIN drivers AS D ON R.driverId = D.driverId WHERE RAC.year = 2008 AND RAC.name = 'Canadian Grand Prix' AND R.positionOrder = 1;\t----- bird -----\tformula_1",
    "238": "SELECT T2.constructorRef, T2.url FROM results AS T1 INNER JOIN constructors AS T2 ON T1.constructorId = T2.constructorId WHERE T1.raceId = (SELECT raceId FROM races WHERE year = 2009 AND name = 'Singapore Grand Prix') AND T1.time = (SELECT MAX(time) FROM results WHERE raceId = (SELECT raceId FROM races WHERE year = 2009 AND name = 'Singapore Grand Prix'))\t----- bird -----\tformula_1",
    "239": "SELECT T2.power_name \nFROM superhero AS T1 \nINNER JOIN hero_power AS T3 ON T1.id = T3.hero_id \nINNER JOIN superpower AS T2 ON T3.power_id = T2.id \nWHERE T1.superhero_name = '3-D Man'\t----- bird -----\tsuperhero",
    "240": "SELECT SUM(T1.points) AS total_points, T2.name, T2.nationality \nFROM constructorStandings AS T1 \nINNER JOIN constructors AS T2 ON T1.constructorId = T2.constructorId \nINNER JOIN races AS T3 ON T1.raceId = T3.raceId \nWHERE T3.name = 'Monaco Grand Prix' AND T3.year BETWEEN 1980 AND 2010 \nGROUP BY T1.constructorId \nORDER BY total_points DESC \nLIMIT 1;\t----- bird -----\tformula_1",
    "241": "SELECT D.forename || ' ' || D.surname FROM qualifying AS Q \nINNER JOIN races AS R ON Q.raceId = R.raceId \nINNER JOIN drivers AS D ON Q.driverId = D.driverId \nWHERE R.round = 3 AND R.year = 2008 AND Q.position = 1\t----- bird -----\tformula_1",
    "242": "SELECT forename || ' ' || surname AS full_name, nationality, (SELECT name FROM races WHERE raceId = (SELECT raceId FROM results WHERE driverId = (SELECT driverId FROM drivers ORDER BY dob DESC LIMIT 1) LIMIT 1)) AS first_race_name FROM drivers WHERE dob = (SELECT MAX(dob) FROM drivers)\t----- bird -----\tformula_1",
    "243": "SELECT COUNT(*) FROM results WHERE driverId = (SELECT driverId FROM results AS R INNER JOIN races AS RA ON R.raceId = RA.raceId WHERE RA.name = 'Canadian Grand Prix' AND R.statusId = 3 GROUP BY driverId ORDER BY COUNT(*) DESC LIMIT 1) AND statusId = 3;\t----- bird -----\tformula_1",
    "244": "SELECT T1.forename || ' ' || T1.surname AS full_name FROM drivers AS T1 INNER JOIN lapTimes AS T2 ON T1.driverId = T2.driverId WHERE T2.time = (SELECT MIN(time) FROM lapTimes) LIMIT 20;\t----- bird -----\tformula_1",
    "245": "SELECT L.raceId, L.driverId, L.lap, L.time \nFROM lapTimes AS L \nJOIN races AS R ON L.raceId = R.raceId \nJOIN circuits AS C ON R.circuitId = C.circuitId \nWHERE C.country = 'Italy' \nORDER BY L.time ASC;\t----- bird -----\tformula_1",
    "246": "SELECT COUNT(DISTINCT T1.id) \nFROM superhero AS T1 \nINNER JOIN hero_power AS T2 ON T1.id = T2.hero_id \nINNER JOIN superpower AS T3 ON T2.power_id = T3.id \nWHERE T3.power_name = 'Super Strength' AND T1.height_cm > 200;\t----- bird -----\tsuperhero",
    "247": "SELECT COUNT(DISTINCT T1.id) \nFROM superhero AS T1 \nINNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id \nINNER JOIN hero_power AS T3 ON T1.id = T3.hero_id \nINNER JOIN superpower AS T4 ON T3.power_id = T4.id \nWHERE T2.colour = 'Blue' AND T4.power_name = 'Agility'\t----- bird -----\tsuperhero",
    "248": "SELECT T1.superhero_name \nFROM superhero AS T1 \nINNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id \nINNER JOIN colour AS T3 ON T1.hair_colour_id = T3.id \nWHERE T2.colour = 'Blue' AND T3.colour = 'Blond';\t----- bird -----\tsuperhero",
    "249": "SELECT T1.superhero_name, T1.height_cm FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T2.publisher_name = 'Marvel Comics' ORDER BY T1.height_cm DESC;\t----- bird -----\tsuperhero",
    "250": "SELECT C.colour, COUNT(S.id) AS superhero_count\nFROM superhero AS S\nINNER JOIN publisher AS P ON S.publisher_id = P.id\nINNER JOIN colour AS C ON S.eye_colour_id = C.id\nWHERE P.publisher_name = 'Marvel Comics'\nGROUP BY C.colour\nORDER BY superhero_count DESC;\t----- bird -----\tsuperhero",
    "251": "SELECT T1.superhero_name, T1.full_name \nFROM superhero AS T1 \nINNER JOIN publisher AS T2 ON T1.publisher_id = T2.id \nINNER JOIN hero_power AS T3 ON T1.id = T3.hero_id \nINNER JOIN superpower AS T4 ON T3.power_id = T4.id \nWHERE T2.publisher_name = 'Marvel Comics' AND T4.power_name = 'Super Strength'\t----- bird -----\tsuperhero",
    "252": "SELECT P.publisher_name \nFROM publisher AS P \nINNER JOIN superhero AS S ON P.id = S.publisher_id \nINNER JOIN hero_attribute AS HA ON S.id = HA.hero_id \nINNER JOIN attribute AS A ON HA.attribute_id = A.id \nWHERE A.attribute_name = 'Speed' \nAND HA.attribute_value = (SELECT MIN(attribute_value) FROM hero_attribute AS HA2 \n                          INNER JOIN attribute AS A2 ON HA2.attribute_id = A2.id \n                          WHERE A2.attribute_name = 'Speed');\t----- bird -----\tsuperhero",
    "253": "SELECT COUNT(*) FROM superhero AS S \nINNER JOIN publisher AS P ON S.publisher_id = P.id \nINNER JOIN colour AS C ON S.eye_colour_id = C.id \nWHERE P.publisher_name = 'Marvel Comics' AND C.colour = 'Gold';\t----- bird -----\tsuperhero",
    "254": "SELECT S.superhero_name FROM superhero S INNER JOIN hero_attribute HA ON S.id = HA.hero_id INNER JOIN attribute A ON HA.attribute_id = A.id WHERE A.attribute_name = 'Intelligence' AND HA.attribute_value = (SELECT MIN(attribute_value) FROM hero_attribute HA2 INNER JOIN attribute A2 ON HA2.attribute_id = A2.id WHERE A2.attribute_name = 'Intelligence')\t----- bird -----\tsuperhero",
    "255": "SELECT T4.race FROM superhero AS T1 \nINNER JOIN race AS T4 ON T1.race_id = T4.id \nWHERE T1.superhero_name = 'Copycat'\t----- bird -----\tsuperhero",
    "256": "SELECT T1.superhero_name FROM superhero AS T1 \nINNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id \nINNER JOIN attribute AS T3 ON T2.attribute_id = T3.id \nWHERE T3.attribute_name = 'Durability' AND T2.attribute_value < 50;\t----- bird -----\tsuperhero",
    "257": "SELECT T1.superhero_name \nFROM superhero AS T1 \nINNER JOIN hero_power AS T2 ON T1.id = T2.hero_id \nINNER JOIN superpower AS T3 ON T2.power_id = T3.id \nWHERE T3.power_name = 'Death Touch'\t----- bird -----\tsuperhero",
    "258": "SELECT COUNT(DISTINCT SH.id) \nFROM superhero AS SH \nINNER JOIN gender AS G ON SH.gender_id = G.id \nINNER JOIN hero_attribute AS HA ON SH.id = HA.hero_id \nINNER JOIN attribute AS A ON HA.attribute_id = A.id \nWHERE G.gender = 'Female' AND A.attribute_name = 'Strength' AND HA.attribute_value = 100;\t----- bird -----\tsuperhero",
    "259": "SELECT \n    CAST(SUM(CASE WHEN A.alignment = 'Bad' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(S.id) AS percentage,\n    COUNT(CASE WHEN A.alignment = 'Bad' THEN 1 END) AS marvel_bad_superheroes\nFROM \n    superhero AS S \nINNER JOIN \n    alignment AS A ON S.alignment_id = A.id \nINNER JOIN \n    publisher AS P ON S.publisher_id = P.id \nWHERE \n    P.publisher_name = 'Marvel Comics';\t----- bird -----\tsuperhero",
    "260": "SELECT ABS(COUNT(CASE WHEN P.publisher_name = 'Marvel Comics' THEN S.id END) - COUNT(CASE WHEN P.publisher_name = 'DC Comics' THEN S.id END)) AS difference \nFROM superhero AS S \nINNER JOIN publisher AS P ON S.publisher_id = P.id;\t----- bird -----\tsuperhero",
    "261": "SELECT id FROM publisher WHERE publisher_name = 'Star Trek'\t----- bird -----\tsuperhero",
    "262": "SELECT COUNT(*) FROM superhero WHERE full_name IS NULL;\t----- bird -----\tsuperhero",
    "263": "SELECT AVG(T1.weight_kg) FROM superhero AS T1 INNER JOIN gender AS T2 ON T1.gender_id = T2.id WHERE T2.gender = 'Female'\t----- bird -----\tsuperhero",
    "264": "SELECT DISTINCT SP.power_name \nFROM superhero AS SH \nINNER JOIN gender AS G ON SH.gender_id = G.id \nINNER JOIN hero_power AS HP ON SH.id = HP.hero_id \nINNER JOIN superpower AS SP ON HP.power_id = SP.id \nWHERE G.gender = 'Male' \nLIMIT 5;\t----- bird -----\tsuperhero",
    "265": "SELECT superhero_name FROM superhero WHERE height_cm BETWEEN 170 AND 190 AND eye_colour_id IS NULL;\t----- bird -----\tsuperhero",
    "266": "SELECT C.colour FROM superhero AS S \nINNER JOIN colour AS C ON S.hair_colour_id = C.id \nINNER JOIN race AS R ON S.race_id = R.id \nWHERE S.height_cm = 185 AND R.race = 'human';\t----- bird -----\tsuperhero",
    "267": "SELECT CAST(SUM(CASE WHEN P.publisher_name = 'Marvel Comics' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) \nFROM superhero AS S \nINNER JOIN publisher AS P ON S.publisher_id = P.id \nWHERE S.height_cm BETWEEN 150 AND 180;\t----- bird -----\tsuperhero",
    "268": "SELECT superhero_name FROM superhero AS T1 INNER JOIN gender AS T2 ON T1.gender_id = T2.id WHERE T2.gender = 'Male' AND T1.weight_kg > (SELECT AVG(weight_kg) * 0.79 FROM superhero)\t----- bird -----\tsuperhero",
    "269": "SELECT T2.power_name FROM hero_power AS T1 INNER JOIN superpower AS T2 ON T1.power_id = T2.id WHERE T1.hero_id = 1;\t----- bird -----\tsuperhero",
    "270": "SELECT COUNT(DISTINCT hero_id) FROM hero_power AS T1 INNER JOIN superpower AS T2 ON T1.power_id = T2.id WHERE T2.power_name = 'Stealth'\t----- bird -----\tsuperhero",
    "271": "SELECT T1.full_name FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id INNER JOIN attribute AS T3 ON T2.attribute_id = T3.id WHERE T3.attribute_name = 'strength' AND T2.attribute_value = (SELECT MAX(attribute_value) FROM hero_attribute AS T4 INNER JOIN attribute AS T5 ON T4.attribute_id = T5.id WHERE T5.attribute_name = 'strength')\t----- bird -----\tsuperhero",
    "272": "SELECT T1.superhero_name \nFROM superhero AS T1 \nINNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id \nINNER JOIN publisher AS T3 ON T1.publisher_id = T3.id \nWHERE T2.attribute_value = (SELECT MAX(attribute_value) FROM hero_attribute AS T4 \n                            INNER JOIN superhero AS T5 ON T4.hero_id = T5.id \n                            WHERE T4.attribute_id = (SELECT id FROM attribute WHERE attribute_name = 'durability') \n                            AND T5.publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Dark Horse Comics')) \nAND T3.publisher_name = 'Dark Horse Comics';\t----- bird -----\tsuperhero",
    "273": "SELECT T3.colour AS eye_colour, T4.colour AS hair_colour, T5.colour AS skin_colour \nFROM superhero AS T1 \nINNER JOIN gender AS T2 ON T1.gender_id = T2.id \nINNER JOIN colour AS T3 ON T1.eye_colour_id = T3.id \nINNER JOIN colour AS T4 ON T1.hair_colour_id = T4.id \nINNER JOIN colour AS T5 ON T1.skin_colour_id = T5.id \nINNER JOIN publisher AS T6 ON T1.publisher_id = T6.id \nWHERE T2.gender = 'Female' AND T6.publisher_name = 'Dark Horse Comics';\t----- bird -----\tsuperhero",
    "274": "SELECT T1.superhero_name, T2.publisher_name \nFROM superhero AS T1 \nINNER JOIN publisher AS T2 ON T1.publisher_id = T2.id \nWHERE T1.hair_colour_id = T1.skin_colour_id AND T1.hair_colour_id = T1.eye_colour_id;\t----- bird -----\tsuperhero",
    "275": "SELECT CAST(SUM(CASE WHEN C.colour = 'Blue' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) \nFROM superhero AS S \nINNER JOIN gender AS G ON S.gender_id = G.id \nINNER JOIN colour AS C ON S.skin_colour_id = C.id \nWHERE G.gender = 'Female'\t----- bird -----\tsuperhero",
    "276": "SELECT COUNT(T1.power_id) FROM hero_power AS T1 INNER JOIN superhero AS T2 ON T1.hero_id = T2.id WHERE T2.superhero_name = 'Amazo'\t----- bird -----\tsuperhero",
    "277": "SELECT height_cm FROM superhero AS S INNER JOIN colour AS C ON S.eye_colour_id = C.id WHERE C.colour = 'Amber'\t----- bird -----\tsuperhero",
    "278": "SELECT superhero_name \nFROM superhero \nINNER JOIN colour AS eyes ON superhero.eye_colour_id = eyes.id \nINNER JOIN colour AS hair ON superhero.hair_colour_id = hair.id \nWHERE eyes.colour = 'Black' AND hair.colour = 'Black';\t----- bird -----\tsuperhero",
    "279": "SELECT superhero_name FROM superhero INNER JOIN alignment ON superhero.alignment_id = alignment.id WHERE alignment.alignment = 'Neutral'\t----- bird -----\tsuperhero",
    "280": "SELECT COUNT(DISTINCT hero_id) FROM hero_attribute INNER JOIN attribute ON hero_attribute.attribute_id = attribute.id WHERE attribute.attribute_name = 'Strength' AND hero_attribute.attribute_value = (SELECT MAX(attribute_value) FROM hero_attribute INNER JOIN attribute ON hero_attribute.attribute_id = attribute.id WHERE attribute.attribute_name = 'Strength')\t----- bird -----\tsuperhero",
    "281": "SELECT CAST(SUM(CASE WHEN T1.gender_id = (SELECT id FROM gender WHERE gender = 'Female') THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) \nFROM superhero AS T1 \nINNER JOIN publisher AS T2 ON T1.publisher_id = T2.id \nWHERE T2.publisher_name = 'Marvel Comics'\t----- bird -----\tsuperhero",
    "282": "SELECT (SELECT weight_kg FROM superhero WHERE full_name = 'Emil Blonsky') - (SELECT weight_kg FROM superhero WHERE full_name = 'Charles Chandler');\t----- bird -----\tsuperhero",
    "283": "SELECT AVG(height_cm) FROM superhero;\t----- bird -----\tsuperhero",
    "284": "SELECT T2.power_name FROM superhero AS T1 INNER JOIN hero_power AS T3 ON T1.id = T3.hero_id INNER JOIN superpower AS T2 ON T3.power_id = T2.id WHERE T1.superhero_name = 'Abomination'\t----- bird -----\tsuperhero",
    "285": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id INNER JOIN attribute AS T3 ON T2.attribute_id = T3.id WHERE T3.attribute_name = 'Speed' AND T2.attribute_value = (SELECT MAX(attribute_value) FROM hero_attribute WHERE attribute_id = (SELECT id FROM attribute WHERE attribute_name = 'Speed'))\t----- bird -----\tsuperhero",
    "286": "SELECT A.attribute_name, HA.attribute_value \nFROM superhero AS S \nINNER JOIN hero_attribute AS HA ON S.id = HA.hero_id \nINNER JOIN attribute AS A ON HA.attribute_id = A.id \nWHERE S.superhero_name = '3-D Man'\t----- bird -----\tsuperhero",
    "287": "SELECT T1.superhero_name \nFROM superhero AS T1 \nINNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id \nINNER JOIN colour AS T3 ON T1.hair_colour_id = T3.id \nWHERE T2.colour = 'Blue' AND T3.colour = 'Brown' \t----- bird -----\tsuperhero",
    "288": "SELECT P.publisher_name \nFROM superhero AS S \nINNER JOIN publisher AS P ON S.publisher_id = P.id \nWHERE S.superhero_name IN ('Hawkman', 'Karate Kid', 'Speedy');\t----- bird -----\tsuperhero",
    "289": "SELECT CAST(SUM(CASE WHEN C.colour = 'Blue' THEN 1 ELSE 0 END) AS REAL) * 100.0 / COUNT(*) \nFROM superhero AS S \nINNER JOIN colour AS C ON S.eye_colour_id = C.id;\t----- bird -----\tsuperhero",
    "290": "SELECT CAST(SUM(CASE WHEN T1.gender_id = 1 THEN 1 ELSE 0 END) AS REAL) / NULLIF(SUM(CASE WHEN T1.gender_id = 2 THEN 1 ELSE 0 END), 0) AS ratio FROM superhero AS T1;\t----- bird -----\tsuperhero",
    "291": "SELECT C.colour FROM superhero AS S INNER JOIN colour AS C ON S.eye_colour_id = C.id WHERE S.full_name = 'Karen Beecher-Duncan'\t----- bird -----\tsuperhero",
    "292": "SELECT \n    SUM(CASE WHEN T1.eye_colour_id = 7 THEN 1 ELSE 0 END) - SUM(CASE WHEN T1.eye_colour_id = 1 THEN 1 ELSE 0 END) \nFROM \n    superhero AS T1 \nWHERE \n    T1.weight_kg = 0 OR T1.weight_kg IS NULL;\t----- bird -----\tsuperhero",
    "293": "SELECT COUNT(*) \nFROM superhero AS S \nINNER JOIN alignment AS A ON S.alignment_id = A.id \nINNER JOIN colour AS C ON S.skin_colour_id = C.id \nWHERE A.alignment = 'Bad' AND C.colour = 'Green';\t----- bird -----\tsuperhero",
    "294": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T3.power_name = 'Wind Control' ORDER BY T1.superhero_name;\t----- bird -----\tsuperhero",
    "295": "SELECT T4.gender FROM superhero AS T1 \nINNER JOIN hero_power AS T2 ON T1.id = T2.hero_id \nINNER JOIN superpower AS T3 ON T2.power_id = T3.id \nINNER JOIN gender AS T4 ON T1.gender_id = T4.id \nWHERE T3.power_name = 'Phoenix Force'\t----- bird -----\tsuperhero",
    "296": "SELECT ABS(SUM(CASE WHEN T1.publisher_name = 'DC Comics' THEN 1 ELSE 0 END) - SUM(CASE WHEN T1.publisher_name = 'Marvel Comics' THEN 1 ELSE 0 END)) AS superhero_difference FROM publisher AS T1 INNER JOIN superhero AS T2 ON T1.id = T2.publisher_id WHERE T1.publisher_name IN ('DC Comics', 'Marvel Comics');\t----- bird -----\tsuperhero",
    "297": "SELECT DisplayName, Reputation FROM users WHERE DisplayName IN ('Harlan', 'Jarrod Dixon') ORDER BY Reputation DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "298": "SELECT DisplayName FROM users WHERE strftime('%Y', CreationDate) = '2011'\t----- bird -----\tcodebase_community",
    "299": "SELECT COUNT(*) FROM users WHERE LastAccessDate > '2014-09-01'\t----- bird -----\tcodebase_community",
    "300": "SELECT U.DisplayName FROM posts AS P INNER JOIN users AS U ON P.OwnerUserId = U.Id WHERE P.Title = 'Eliciting priors from experts'\t----- bird -----\tcodebase_community",
    "301": "SELECT COUNT(*) FROM posts WHERE OwnerUserId = (SELECT Id FROM users WHERE DisplayName = 'csgillespie')\t----- bird -----\tcodebase_community",
    "302": "SELECT T1.LastEditorDisplayName FROM posts AS T1 WHERE T1.Title = 'Examples for teaching: Correlation does not mean causation'\t----- bird -----\tcodebase_community",
    "303": "SELECT COUNT(*) FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.Age > 65 AND T1.Score >= 20;\t----- bird -----\tcodebase_community",
    "304": "SELECT Body FROM posts WHERE Id = (SELECT ExcerptPostId FROM tags WHERE TagName = 'bayesian')\t----- bird -----\tcodebase_community",
    "305": "SELECT AVG(T1.Score) FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.DisplayName = 'csgillespie'\t----- bird -----\tcodebase_community",
    "306": "SELECT CAST(SUM(CASE WHEN U.Age > 65 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) \nFROM posts AS P \nINNER JOIN users AS U ON P.OwnerUserId = U.Id \nWHERE P.Score > 5;\t----- bird -----\tcodebase_community",
    "307": "SELECT FavoriteCount FROM posts WHERE Id = (SELECT PostId FROM comments WHERE UserId = 3025 AND CreationDate = '2014/4/23 20:29:39.0')\t----- bird -----\tcodebase_community",
    "308": "SELECT CASE WHEN T1.ClosedDate IS NULL THEN 'Not well-finished' ELSE 'Well-finished' END AS PostStatus \nFROM posts AS T1 \nWHERE T1.Id = (SELECT PostId FROM comments WHERE UserId = 23853 AND CreationDate = '2013-07-12 09:08:18.0');\t----- bird -----\tcodebase_community",
    "309": "SELECT COUNT(*) FROM posts WHERE OwnerUserId = (SELECT Id FROM users WHERE DisplayName = 'Tiago Pasqualini');\t----- bird -----\tcodebase_community",
    "310": "SELECT T1.DisplayName FROM users AS T1 INNER JOIN votes AS T2 ON T1.Id = T2.UserId WHERE T2.Id = 6347;\t----- bird -----\tcodebase_community",
    "311": "SELECT CAST(COUNT(posts.Id) AS REAL) / COUNT(votes.Id) FROM posts LEFT JOIN votes ON posts.Id = votes.PostId WHERE posts.OwnerUserId = 24;\t----- bird -----\tcodebase_community",
    "312": "SELECT ViewCount FROM posts WHERE Title = 'Integration of Weka and/or RapidMiner into Informatica PowerCenter/Developer';\t----- bird -----\tcodebase_community",
    "313": "SELECT Text FROM comments WHERE Score = 17;\t----- bird -----\tcodebase_community",
    "314": "SELECT U.DisplayName FROM comments AS C INNER JOIN users AS U ON C.UserId = U.Id WHERE C.Text = 'thank you user93!';\t----- bird -----\tcodebase_community",
    "315": "SELECT U.DisplayName, U.Reputation \nFROM posts AS P \nINNER JOIN users AS U ON P.OwnerUserId = U.Id \nWHERE P.Title = 'Understanding what Dassault iSight is doing?';\t----- bird -----\tcodebase_community",
    "316": "SELECT DisplayName FROM users WHERE Id = (SELECT OwnerUserId FROM posts WHERE Title = 'Open source tools for visualizing multi-dimensional data?')\t----- bird -----\tcodebase_community",
    "317": "SELECT C.Text FROM comments AS C INNER JOIN posts AS P ON C.PostId = P.Id WHERE P.Title = 'Why square the difference instead of taking the absolute value in standard deviation?'\t----- bird -----\tcodebase_community",
    "318": "SELECT U.DisplayName \nFROM votes AS V \nINNER JOIN posts AS P ON V.PostId = P.Id \nINNER JOIN users AS U ON V.UserId = U.Id \nWHERE V.BountyAmount = 50 AND P.Title LIKE '%variance%';\t----- bird -----\tcodebase_community",
    "319": "SELECT P.Title, C.Text, AVG(P.ViewCount) OVER() as AverageViewCount\nFROM posts AS P \nINNER JOIN comments AS C ON P.Id = C.PostId \nINNER JOIN postLinks AS PL ON P.Id = PL.PostId \nINNER JOIN tags AS T ON PL.RelatedPostId = T.Id \nWHERE T.TagName = 'humor' \nGROUP BY P.Id, C.Text;\t----- bird -----\tcodebase_community",
    "320": "SELECT COUNT(UserId) FROM badges GROUP BY UserId HAVING COUNT(Name) > 5;\t----- bird -----\tcodebase_community",
    "321": "SELECT OwnerUserId FROM posts WHERE ViewCount >= 1000 AND Id IN (SELECT PostId FROM postHistory GROUP BY PostId HAVING COUNT(*) = 1);\t----- bird -----\tcodebase_community",
    "322": "SELECT \n    (CAST(COUNT(CASE WHEN strftime('%Y', Date) = '2010' THEN 1 END) AS REAL) * 100 / COUNT(Name)) -\n    (CAST(COUNT(CASE WHEN strftime('%Y', Date) = '2011' THEN 1 END) AS REAL) * 100 / COUNT(Name)) AS percentage_difference\nFROM badges\nWHERE Name = 'Student'\t----- bird -----\tcodebase_community",
    "323": "SELECT AVG(UpVotes) AS average_up_votes, AVG(Age) AS average_age \nFROM users \nWHERE Id IN (SELECT OwnerUserId FROM posts GROUP BY OwnerUserId HAVING COUNT(Id) > 10);\t----- bird -----\tcodebase_community",
    "324": "SELECT CAST(COUNT(CASE WHEN strftime('%Y', CreationDate) = '2010' THEN 1 END) AS REAL) / COUNT(CASE WHEN strftime('%Y', CreationDate) = '2011' THEN 1 END) AS vote_ratio FROM votes;\t----- bird -----\tcodebase_community",
    "325": "SELECT Id FROM posts WHERE OwnerDisplayName = 'slashnick' AND AnswerCount = (SELECT MAX(AnswerCount) FROM posts WHERE OwnerDisplayName = 'slashnick')LIMIT 1;\t----- bird -----\tcodebase_community",
    "326": "SELECT DisplayName, SUM(ViewCount) AS TotalViewCount FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.DisplayName IN ('Harvey Motulsky', 'Noah Snyder') GROUP BY T2.DisplayName ORDER BY TotalViewCount DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "327": "SELECT DISTINCT T.Tags \nFROM users AS T1 \nINNER JOIN posts AS T2 ON T1.Id = T2.OwnerUserId \nWHERE T1.DisplayName = 'Mark Meckes' AND T2.CommentCount = 0;\t----- bird -----\tcodebase_community",
    "328": "SELECT CAST(SUM(CASE WHEN T1.Tags LIKE '%r%' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) \nFROM posts AS T1 \nWHERE T1.OwnerDisplayName = 'Community'\t----- bird -----\tcodebase_community",
    "329": "SELECT SUM(CASE WHEN U.DisplayName = 'Mornington' THEN P.ViewCount ELSE 0 END) - \n       SUM(CASE WHEN U.DisplayName = 'Amos' THEN P.ViewCount ELSE 0 END) \nFROM posts AS P \nJOIN users AS U ON P.OwnerUserId = U.Id;\t----- bird -----\tcodebase_community",
    "330": "SELECT COUNT(Id) / 12.0 FROM postLinks WHERE strftime('%Y', CreationDate) = '2010' AND PostId IN (SELECT Id FROM posts WHERE AnswerCount <= 2);\t----- bird -----\tcodebase_community",
    "331": "SELECT MIN(T1.CreationDate) FROM votes AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T2.DisplayName = 'chl'\t----- bird -----\tcodebase_community",
    "332": "SELECT U.DisplayName FROM badges AS B INNER JOIN users AS U ON B.UserId = U.Id WHERE B.Name = 'Autobiographer' AND B.Date = (SELECT MIN(Date) FROM badges WHERE Name = 'Autobiographer');\t----- bird -----\tcodebase_community",
    "333": "SELECT COUNT(DISTINCT Id) FROM users WHERE Location = 'United Kingdom' AND Id IN (SELECT OwnerUserId FROM posts WHERE FavoriteCount >= 4);\t----- bird -----\tcodebase_community",
    "334": "SELECT Id, Title FROM posts WHERE OwnerUserId = (SELECT Id FROM users WHERE DisplayName = 'Harvey Motulsky') ORDER BY ViewCount DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "335": "SELECT T1.Id, T2.DisplayName FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T1.FavoriteCount = (SELECT MAX(FavoriteCount) FROM posts WHERE strftime('%Y', CreaionDate) = '2010') AND strftime('%Y', T1.CreaionDate) = '2010';\t----- bird -----\tcodebase_community",
    "336": "SELECT CAST(COUNT(T1.Id) AS REAL) * 100 / COUNT(*) \nFROM posts AS T1 \nINNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id \nWHERE strftime('%Y', T1.CreaionDate) = '2011' AND T2.Reputation > 1000;\t----- bird -----\tcodebase_community",
    "337": "SELECT P.ViewCount, U.DisplayName \nFROM posts AS P \nINNER JOIN users AS U ON P.LastEditorUserId = U.Id \nWHERE P.Title = 'Computer Game Datasets'\t----- bird -----\tcodebase_community",
    "338": "SELECT COUNT(*) FROM comments WHERE PostId = (SELECT Id FROM posts ORDER BY Score DESC LIMIT 1)\t----- bird -----\tcodebase_community",
    "339": "SELECT C.Text, U.DisplayName \nFROM comments AS C \nINNER JOIN posts AS P ON C.PostId = P.Id \nINNER JOIN users AS U ON C.UserId = U.Id \nWHERE P.Title = 'Analysing wind data with R' \nORDER BY C.CreationDate DESC \nLIMIT 10;\t----- bird -----\tcodebase_community",
    "340": "SELECT CAST(COUNT(CASE WHEN T1.Score > 50 THEN 1 END) AS REAL) * 100 / COUNT(*) FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.Reputation = (SELECT MAX(Reputation) FROM users);\t----- bird -----\tcodebase_community",
    "341": "SELECT ExcerptPostId, WikiPostId FROM tags WHERE TagName = 'sample';\t----- bird -----\tcodebase_community",
    "342": "SELECT U.Reputation, U.UpVotes \nFROM users AS U \nINNER JOIN comments AS C ON U.Id = C.UserId \nWHERE C.Text = 'fine, you win :)'\t----- bird -----\tcodebase_community",
    "343": "SELECT Text FROM comments WHERE PostId IN (SELECT Id FROM posts WHERE ViewCount BETWEEN 100 AND 150) ORDER BY Score DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "344": "SELECT COUNT(*) FROM comments WHERE PostId IN (SELECT Id FROM posts WHERE CommentCount = 1) AND Score = 0;\t----- bird -----\tcodebase_community",
    "345": "SELECT CAST(SUM(CASE WHEN U.UpVotes = 0 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) \nFROM comments AS C \nINNER JOIN users AS U ON C.UserId = U.Id \nWHERE C.Score BETWEEN 5 AND 10;\t----- bird -----\tcodebase_community",
    "346": "SELECT * FROM cards WHERE cardKingdomFoilId IS NOT NULL AND cardKingdomId IS NOT NULL;\t----- bird -----\tcard_games",
    "347": "SELECT * FROM cards WHERE borderColor = 'borderless' AND cardKingdomFoilId IS NULL AND cardKingdomId IS NOT NULL;\t----- bird -----\tcard_games",
    "348": "SELECT T1.* FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.rarity = 'mythic' AND T2.status = 'Banned' AND T2.format = 'gladiator'\t----- bird -----\tcard_games",
    "349": "SELECT L.status \nFROM cards AS C \nINNER JOIN legalities AS L ON C.uuid = L.uuid \nWHERE C.type = 'Artifact' AND C.side IS NULL AND L.format = 'vintage';\t----- bird -----\tcard_games",
    "350": "SELECT T1.id, T1.artist \nFROM cards AS T1 \nINNER JOIN legalities AS T2 ON T1.uuid = T2.uuid \nWHERE (T1.power = '*' OR T1.power IS NULL) AND T2.format = 'commander' AND T2.status = 'Legal'\t----- bird -----\tcard_games",
    "351": "SELECT C.id, R.text, C.hasContentWarning \nFROM cards AS C \nINNER JOIN rulings AS R ON C.uuid = R.uuid \nWHERE C.artist = 'Stephen Daniele';\t----- bird -----\tcard_games",
    "352": "SELECT T1.name, T1.artist, T1.isPromo \nFROM cards AS T1 \nINNER JOIN rulings AS T2 ON T1.uuid = T2.uuid \nGROUP BY T1.uuid \nHAVING COUNT(T2.uuid) = (SELECT MAX(rule_count) FROM (SELECT COUNT(uuid) AS rule_count FROM rulings GROUP BY uuid)) \nLIMIT 1 \nORDER BY T1.name \nLIMIT 1;\t----- bird -----\tcard_games",
    "353": "SELECT CAST(SUM(CASE WHEN F.language = 'Chinese Simplified' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM cards AS C INNER JOIN foreign_data AS F ON C.uuid = F.uuid;\t----- bird -----\tcard_games",
    "354": "SELECT COUNT(*) FROM cards WHERE power = '*';\t----- bird -----\tcard_games",
    "355": "SELECT borderColor FROM cards WHERE name = 'Ancestor''s Chosen'\t----- bird -----\tcard_games",
    "356": "SELECT T1.format FROM legalities AS T1 INNER JOIN cards AS T2 ON T1.uuid = T2.uuid WHERE T2.name = 'Benalish Knight'\t----- bird -----\tcard_games",
    "357": "SELECT CAST(SUM(CASE WHEN borderColor = 'borderless' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM cards;\t----- bird -----\tcard_games",
    "358": "SELECT CAST(SUM(CASE WHEN F.language = 'French' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) \nFROM cards AS C \nJOIN foreign_data AS F ON C.uuid = F.uuid \nWHERE C.isStorySpotlight = 1;\t----- bird -----\tcard_games",
    "359": "SELECT COUNT(*) FROM cards WHERE originalType = 'Summon - Angel' AND subtypes NOT LIKE '%Angel%';\t----- bird -----\tcard_games",
    "360": "SELECT id FROM cards WHERE duelDeck = 'a';\t----- bird -----\tcard_games",
    "361": "SELECT COUNT(*) FROM cards WHERE borderColor = 'white' AND uuid IN (SELECT uuid FROM legalities WHERE status = 'Banned')\t----- bird -----\tcard_games",
    "362": "SELECT DISTINCT C.name, F.language FROM cards AS C INNER JOIN foreign_data AS F ON C.uuid = F.uuid WHERE C.originalType = 'Artifact' AND C.colors = 'B';\t----- bird -----\tcard_games",
    "363": "SELECT manaCost FROM cards WHERE layout = 'normal' AND frameVersion = '2003' AND borderColor = 'black' AND availability = 'mtgo,paper'\t----- bird -----\tcard_games",
    "364": "SELECT CAST(SUM(CASE WHEN isStorySpotlight = 1 AND isTextless = 0 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM cards;\t----- bird -----\tcard_games",
    "365": "SELECT COUNT(*) FROM set_translations AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T2.block = 'Commander' AND T1.language = 'Portuguese (Brasil)'\t----- bird -----\tcard_games",
    "366": "SELECT DISTINCT subtypes, supertypes FROM foreign_data AS F INNER JOIN cards AS C ON F.uuid = C.uuid WHERE F.language = 'German' AND C.subtypes IS NOT NULL AND C.supertypes IS NOT NULL;\t----- bird -----\tcard_games",
    "367": "SELECT COUNT(*) FROM cards WHERE (power IS NULL OR power = '*') AND text LIKE '%triggered ability%';\t----- bird -----\tcard_games",
    "368": "SELECT COUNT(*) FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T2.format = 'premodern' AND T1.side IS NULL AND T2.status = 'legal' AND EXISTS (SELECT 1 FROM rulings AS T3 WHERE T3.uuid = T1.uuid AND T3.text = 'This is a triggered mana ability.');\t----- bird -----\tcard_games",
    "369": "SELECT FD.name FROM foreign_data AS FD INNER JOIN cards AS C ON FD.uuid = C.uuid WHERE FD.language = 'French' AND C.type = 'Creature' AND C.layout = 'normal' AND C.borderColor = 'black' AND C.artist = 'Matthew D. Wilson'\t----- bird -----\tcard_games",
    "370": "SELECT ST.language FROM sets AS S INNER JOIN set_translations AS ST ON S.code = ST.setCode WHERE S.baseSetSize = 180;\t----- bird -----\tcard_games",
    "371": "SELECT CAST(COUNT(CASE WHEN T1.hasContentWarning = 0 THEN 1 END) AS REAL) * 100 / COUNT(*) \nFROM cards AS T1 \nINNER JOIN legalities AS T2 ON T1.uuid = T2.uuid \nWHERE T2.format = 'commander' AND T2.status = 'legal'\t----- bird -----\tcard_games",
    "372": "SELECT COUNT(CASE WHEN fd.language = 'French' THEN 1 END) * 100.0 / COUNT(*) FROM cards AS c LEFT JOIN foreign_data AS fd ON c.uuid = fd.uuid WHERE c.power IS NULL OR c.power = '*'\t----- bird -----\tcard_games",
    "373": "SELECT language FROM foreign_data WHERE multiverseid = 149934;\t----- bird -----\tcard_games",
    "374": "SELECT (CAST(COUNT(CASE WHEN isTextless = 1 AND layout = 'normal' THEN 1 END) AS REAL) / COUNT(*)) * 100 FROM cards;\t----- bird -----\tcard_games",
    "375": "SELECT DISTINCT T1.language FROM set_translations AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T2.mcmName = 'Archenemy' AND T2.code = 'ARC';\t----- bird -----\tcard_games",
    "376": "SELECT language FROM foreign_data WHERE uuid = (SELECT uuid FROM cards WHERE name = 'A Pedra Fellwar')\t----- bird -----\tcard_games",
    "377": "SELECT CASE \n           WHEN (SELECT convertedManaCost FROM cards WHERE name = 'Serra Angel') > \n                (SELECT convertedManaCost FROM cards WHERE name = 'Shrine Keeper') \n           THEN 'Serra Angel' \n           ELSE 'Shrine Keeper' \n       END AS higher_cost_card;\t----- bird -----\tcard_games",
    "378": "SELECT ST.translation FROM set_translations AS ST INNER JOIN cards AS C ON C.setCode = ST.setCode WHERE C.name = 'Ancestor''s Chosen' AND ST.language = 'Italian';\t----- bird -----\tcard_games",
    "379": "SELECT COUNT(*) > 0 FROM foreign_data WHERE uuid IN (SELECT uuid FROM cards WHERE name = 'Ancestor''s Chosen') AND language = 'Korean'\t----- bird -----\tcard_games",
    "380": "SELECT COUNT(*) FROM cards AS T1 INNER JOIN set_translations AS T2 ON T1.setCode = T2.setCode WHERE T2.translation = 'Hauptset Zehnte Edition' AND T1.artist = 'Adam Rex'\t----- bird -----\tcard_games",
    "381": "SELECT ST.translation FROM set_translations AS ST INNER JOIN sets AS S ON ST.setCode = S.code WHERE S.name = 'Eighth Edition' AND ST.language = 'Chinese Simplified';\t----- bird -----\tcard_games",
    "382": "SELECT CASE WHEN COUNT(*) > 0 THEN 'Yes' ELSE 'No' END AS appears_on_mtgo FROM sets WHERE code IN (SELECT setCode FROM cards WHERE name = 'Angel of Mercy') AND mtgoCode IS NOT NULL;\t----- bird -----\tcard_games",
    "383": "SELECT COUNT(DISTINCT S.id) FROM sets AS S INNER JOIN set_translations AS ST ON S.code = ST.setCode WHERE S.block = 'Ice Age' AND ST.language = 'Italian' AND ST.translation IS NOT NULL;\t----- bird -----\tcard_games",
    "384": "SELECT isForeignOnly FROM sets WHERE code IN (SELECT setCode FROM cards WHERE name = 'Adarkar Valkyrie') AND isForeignOnly = 1;\t----- bird -----\tcard_games",
    "385": "SELECT COUNT(DISTINCT S.id) FROM sets AS S INNER JOIN set_translations AS ST ON S.code = ST.setCode WHERE ST.language = 'Italian' AND ST.translation IS NOT NULL AND S.baseSetSize < 100;\t----- bird -----\tcard_games",
    "386": "SELECT DISTINCT T1.artist \nFROM cards AS T1 \nINNER JOIN sets AS T2 ON T1.setCode = T2.code \nWHERE T2.name = 'Coldsnap' AND T1.artist IN ('Jeremy Jarvis', 'Aaron Miller', 'Chippy');\t----- bird -----\tcard_games",
    "387": "SELECT COUNT(*) FROM cards AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T2.name = 'Coldsnap' AND T1.convertedManaCost > 5 AND (T1.power = '*' OR T1.power IS NULL);\t----- bird -----\tcard_games",
    "388": "SELECT flavorText FROM foreign_data WHERE language = 'Italian' AND name = 'Ancestor''s Chosen'\t----- bird -----\tcard_games",
    "389": "SELECT F.text FROM foreign_data AS F INNER JOIN cards AS C ON F.uuid = C.uuid INNER JOIN sets AS S ON C.setCode = S.code WHERE S.name = 'Coldsnap' AND F.language = 'Italian';\t----- bird -----\tcard_games",
    "390": "SELECT F.name FROM cards AS C \nINNER JOIN foreign_data AS F ON C.uuid = F.uuid \nWHERE C.setCode = 'Coldsnap' AND F.language = 'Italian' AND C.convertedManaCost = (SELECT MAX(convertedManaCost) FROM cards WHERE setCode = 'Coldsnap');\t----- bird -----\tcard_games",
    "391": "SELECT CAST(SUM(CASE WHEN T1.convertedManaCost = 7 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM cards AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T2.name = 'Coldsnap'\t----- bird -----\tcard_games",
    "392": "SELECT CAST(SUM(CASE WHEN cardKingdomFoilId IS NOT NULL AND cardKingdomId IS NOT NULL THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM cards WHERE setCode = 'Coldsnap';\t----- bird -----\tcard_games",
    "393": "SELECT T1.format, GROUP_CONCAT(T2.name) AS banned_cards \nFROM legalities AS T1 \nJOIN cards AS T2 ON T1.uuid = T2.uuid \nWHERE T1.status = 'Banned' \nGROUP BY T1.format \nHAVING COUNT(*) = (SELECT MAX(banned_count) \n                   FROM (SELECT COUNT(*) AS banned_count \n                         FROM legalities \n                         WHERE status = 'Banned' \n                         GROUP BY format));\t----- bird -----\tcard_games",
    "394": "SELECT T1.name, T2.format FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.edhrecRank = 1 AND T2.status = 'Banned';\t----- bird -----\tcard_games",
    "395": "SELECT C.name, L.format \nFROM sets AS S \nINNER JOIN cards AS C ON S.code = C.setCode \nINNER JOIN legalities AS L ON C.uuid = L.uuid \nWHERE S.name = 'Hour of Devastation' AND L.status = 'Legal';\t----- bird -----\tcard_games",
    "396": "SELECT S.name \nFROM sets AS S \nLEFT JOIN set_translations AS ST ON S.code = ST.setCode \nWHERE ST.language = 'Korean' \nAND S.code NOT IN (SELECT setCode FROM set_translations WHERE language LIKE '%Japanese%')\t----- bird -----\tcard_games",
    "397": "SELECT DISTINCT frameVersion, uuid FROM cards WHERE artist = 'Allen Williams'\nUNION\nSELECT 'Banned Cards' AS frameVersion, uuid FROM legalities WHERE status = 'Banned';\t----- bird -----\tcard_games",
    "398": "SELECT bond_type FROM bond GROUP BY bond_type ORDER BY COUNT(bond_type) DESC LIMIT 1;\t----- bird -----\ttoxicology",
    "399": "SELECT AVG(O.oxygen_count) FROM (\n    SELECT COUNT(*) AS oxygen_count \n    FROM atom AS A \n    INNER JOIN connected AS C ON A.atom_id = C.atom_id \n    INNER JOIN bond AS B ON C.bond_id = B.bond_id \n    WHERE A.element = 'o' AND B.bond_type = '-' \n    GROUP BY C.bond_id\n) AS O;\t----- bird -----\ttoxicology",
    "400": "SELECT AVG(single_bond_count) FROM (SELECT COUNT(b.bond_id) AS single_bond_count FROM molecule AS m INNER JOIN bond AS b ON m.molecule_id = b.molecule_id WHERE m.label = '+' AND b.bond_type = '-' GROUP BY m.molecule_id);\t----- bird -----\ttoxicology",
    "401": "SELECT T1.molecule_id FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.bond_type = '#' AND T2.label = '+';\t----- bird -----\ttoxicology",
    "402": "SELECT CAST(SUM(CASE WHEN T1.element = 'c' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM atom AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.bond_type = '=';\t----- bird -----\ttoxicology",
    "403": "SELECT T1.element FROM atom AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.bond_id = 'TR004_8_9'\t----- bird -----\ttoxicology",
    "404": "SELECT DISTINCT T1.element FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id INNER JOIN bond AS T3 ON T2.bond_id = T3.bond_id WHERE T3.bond_type = '=';\t----- bird -----\ttoxicology",
    "405": "SELECT label FROM molecule WHERE molecule_id IN (SELECT molecule_id FROM atom WHERE element = 'h') GROUP BY label ORDER BY COUNT(label) DESC LIMIT 1;\t----- bird -----\ttoxicology",
    "406": "SELECT element FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = '-' GROUP BY element ORDER BY COUNT(element) ASC LIMIT 1;\t----- bird -----\ttoxicology",
    "407": "SELECT bond_type FROM bond AS T1 INNER JOIN connected AS T2 ON T1.bond_id = T2.bond_id WHERE (T2.atom_id = 'TR004_8' AND T2.atom_id2 = 'TR004_20') OR (T2.atom_id = 'TR004_20' AND T2.atom_id2 = 'TR004_8')\t----- bird -----\ttoxicology",
    "408": "SELECT COUNT(DISTINCT T1.atom_id) \nFROM atom AS T1 \nINNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id OR T1.atom_id = T2.atom_id2 \nINNER JOIN bond AS T3 ON T2.bond_id = T3.bond_id \nWHERE (T1.element = 'i' OR T1.element = 's') AND T3.bond_type = '-' \nGROUP BY T3.molecule_id;\t----- bird -----\ttoxicology",
    "409": "SELECT CAST(SUM(CASE WHEN A.element != 'f' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(DISTINCT A.atom_id) FROM molecule AS M INNER JOIN atom AS A ON M.molecule_id = A.molecule_id WHERE M.label = '+';\t----- bird -----\ttoxicology",
    "410": "SELECT CAST(SUM(CASE WHEN T2.label = '+' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T3.bond_id) FROM bond AS T3 INNER JOIN molecule AS T2 ON T3.molecule_id = T2.molecule_id WHERE T3.bond_type = '#';\t----- bird -----\ttoxicology",
    "411": "SELECT DISTINCT T1.element FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.molecule_id = 'TR000' ORDER BY T1.element ASC LIMIT 3;\t----- bird -----\ttoxicology",
    "412": "SELECT CAST(SUM(CASE WHEN bond_type = '=' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(bond_id) AS percent FROM bond WHERE molecule_id = 'TR008'\t----- bird -----\ttoxicology",
    "413": "SELECT CAST(SUM(CASE WHEN label = '+' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(molecule_id) AS percent FROM molecule;\t----- bird -----\ttoxicology",
    "414": "SELECT CAST(SUM(CASE WHEN T1.element = 'h' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) AS percent FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.molecule_id = 'TR206'\t----- bird -----\ttoxicology",
    "415": "SELECT T1.element, T2.label FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.molecule_id = 'TR060'\t----- bird -----\ttoxicology",
    "416": "SELECT T1.bond_type, T2.label, (SELECT COUNT(*) FROM connected WHERE atom_id IN (SELECT atom_id FROM atom WHERE molecule_id = 'TR010') OR atom_id2 IN (SELECT atom_id FROM atom WHERE molecule_id = 'TR010')) > 0 AS is_carcinogenic \nFROM bond AS T1 \nINNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id \nWHERE T1.molecule_id = 'TR010' \nGROUP BY T1.bond_type \nORDER BY COUNT(*) DESC \nLIMIT 1;\t----- bird -----\ttoxicology",
    "417": "SELECT DISTINCT T1.molecule_id FROM molecule AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.bond_type = '-' AND T1.label = '-' ORDER BY T1.molecule_id LIMIT 3;\t----- bird -----\ttoxicology",
    "418": "SELECT COUNT(bond_id) FROM bond WHERE molecule_id = 'TR009' AND (bond_id IN (SELECT bond_id FROM connected WHERE atom_id = 'TR009_12' OR atom_id2 = 'TR009_12'));\t----- bird -----\ttoxicology",
    "419": "SELECT T1.bond_type, T2.atom_id, T2.atom_id2 \nFROM bond AS T1 \nINNER JOIN connected AS T2 ON T1.bond_id = T2.bond_id \nWHERE T1.bond_id = 'TR001_6_9';\t----- bird -----\ttoxicology",
    "420": "SELECT COUNT(bond_id) FROM connected WHERE atom_id = 'TR%_19' OR atom_id2 = 'TR%_19';\t----- bird -----\ttoxicology",
    "421": "SELECT T1.element FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.molecule_id = 'TR004'\t----- bird -----\ttoxicology",
    "422": "SELECT DISTINCT T4.molecule_id FROM atom AS T1 \nINNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id \nINNER JOIN connected AS T3 ON T2.atom_id2 = T3.atom_id \nINNER JOIN molecule AS T4 ON T2.bond_id = T4.molecule_id \nWHERE SUBSTR(T1.atom_id, 7, 2) BETWEEN '21' AND '25' AND T4.label = '+';\t----- bird -----\ttoxicology",
    "423": "SELECT DISTINCT B.bond_id \nFROM bond AS B \nINNER JOIN atom AS A1 ON B.molecule_id = A1.molecule_id \nINNER JOIN atom AS A2 ON B.molecule_id = A2.molecule_id \nWHERE A1.element = 'p' AND A2.element = 'n';\t----- bird -----\ttoxicology",
    "424": "SELECT CASE WHEN COUNT(*) > 0 THEN 'Yes' ELSE 'No' END AS is_carcinogenic FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.bond_type = ' = ' AND T2.label = '+' AND T1.molecule_id = (SELECT molecule_id FROM bond WHERE bond_type = ' = ' GROUP BY molecule_id ORDER BY COUNT(*) DESC LIMIT 1)\t----- bird -----\ttoxicology",
    "425": "SELECT AVG(bond_count) FROM (SELECT COUNT(bond_id) AS bond_count FROM connected AS C INNER JOIN atom AS A ON C.atom_id = A.atom_id WHERE A.element = 'i' GROUP BY C.atom_id);\t----- bird -----\ttoxicology",
    "426": "SELECT element FROM atom WHERE atom_id NOT IN (SELECT atom_id FROM connected)\t----- bird -----\ttoxicology",
    "427": "SELECT T1.atom_id, T2.atom_id2 FROM connected AS T1 INNER JOIN bond AS T2 ON T1.bond_id = T2.bond_id WHERE T2.molecule_id = 'TR041' AND T2.bond_type = '#'\t----- bird -----\ttoxicology",
    "428": "SELECT DISTINCT T1.element FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id WHERE T2.bond_id = 'TR144_8_19'\t----- bird -----\ttoxicology",
    "429": "SELECT T1.element FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id INNER JOIN bond AS T3 ON T2.bond_id = T3.bond_id WHERE T3.bond_type = '#';\t----- bird -----\ttoxicology",
    "430": "SELECT CAST(SUM(CASE WHEN T2.label = '+' THEN 1 ELSE 0 END) * 100 AS REAL) / COUNT(T1.bond_id) FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.bond_type = '-'\t----- bird -----\ttoxicology",
    "431": "SELECT COUNT(DISTINCT T1.atom_id) FROM atom AS T1 \nINNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id \nINNER JOIN bond AS T3 ON T2.bond_id = T3.bond_id \nINNER JOIN molecule AS T4 ON T3.molecule_id = T4.molecule_id \nWHERE T3.bond_type = '#' AND (T1.element = 'p' OR T1.element = 'br')\t----- bird -----\ttoxicology",
    "432": "SELECT CAST(SUM(CASE WHEN T1.element = 'cl' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.atom_id) AS percent \nFROM atom AS T1 \nINNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id \nWHERE T2.bond_type = '-';\t----- bird -----\ttoxicology",
    "433": "SELECT T1.element FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id OR T1.atom_id = T2.atom_id2 INNER JOIN bond AS T3 ON T2.bond_id = T3.bond_id WHERE T3.bond_id = 'TR001_10_11'\t----- bird -----\ttoxicology",
    "434": "SELECT CAST(SUM(CASE WHEN T1.element = 'cl' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T2.molecule_id) AS percentage FROM molecule AS T2 INNER JOIN atom AS T1 ON T2.molecule_id = T1.molecule_id WHERE T2.label = '+';\t----- bird -----\ttoxicology",
    "435": "SELECT T1.element FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = '+' AND SUBSTR(T1.atom_id, 7, 1) = '4';\t----- bird -----\ttoxicology",
    "436": "SELECT label, CAST(SUM(CASE WHEN element = 'h' THEN 1 ELSE 0 END) AS REAL) / COUNT(element) AS hydrogen_ratio FROM atom INNER JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE atom.molecule_id = 'TR006' GROUP BY label;\t----- bird -----\ttoxicology",
    "437": "SELECT T1.molecule_id FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = '-' GROUP BY T1.molecule_id HAVING COUNT(T1.atom_id) > 5;\t----- bird -----\ttoxicology",
    "438": "SELECT COUNT(*) FROM schools AS S INNER JOIN satscores AS SS ON S.CDSCode = SS.cds WHERE SS.AvgScrMath > 400 AND S.Virtual = 'F'\t----- bird -----\tcalifornia_schools",
    "439": "SELECT CDSCode FROM frpm WHERE (\"Enrollment (K-12)\" + \"Enrollment (Ages 5-17)\") > 500;\t----- bird -----\tcalifornia_schools",
    "440": "SELECT MAX((`Free Meal Count (Ages 5-17)` / `Enrollment (Ages 5-17)`)) \nFROM satscores \nWHERE (NumGE1500 * 1.0 / NumTstTakr) > 0.3 \nAND `Enrollment (Ages 5-17)` > 0;\t----- bird -----\tcalifornia_schools",
    "441": "SELECT schools.CharterNum, AVG(satscores.AvgScrWrite) AS AverageWritingScore \nFROM schools \nINNER JOIN satscores ON schools.CDSCode = satscores.cds \nWHERE satscores.AvgScrWrite > 499 AND schools.CharterNum IS NOT NULL \nGROUP BY schools.CharterNum \nORDER BY AverageWritingScore DESC;\t----- bird -----\tcalifornia_schools",
    "442": "SELECT S.School, S.Street, S.StreetAbr, S.City, S.State, S.Zip \nFROM schools AS S\nINNER JOIN frpm AS F ON S.CDSCode = F.CDSCode\nWHERE ABS(F.`Enrollment (K-12)` - F.`Enrollment (Ages 5-17)`) > 30;\t----- bird -----\tcalifornia_schools",
    "443": "SELECT S.School, S.County, S.District \nFROM frpm AS S \nJOIN satscores AS T ON S.CDSCode = T.cds \nWHERE (S.FreeMealCountK12 / S.EnrollmentK12) > 0.1 AND T.NumTstTakr > 0 AND (T.AvgScrRead >= 1500 OR T.AvgScrMath >= 1500 OR T.AvgScrWrite >= 1500);\t----- bird -----\tcalifornia_schools",
    "444": "SELECT S.FundingType \nFROM schools AS S \nINNER JOIN satscores AS SAT ON S.CDSCode = SAT.cds \nWHERE S.County = 'Riverside' \nGROUP BY S.CDSCode \nHAVING SUM(SAT.AvgScrMath) / COUNT(S.CDSCode) > 400;\t----- bird -----\tcalifornia_schools",
    "445": "SELECT School, Street, City, State, Zip FROM schools AS S INNER JOIN frpm AS F ON S.CDSCode = F.CDSCode WHERE County = 'Monterey' AND F.`Free Meal Count (Ages 5-17)` > 800 AND `School Type` = 'High School';\t----- bird -----\tcalifornia_schools",
    "446": "SELECT S.School, AVG(SA.AvgScrWrite) AS Average_Writing_Score, S.Phone \nFROM schools AS S \nINNER JOIN satscores AS SA ON S.CDSCode = SA.cds \nWHERE (S.OpenDate > '1991-01-01' OR S.ClosedDate < '2000-01-01') \nGROUP BY S.School, S.Phone;\t----- bird -----\tcalifornia_schools",
    "447": "SELECT School, DOCType \nFROM schools \nWHERE CDSCode IN (\n    SELECT CDSCode \n    FROM frpm \n    WHERE `County Code` IS NOT NULL \n) AND \n    (`Enrollment (K-12)` - `Enrollment (Ages 5-17)`) > (\n        SELECT AVG(`Enrollment (K-12)` - `Enrollment (Ages 5-17)`) \n        FROM frpm \n        WHERE `County Code` IS NOT NULL\n    );\t----- bird -----\tcalifornia_schools",
    "448": "SELECT `Free Meal Count (K-12)` / `Enrollment (K-12)` AS eligible_free_rate \nFROM frpm \nORDER BY `Enrollment (K-12)` DESC \nLIMIT 2 OFFSET 9;\t----- bird -----\tcalifornia_schools",
    "449": "SELECT T1.`FRPM Count (K-12)` / T1.`Enrollment (K-12)` AS Eligible_Free_Reduced_Price_Meal_Rate \nFROM frpm AS T1 \nINNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode \nWHERE T2.Charter = 66 \nORDER BY T1.`FRPM Count (K-12)` DESC \nLIMIT 5;\t----- bird -----\tcalifornia_schools",
    "450": "SELECT S.Street, S.City, S.Zip, S.State \nFROM schools AS S \nJOIN satscores AS SA ON S.CDSCode = SA.cds \nORDER BY (SA.NumGE1500 * 1.0 / SA.NumTstTakr) ASC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "451": "SELECT T1.AdmFName1, T1.AdmLName1, T1.AdmFName2, T1.AdmLName2, T1.AdmFName3, T1.AdmLName3 \nFROM schools AS T1 \nINNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds \nWHERE T2.NumGE1500 = (SELECT MAX(NumGE1500) FROM satscores) \nLIMIT 1;\t----- bird -----\tcalifornia_schools",
    "452": "SELECT AVG(enroll12) FROM satscores AS S INNER JOIN schools AS SC ON S.cds = SC.CDSCode WHERE SC.OpenDate BETWEEN '1980-01-01' AND '1980-12-31' AND SC.County = 'Fresno'\t----- bird -----\tcalifornia_schools",
    "453": "SELECT S.Phone \nFROM schools AS S \nINNER JOIN satscores AS SS ON S.CDSCode = SS.cds \nWHERE S.District = 'Fresno Unified' \nORDER BY SS.AvgScrRead ASC \nLIMIT 1;\t----- bird -----\tcalifornia_schools",
    "454": "SELECT School, County, AvgScrRead \nFROM (\n    SELECT S.School, S.County, SA.AvgScrRead,\n           ROW_NUMBER() OVER (PARTITION BY S.County ORDER BY SA.AvgScrRead DESC) as rank\n    FROM schools AS S\n    INNER JOIN satscores AS SA ON S.CDSCode = SA.cds\n    WHERE S.Virtual = 'F'\n) \nWHERE rank <= 5;\t----- bird -----\tcalifornia_schools",
    "455": "SELECT S.School, AVG(SA.AvgScrWrite) AS Average_Writing_Score \nFROM schools AS S \nINNER JOIN satscores AS SA ON S.CDSCode = SA.cds \nWHERE S.ADMFName1 = 'Ricci' AND S.ADMLName1 = 'Ulrich' \nGROUP BY S.School;\t----- bird -----\tcalifornia_schools",
    "456": "SELECT State, SUM(`Enrollment (K-12)`) AS TotalEnrollment FROM frpm INNER JOIN schools ON frpm.CDSCode = schools.CDSCode WHERE DOC = 31 GROUP BY State ORDER BY TotalEnrollment DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "457": "SELECT COUNT(*) / 12.0 AS monthly_avg_opened_schools FROM schools WHERE County = 'Alameda' AND DOC = '52' AND strftime('%Y', OpenDate) = '1980'\t----- bird -----\tcalifornia_schools",
    "458": "SELECT \n    (SELECT COUNT(*) FROM schools WHERE County = 'Orange' AND DOC = 54) * 1.0 / \n    (SELECT COUNT(*) FROM schools WHERE County = 'Orange' AND DOC = 52) \nAS ratio;\t----- bird -----\tcalifornia_schools",
    "459": "SELECT School, Street FROM schools WHERE CDSCode = (SELECT CDSCode FROM satscores ORDER BY AvgScrMath DESC LIMIT 1 OFFSET 6)\t----- bird -----\tcalifornia_schools",
    "460": "SELECT COUNT(*) FROM schools AS S INNER JOIN frpm AS F ON S.CDSCode = F.CDSCode WHERE F.\"Charter School (Y/N)\" = 0 AND F.\"County Name\" = 'Los Angeles' AND (F.\"Free Meal Count (K-12)\" * 100 / F.\"Enrollment (K-12)\") < 0.18;\t----- bird -----\tcalifornia_schools",
    "461": "SELECT SUM(`Enrollment (Ages 5-17)`) FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.EdOpsCode = 'SSS' AND T1.`Academic Year` = '2014-2015'\t----- bird -----\tcalifornia_schools",
    "462": "SELECT T1.`School Name`, (T1.`FRPM Count (Ages 5-17)` / T1.`Enrollment (Ages 5-17)`) * 100 AS `Percent Eligible FRPM (Ages 5-17)` \nFROM frpm AS T1 \nINNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode \nWHERE T1.`Low Grade` = 'K' AND T1.`High Grade` = '9' AND T2.County = 'Los Angeles';\t----- bird -----\tcalifornia_schools",
    "463": "SELECT County, COUNT(*) AS School_Count FROM schools WHERE Virtual = 'F' AND County IN ('San Diego', 'Santa Barbara') GROUP BY County ORDER BY School_Count DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "464": "SELECT `GSoffered` FROM schools ORDER BY ABS(Longitude) DESC LIMIT 1\t----- bird -----\tcalifornia_schools",
    "465": "SELECT COUNT(DISTINCT City) AS NumberOfCities, COUNT(School) AS TotalSchools \nFROM schools \nWHERE Magnet = 1 AND GSoffered = 'K-8' AND `NSLP Provision Status` = 'Multiple Provision Types' \nGROUP BY City;\t----- bird -----\tcalifornia_schools",
    "466": "SELECT `Percent (%) Eligible Free (K-12)`, `District Code` FROM frpm WHERE CDSCode IN (SELECT CDSCode FROM schools WHERE AdmFName1 = 'Alusine')\t----- bird -----\tcalifornia_schools",
    "467": "SELECT AdmEmail1, AdmEmail2, AdmEmail3 \nFROM schools \nWHERE County = 'San Bernardino' \nAND District = 'San Bernardino City Unified' \nAND OpenDate BETWEEN '2009-01-01' AND '2010-12-31' \nAND (SOC = 62 OR DOC = 54) \nAND (AdmEmail1 IS NOT NULL OR AdmEmail2 IS NOT NULL OR AdmEmail3 IS NOT NULL);\t----- bird -----\tcalifornia_schools",
    "468": "SELECT COUNT(DISTINCT T1.account_id) \nFROM account AS T1 \nINNER JOIN trans AS T2 ON T1.account_id = T2.account_id \nWHERE T2.operation = 'POPLATEK PO OBRATU' AND T1.district_id IN (SELECT district_id FROM district WHERE A3 = 'East Bohemia');\t----- bird -----\tfinancial",
    "469": "SELECT COUNT(*) FROM district WHERE A11 > 6000 AND A11 < 10000 AND district_id IN (SELECT DISTINCT district_id FROM client WHERE gender = 'F');\t----- bird -----\tfinancial",
    "470": "SELECT COUNT(*) FROM client AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T1.gender = 'M' AND T2.A3 = 'North Bohemia' AND T2.A11 > 8000;\t----- bird -----\tfinancial",
    "471": "SELECT A.account_id, \n  (SELECT MAX(avg_salary) FROM (SELECT AVG(A11) AS avg_salary FROM district GROUP BY district_id)) - \n  (SELECT MIN(avg_salary) FROM (SELECT AVG(A11) AS avg_salary FROM district GROUP BY district_id)) AS salary_gap\nFROM account AS A\nINNER JOIN client AS C ON A.client_id = C.client_id \nWHERE C.gender = 'F' \nAND C.birth_date = (SELECT MIN(birth_date) FROM client WHERE gender = 'F');\t----- bird -----\tfinancial",
    "472": "SELECT T1.account_id FROM account AS T1 INNER JOIN disp AS T2 ON T1.account_id = T2.account_id INNER JOIN client AS T3 ON T2.client_id = T3.client_id WHERE T3.birth_date = (SELECT MIN(birth_date) FROM client) AND (SELECT AVG(A11) FROM district WHERE district_id = T1.district_id) = (SELECT MAX((SELECT AVG(A11) FROM district GROUP BY district_id)) FROM district)\t----- bird -----\tfinancial",
    "473": "SELECT account_id, amount FROM loan WHERE date LIKE '1997%' ORDER BY amount ASC LIMIT 1;\t----- bird -----\tfinancial",
    "474": "SELECT A.account_id, MAX(L.amount) AS highest_approved_amount \nFROM account AS A \nINNER JOIN loan AS L ON A.account_id = L.account_id \nWHERE L.duration > 12 AND A.date LIKE '1993%' \nGROUP BY A.account_id;\t----- bird -----\tfinancial",
    "475": "SELECT COUNT(*) FROM client AS C INNER JOIN district AS D ON C.district_id = D.district_id WHERE C.gender = 'F' AND C.birth_date < '1950-01-01' AND D.A2 = 'Sokolov';\t----- bird -----\tfinancial",
    "476": "SELECT D.A2 \nFROM client AS C \nINNER JOIN account AS A ON C.client_id = A.account_id \nINNER JOIN district AS D ON C.district_id = D.district_id \nWHERE C.gender = 'F' AND C.birth_date = '1976-01-29'\t----- bird -----\tfinancial",
    "477": "SELECT CAST(SUM(CASE WHEN T2.gender = 'M' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) \nFROM client AS T2 \nINNER JOIN district AS T1 ON T2.district_id = T1.district_id \nWHERE T1.A3 = 'South Bohemia' \nAND T1.A4 = (SELECT MAX(A4) FROM district WHERE A3 = 'South Bohemia');\t----- bird -----\tfinancial",
    "478": "SELECT \n    (T3.balance - T4.balance) * 100.0 / T4.balance AS increase_rate\nFROM \n    account AS T1 \nINNER JOIN \n    loan AS T2 ON T1.account_id = T2.account_id \nINNER JOIN \n    trans AS T3 ON T1.account_id = T3.account_id \nINNER JOIN \n    trans AS T4 ON T1.account_id = T4.account_id \nWHERE \n    T2.status = 'approved' \n    AND T2.date = '1993-07-05' \n    AND T3.date = '1998-12-27' \n    AND T4.date = '1993-03-22' \n    AND (SELECT MIN(date) FROM loan WHERE account_id = T1.account_id) = '1993-07-05';\t----- bird -----\tfinancial",
    "479": "SELECT (SUM(CASE WHEN status = 'A' THEN amount ELSE 0 END) * 100.0) / SUM(amount) FROM loan;\t----- bird -----\tfinancial",
    "480": "SELECT (SUM(CASE WHEN status = 'C' THEN 1 ELSE 0 END) * 100.0 / COUNT(*)) AS percentage_running_accounts \nFROM loan \nWHERE amount < 100000;\t----- bird -----\tfinancial",
    "481": "SELECT district.A2, ((district.A13 - district.A12) / district.A12) * 100 AS unemployment_increment_rate \nFROM loan \nINNER JOIN account ON loan.account_id = account.account_id \nINNER JOIN client ON account.district_id = client.district_id \nINNER JOIN district ON client.district_id = district.district_id \nWHERE loan.status = 'D';\t----- bird -----\tfinancial",
    "482": "SELECT district.A2, COUNT(client.client_id) AS female_count \nFROM district \nINNER JOIN client ON district.district_id = client.district_id \nWHERE client.gender = 'F' \nGROUP BY district.A2 \nORDER BY female_count DESC \nLIMIT 9;\t----- bird -----\tfinancial",
    "483": "SELECT COUNT(loan_id) FROM loan AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id WHERE T1.amount >= 250000 AND T2.frequency = 'POPLATEK MESICNE' AND T1.status = 'approved' AND T1.date BETWEEN '1995-01-01' AND '1997-12-31';\t----- bird -----\tfinancial",
    "484": "SELECT COUNT(DISTINCT account_id) FROM loan WHERE status IN ('C', 'D') AND account_id IN (SELECT account_id FROM account WHERE district_id = 1);\t----- bird -----\tfinancial",
    "485": "SELECT COUNT(client_id) FROM client WHERE gender = 'M' AND district_id = (SELECT district_id FROM district ORDER BY A15 DESC LIMIT 1 OFFSET 1)\t----- bird -----\tfinancial",
    "486": "SELECT D.A2 AS district_name, SUM(T.amount) AS total_withdrawal \nFROM trans AS T \nINNER JOIN account AS A ON T.account_id = A.account_id \nINNER JOIN district AS D ON A.district_id = D.district_id \nWHERE T.type = 'VYDAJ' AND T.date LIKE '1996-01%' \nGROUP BY D.A2 \nORDER BY total_withdrawal DESC \nLIMIT 10;\t----- bird -----\tfinancial",
    "487": "SELECT COUNT(*) FROM account AS A INNER JOIN loan AS L ON A.account_id = L.account_id WHERE L.status IN ('C', 'D') AND A.district_id = 1;\t----- bird -----\tfinancial",
    "488": "SELECT COUNT(client_id) FROM client WHERE gender = 'M' AND district_id = (SELECT district_id FROM district ORDER BY A15 DESC LIMIT 1 OFFSET 1);\t----- bird -----\tfinancial",
    "489": "SELECT DISTINCT T1.account_id \nFROM trans AS T1 \nWHERE T1.operation = 'VYBER KARTOU' \n    AND T1.amount < (SELECT AVG(T2.amount) FROM trans AS T2 WHERE T2.operation = 'VYBER KARTOU' AND strftime('%Y', T2.date) = '1998');\t----- bird -----\tfinancial",
    "490": "SELECT DISTINCT T3.type FROM account AS T1\nJOIN disp AS T3 ON T1.account_id = T3.account_id\nJOIN district AS T2 ON T1.district_id = T2.district_id\nWHERE T3.type <> 'OWNER' AND T2.A11 > 8000 AND T2.A11 <= 9000;\t----- bird -----\tfinancial",
    "491": "SELECT AVG(A15) FROM district WHERE A15 > 4000 AND district_id IN (SELECT DISTINCT district_id FROM account WHERE date >= '1997-01-01') AND A3 IS NOT NULL;\t----- bird -----\tfinancial",
    "492": "SELECT * FROM trans WHERE account_id IN (SELECT account_id FROM disp WHERE client_id = 3356) AND operation = 'VYBER'\t----- bird -----\tfinancial",
    "493": "SELECT CAST(SUM(CASE WHEN C.gender = 'F' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) \nFROM client AS C \nJOIN district AS D ON C.district_id = D.district_id \nWHERE D.A11 > 10000;\t----- bird -----\tfinancial",
    "494": "SELECT (SUM(CASE WHEN strftime('%Y', L.date) = '1997' THEN L.amount ELSE 0 END) - \n        SUM(CASE WHEN strftime('%Y', L.date) = '1996' THEN L.amount ELSE 0 END)) * 100.0 / \n        NULLIF(SUM(CASE WHEN strftime('%Y', L.date) = '1996' THEN L.amount ELSE 0 END), 0) AS growth_rate \nFROM loan AS L \nINNER JOIN client AS C ON L.account_id = C.client_id \nWHERE C.gender = 'M' AND (strftime('%Y', L.date) = '1996' OR strftime('%Y', L.date) = '1997');\t----- bird -----\tfinancial",
    "495": "SELECT COUNT(*) AS statement_requests, SUM(amount) AS total_debit FROM trans WHERE account_id = 3 AND operation = 'Debit';\t----- bird -----\tfinancial",
    "496": "SELECT CAST(SUM(CASE WHEN C.gender = 'M' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) \nFROM client AS C \nINNER JOIN account AS A ON C.district_id = A.district_id \nWHERE A.frequency = 'POPLATEK TYDNE'\t----- bird -----\tfinancial",
    "497": "SELECT T1.account_id \nFROM account AS T1 \nINNER JOIN client AS T2 ON T1.district_id = T2.district_id \nINNER JOIN district AS T3 ON T1.district_id = T3.district_id \nWHERE T2.gender = 'F' \nORDER BY T2.birth_date ASC, T3.A11 ASC \nLIMIT 1;\t----- bird -----\tfinancial",
    "498": "SELECT AVG(amount) FROM loan WHERE status IN ('C', 'D') AND loan_id IN (SELECT loan_id FROM trans WHERE operation = 'POPLATEK PO OBRATU');\t----- bird -----\tfinancial",
    "499": "SELECT C.client_id, strftime('%Y', 'now') - strftime('%Y', C.birth_date) AS age \nFROM client AS C \nINNER JOIN disp AS D ON C.client_id = D.client_id \nINNER JOIN card AS Ca ON D.account_id = Ca.card_id \nWHERE Ca.type = 'gold' AND D.type = 'OWNER';\t----- bird -----\tfinancial"
}