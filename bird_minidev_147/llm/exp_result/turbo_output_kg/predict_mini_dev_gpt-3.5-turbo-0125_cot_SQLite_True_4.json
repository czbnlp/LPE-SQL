{
    "0": "SELECT CAST(SUM(CASE WHEN Currency = 'EUR' THEN 1 ELSE 0 END) AS REAL) / NULLIF(SUM(CASE WHEN Currency = 'CZK' THEN 1 ELSE 0 END), 0) AS ratio FROM customers;\t----- bird -----\tdebit_card_specializing",
    "1": "SELECT CustomerID FROM yearmonth WHERE Date BETWEEN '201201' AND '201212' ORDER BY Consumption ASC LIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "2": "SELECT AVG(T2.Consumption) / 12 FROM yearmonth AS T2 INNER JOIN customers AS T1 ON T2.CustomerID = T1.CustomerID WHERE T1.Segment = 'SME' AND SUBSTR(T2.Date, 1, 4) = '2013';\t----- bird -----\tdebit_card_specializing",
    "3": "SELECT \n    COALESCE(SUM(CASE WHEN C.Currency = 'CZK' THEN Y.Consumption ELSE 0 END), 0) - \n    COALESCE(SUM(CASE WHEN C.Currency = 'EUR' THEN Y.Consumption ELSE 0 END), 0) AS consumption_difference \nFROM \n    yearmonth AS Y \nINNER JOIN \n    customers AS C ON Y.CustomerID = C.CustomerID \nWHERE \n    SUBSTR(Y.Date, 1, 4) = '2012';\t----- bird -----\tdebit_card_specializing",
    "4": "SELECT SUBSTR(Y.Date, 1, 4) AS Year, SUM(Y.Consumption) AS Total_Consumption \nFROM yearmonth AS Y \nINNER JOIN customers AS C ON Y.CustomerID = C.CustomerID \nWHERE C.Currency = 'CZK' \nGROUP BY Year \nORDER BY Total_Consumption DESC \nLIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "5": "SELECT SUBSTR(T2.Date, 1, 6) AS Month, SUM(T2.Consumption) AS Total_Consumption \nFROM yearmonth AS T2 \nINNER JOIN customers AS T1 ON T2.CustomerID = T1.CustomerID \nWHERE T1.Segment = 'SME' AND SUBSTR(T2.Date, 1, 4) = '2013' \nGROUP BY Month \nORDER BY Total_Consumption DESC \nLIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "6": "SELECT \n    (SELECT SUM(T3.Total_Consumption) / COUNT(T3.CustomerID) FROM \n        (SELECT T1.CustomerID, SUM(T2.Consumption) AS Total_Consumption \n        FROM yearmonth AS T2 \n        INNER JOIN customers AS T1 ON T2.CustomerID = T1.CustomerID \n        WHERE T1.Segment = 'SME' AND SUBSTR(T2.Date, 1, 4) = '2013' \n        GROUP BY T1.CustomerID \n        ORDER BY Total_Consumption ASC \n        LIMIT 1) AS T3) -\n    (SELECT SUM(T4.Total_Consumption) / COUNT(T4.CustomerID) FROM \n        (SELECT T1.CustomerID, SUM(T2.Consumption) AS Total_Consumption \n        FROM yearmonth AS T2 \n        INNER JOIN customers AS T1 ON T2.CustomerID = T1.CustomerID \n        WHERE T1.Segment = 'LAM' AND SUBSTR(T2.Date, 1, 4) = '2013' \n        GROUP BY T1.CustomerID \n        ORDER BY Total_Consumption ASC \n        LIMIT 1) AS T4) AS SME_LAM_Difference,\n\n    (SELECT SUM(T5.Total_Consumption) / COUNT(T5.CustomerID) FROM \n        (SELECT T1.CustomerID, SUM(T2.Consumption) AS Total_Consumption \n        FROM yearmonth AS T2 \n        INNER JOIN customers AS T1 ON T2.CustomerID = T1.CustomerID \n        WHERE T1.Segment = 'LAM' AND SUBSTR(T2.Date, 1, 4) = '2013' \n        GROUP BY T1.CustomerID \n        ORDER BY Total_Consumption ASC \n        LIMIT 1) AS T5) -\n    (SELECT SUM(T6.Total_Consumption) / COUNT(T6.CustomerID) FROM \n        (SELECT T1.CustomerID, SUM(T2.Consumption) AS Total_Consumption \n        FROM yearmonth AS T2 \n        INNER JOIN customers AS T1 ON T2.CustomerID = T1.CustomerID \n        WHERE T1.Segment = 'KAM' AND SUBSTR(T2.Date, 1, 4) = '2013' \n        GROUP BY T1.CustomerID \n        ORDER BY Total_Consumption ASC \n        LIMIT 1) AS T6) AS LAM_KAM_Difference,\n\n    (SELECT SUM(T7.Total_Consumption) / COUNT(T7.CustomerID) FROM \n        (SELECT T1.CustomerID, SUM(T2.Consumption) AS Total_Consumption \n        FROM yearmonth AS T2 \n        INNER JOIN customers AS T1 ON T2.CustomerID = T1.CustomerID \n        WHERE T1.Segment = 'KAM' AND SUBSTR(T2.Date, 1, 4) = '2013' \n        GROUP BY T1.CustomerID \n        ORDER BY Total_Consumption ASC \n        LIMIT 1) AS T7) -\n    (SELECT SUM(T8.Total_Consumption) / COUNT(T8.CustomerID) FROM \n        (SELECT T1.CustomerID, SUM(T2.Consumption) AS Total_Consumption \n        FROM yearmonth AS T2 \n        INNER JOIN customers AS T1 ON T2.CustomerID = T1.CustomerID \n        WHERE T1.Segment = 'SME' AND SUBSTR(T2.Date, 1, 4) = '2013' \n        GROUP BY T1.CustomerID \n        ORDER BY Total_Consumption ASC \n        LIMIT 1) AS T8) AS KAM_SME_Difference\t----- bird -----\tdebit_card_specializing",
    "7": "SELECT \n    Segment,\n    (SUM(CASE WHEN SUBSTR(Date, 1, 4) = '2013' THEN Consumption ELSE 0 END) - \n    SUM(CASE WHEN SUBSTR(Date, 1, 4) = '2012' THEN Consumption ELSE 0 END)) AS Consumption_Change,\n    ((SUM(CASE WHEN SUBSTR(Date, 1, 4) = '2013' THEN Consumption ELSE 0 END) - \n    SUM(CASE WHEN SUBSTR(Date, 1, 4) = '2012' THEN Consumption ELSE 0 END)) / \n    SUM(CASE WHEN SUBSTR(Date, 1, 4) = '2013' THEN Consumption ELSE 0 END)) * 100 AS Percentage_Increase\nFROM \n    customers AS C \nINNER JOIN \n    yearmonth AS Y ON C.CustomerID = Y.CustomerID \nWHERE \n    C.Currency = 'EUR' \nGROUP BY \n    Segment \nORDER BY \n    Percentage_Increase DESC;\t----- bird -----\tdebit_card_specializing",
    "8": "SELECT SUM(Consumption) \nFROM yearmonth \nWHERE CustomerID = 6 AND Date BETWEEN '201308' AND '201311';\t----- bird -----\tdebit_card_specializing",
    "9": "SELECT \n    (SELECT COUNT(*) FROM gasstations WHERE Country = 'CZE' AND Segment = 'discount') - \n    (SELECT COUNT(*) FROM gasstations WHERE Country = 'SVK' AND Segment = 'discount') AS Difference;\t----- bird -----\tdebit_card_specializing",
    "10": "SELECT \n    (SELECT COUNT(*) FROM customers WHERE Segment = 'SME' AND Currency = 'CZK') - \n    (SELECT COUNT(*) FROM customers WHERE Segment = 'SME' AND Currency = 'EUR') AS Amount_of_more_SMEs;\t----- bird -----\tdebit_card_specializing",
    "11": "SELECT (COUNT(CASE WHEN Consumption > 46.73 THEN 1 END) * 100.0) / COUNT(*) AS Percentage\nFROM customers AS T1\nINNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID\nWHERE T1.Segment = 'LAM';\t----- bird -----\tdebit_card_specializing",
    "12": "SELECT (COUNT(CASE WHEN Consumption > 528.3 THEN 1 END) * 100.0 / COUNT(*)) AS Percentage \nFROM yearmonth \nWHERE Date LIKE '201202%';\t----- bird -----\tdebit_card_specializing",
    "13": "SELECT SUBSTR(Date, 1, 6) AS Month, SUM(Consumption) AS Total_Consumption \nFROM yearmonth \nWHERE SUBSTR(Date, 1, 4) = '2012' \nGROUP BY Month \nORDER BY Total_Consumption DESC \nLIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "14": "SELECT P.Description \nFROM products AS P \nINNER JOIN transactions_1k AS T ON P.ProductID = T.ProductID \nINNER JOIN yearmonth AS Y ON T.CustomerID = Y.CustomerID \nWHERE Y.Date LIKE '201309%';\t----- bird -----\tdebit_card_specializing",
    "15": "SELECT DISTINCT G.Country \nFROM gasstations AS G \nINNER JOIN transactions_1k AS T ON G.GasStationID = T.GasStationID \nINNER JOIN yearmonth AS Y ON T.CustomerID = Y.CustomerID \nWHERE SUBSTR(Y.Date, 1, 6) = '201306';\t----- bird -----\tdebit_card_specializing",
    "16": "SELECT COUNT(DISTINCT Y.CustomerID) \nFROM yearmonth AS Y \nJOIN customers AS C ON Y.CustomerID = C.CustomerID \nWHERE C.Currency = 'EUR' AND Y.Consumption > 1000;\t----- bird -----\tdebit_card_specializing",
    "17": "SELECT DISTINCT P.Description \nFROM transactions_1k AS T \nJOIN gasstations AS G ON T.GasStationID = G.GasStationID \nJOIN products AS P ON T.ProductID = P.ProductID \nWHERE G.Country = 'CZE';\t----- bird -----\tdebit_card_specializing",
    "18": "SELECT DISTINCT Time FROM transactions_1k WHERE GasStationID IN (SELECT GasStationID FROM gasstations WHERE ChainID = 11);\t----- bird -----\tdebit_card_specializing",
    "19": "SELECT COUNT(*) \nFROM transactions_1k AS T \nJOIN gasstations AS G ON T.GasStationID = G.GasStationID \nWHERE G.Country = 'CZE' AND T.Date > '2012-01-01';\t----- bird -----\tdebit_card_specializing",
    "20": "SELECT C.Currency \nFROM transactions_1k AS T \nINNER JOIN customers AS C ON T.CustomerID = C.CustomerID \nWHERE T.Date = '2012-08-24' AND T.Time = '16:25:00';\t----- bird -----\tdebit_card_specializing",
    "21": "SELECT C.Segment \nFROM customers AS C \nINNER JOIN transactions_1k AS T ON C.CustomerID = T.CustomerID \nWHERE T.Date = '2012-08-23' AND T.Time = '21:20:00';\t----- bird -----\tdebit_card_specializing",
    "22": "SELECT COUNT(*) \nFROM transactions_1k AS T \nINNER JOIN gasstations AS G ON T.GasStationID = G.GasStationID \nWHERE G.Country = 'CZE' \nAND T.Date = '2012-08-26' \nAND T.Time BETWEEN '08:00:00' AND '09:00:00';\t----- bird -----\tdebit_card_specializing",
    "23": "SELECT C.Nationality \nFROM customers AS C \nINNER JOIN transactions_1k AS T ON C.CustomerID = T.CustomerID \nWHERE T.Date = '2012-08-24' AND T.Amount = 548.4;\t----- bird -----\tdebit_card_specializing",
    "24": "SELECT (COUNT(DISTINCT C.CustomerID) * 100.0 / (SELECT COUNT(DISTINCT CustomerID) FROM transactions_1k WHERE Date = '2012-08-25')) AS Percentage_EUR_Customers \nFROM customers AS C \nINNER JOIN transactions_1k AS T ON C.CustomerID = T.CustomerID \nWHERE C.Currency = 'EUR' AND T.Date = '2012-08-25';\t----- bird -----\tdebit_card_specializing",
    "25": "SELECT (SUM(CASE WHEN Y.Date LIKE '2012%' THEN Consumption ELSE 0 END) - \n         SUM(CASE WHEN Y.Date LIKE '2013%' THEN Consumption ELSE 0 END)) / \n         SUM(CASE WHEN Y.Date LIKE '2012%' THEN Consumption ELSE 0 END) AS Consumption_Decrease_Rate\nFROM yearmonth Y\nINNER JOIN transactions_1k T ON Y.CustomerID = T.CustomerID\nWHERE T.Date = '2012-08-25' AND T.Amount = 634.8;\t----- bird -----\tdebit_card_specializing",
    "26": "SELECT CAST(SUM(CASE WHEN Segment = 'premium' THEN 1 ELSE 0 END) AS FLOAT) * 100 / COUNT(*) \nFROM gasstations \nWHERE Country = 'SVK';\t----- bird -----\tdebit_card_specializing",
    "27": "SELECT SUM(T.Amount) AS Total_Spent, \n       (SELECT SUM(T1.Amount) FROM transactions_1k AS T1 \n        WHERE T1.CustomerID = 38508 AND T1.Date LIKE '2012-01%') AS January_Spent \nFROM transactions_1k AS T \nWHERE T.CustomerID = 38508;\t----- bird -----\tdebit_card_specializing",
    "28": "SELECT C.CustomerID, SUM(T.Price) AS Total_Spent, AVG(T.Price / T.Amount) AS Average_Price_Per_Item, C.Currency \nFROM customers AS C \nJOIN transactions_1k AS T ON C.CustomerID = T.CustomerID \nGROUP BY C.CustomerID \nORDER BY Total_Spent DESC \nLIMIT 1;\t----- bird -----\tdebit_card_specializing",
    "29": "SELECT Y.CustomerID, Y.Consumption \nFROM yearmonth AS Y \nJOIN transactions_1k AS T ON Y.CustomerID = T.CustomerID \nWHERE Y.Date = '201208' AND (T.Price / T.Amount) > 29.00 AND T.ProductID = 5;\t----- bird -----\tdebit_card_specializing",
    "30": "SELECT MJ.major_name \nFROM member AS M \nINNER JOIN major AS MJ ON M.link_to_major = MJ.major_id \nWHERE M.first_name = 'Angela' AND M.last_name = 'Sanders';\t----- bird -----\tstudent_club",
    "31": "SELECT COUNT(DISTINCT M.member_id) \nFROM attendance AS A \nJOIN event AS E ON A.link_to_event = E.event_id \nJOIN member AS M ON A.link_to_member = M.member_id \nWHERE E.event_name = 'Women\\'s Soccer' AND M.t_shirt_size = 'Medium';\t----- bird -----\tstudent_club",
    "32": "SELECT COUNT(DISTINCT E.event_id) \nFROM event AS E \nJOIN attendance AS A ON E.event_id = A.link_to_event \nWHERE E.type = 'Meeting' \nGROUP BY E.event_id \nHAVING COUNT(A.link_to_member) > 10;\t----- bird -----\tstudent_club",
    "33": "SELECT E.event_name \nFROM event AS E \nJOIN attendance AS A ON E.event_id = A.link_to_event \nGROUP BY E.event_id \nHAVING COUNT(A.link_to_member) > 20 AND E.type != 'Fundraiser';\t----- bird -----\tstudent_club",
    "34": "SELECT SUM(I.amount) \nFROM income AS I \nJOIN member AS M ON I.link_to_member = M.member_id \nWHERE M.position = 'Vice President';\t----- bird -----\tstudent_club",
    "35": "SELECT first_name || ' ' || last_name AS full_name \nFROM member AS M \nJOIN zip_code AS Z ON M.zip = Z.zip_code \nWHERE Z.state = 'Illinois';\t----- bird -----\tstudent_club",
    "36": "SELECT E.approved\nFROM expense AS E \nINNER JOIN budget AS B ON E.link_to_budget = B.budget_id \nINNER JOIN event AS EVT ON B.link_to_event = EVT.event_id \nWHERE EVT.event_name = 'October Meeting' AND EVT.event_date = '2019-10-08';\t----- bird -----\tstudent_club",
    "37": "SELECT AVG(E.cost) AS Average_Cost\nFROM expense AS E\nJOIN member AS M ON E.link_to_member = M.member_id\nWHERE M.first_name = 'Elijah' AND M.last_name = 'Allen' \nAND (strftime('%m', E.expense_date) = '09' OR strftime('%m', E.expense_date) = '10');\t----- bird -----\tstudent_club",
    "38": "SELECT \n    (SELECT SUM(B.spent) FROM budget AS B \n     JOIN event AS E ON B.link_to_event = E.event_id \n     WHERE SUBSTR(E.event_date, 1, 4) = '2019') - \n    (SELECT SUM(B.spent) FROM budget AS B \n     JOIN event AS E ON B.link_to_event = E.event_id \n     WHERE SUBSTR(E.event_date, 1, 4) = '2020') AS Total_Amount_Difference;\t----- bird -----\tstudent_club",
    "39": "SELECT notes \nFROM income \nWHERE source = 'Fundraising' AND date_received = '2019-09-14';\t----- bird -----\tstudent_club",
    "40": "SELECT phone FROM member WHERE first_name = 'Carlo' AND last_name = 'Jacobs';\t----- bird -----\tstudent_club",
    "41": "SELECT B.event_status \nFROM expense AS E \nINNER JOIN budget AS B ON E.link_to_budget = B.budget_id \nWHERE E.expense_description = 'Post Cards, Posters' AND E.expense_date = '2019-8-20';\t----- bird -----\tstudent_club",
    "42": "SELECT M.link_to_major, MA.major_name \nFROM member AS M \nJOIN major AS MA ON M.link_to_major = MA.major_id \nWHERE M.first_name = 'Brent' AND M.last_name = 'Thomason';\t----- bird -----\tstudent_club",
    "43": "SELECT COUNT(M.member_id) \nFROM member AS M \nJOIN major AS J ON M.link_to_major = J.major_id \nWHERE J.major_name = 'Business' AND M.t_shirt_size = 'Medium';\t----- bird -----\tstudent_club",
    "44": "SELECT MA.department \nFROM member AS M \nJOIN major AS MA ON M.link_to_major = MA.major_id \nWHERE M.position = 'President';\t----- bird -----\tstudent_club",
    "45": "SELECT I.date_received \nFROM income AS I \nINNER JOIN member AS M ON I.link_to_member = M.member_id \nWHERE M.first_name = 'Connor' AND M.last_name = 'Hilton' AND I.source = 'Dues';\t----- bird -----\tstudent_club",
    "46": "SELECT \n    (SUM(CASE WHEN EVT.event_name = 'Yearly Kickoff' THEN B.amount ELSE 0 END) * 1.0) / \n    (SUM(CASE WHEN EVT.event_name = 'October Meeting' THEN B.amount ELSE 0 END)) AS Budget_Ratio\nFROM \n    budget AS B\nINNER JOIN \n    event AS EVT ON B.link_to_event = EVT.event_id\nWHERE \n    B.category = 'Advertisement';\t----- bird -----\tstudent_club",
    "47": "SELECT SUM(cost) AS Total_Cost_Of_Pizzas FROM expense WHERE expense_description = 'Pizza';\t----- bird -----\tstudent_club",
    "48": "SELECT COUNT(DISTINCT city) FROM zip_code WHERE county = 'Orange County' AND state = 'Virginia';\t----- bird -----\tstudent_club",
    "49": "SELECT MA.major_name \nFROM member AS M \nJOIN major AS MA ON M.link_to_major = MA.major_id \nWHERE M.phone = '809-555-3360';\t----- bird -----\tstudent_club",
    "50": "SELECT COUNT(DISTINCT A.link_to_member) \nFROM attendance AS A \nJOIN event AS E ON A.link_to_event = E.event_id \nWHERE E.event_name = 'Women''s Soccer';\t----- bird -----\tstudent_club",
    "51": "SELECT M.first_name || ' ' || M.last_name AS full_name \nFROM member AS M \nJOIN major AS MA ON M.link_to_major = MA.major_id \nWHERE MA.department = 'School of Applied Sciences, Technology and Education';\t----- bird -----\tstudent_club",
    "52": "SELECT EVT.event_name, MAX(B.spent / B.amount) AS Spend_To_Budget_Ratio \nFROM event AS EVT \nINNER JOIN budget AS B ON EVT.event_id = B.link_to_event \nWHERE EVT.status = 'Closed' \nGROUP BY EVT.event_name \nORDER BY Spend_To_Budget_Ratio DESC \nLIMIT 1;\t----- bird -----\tstudent_club",
    "53": "SELECT MAX(spent) FROM budget;\t----- bird -----\tstudent_club",
    "54": "SELECT SUM(spent) AS Total_Spent_Food \nFROM budget \nWHERE category = 'Food';\t----- bird -----\tstudent_club",
    "55": "SELECT M.first_name || ' ' || M.last_name AS full_name \nFROM member AS M \nJOIN attendance AS A ON M.member_id = A.link_to_member \nGROUP BY M.member_id \nHAVING COUNT(A.link_to_event) > 7;\t----- bird -----\tstudent_club",
    "56": "SELECT M.first_name || ' ' || M.last_name AS full_name \nFROM member AS M \nJOIN attendance AS A ON M.member_id = A.link_to_member \nJOIN event AS E ON A.link_to_event = E.event_id \nJOIN budget AS B ON E.event_id = B.link_to_event \nWHERE E.event_name = 'Yearly Kickoff' \nLIMIT 1;\t----- bird -----\tstudent_club",
    "57": "SELECT EVT.event_name \nFROM event AS EVT \nINNER JOIN budget AS B ON EVT.event_id = B.link_to_event \nINNER JOIN expense AS E ON B.budget_id = E.link_to_budget \nORDER BY E.cost ASC \nLIMIT 1;\t----- bird -----\tstudent_club",
    "58": "SELECT (SUM(E.cost) / (SELECT SUM(cost) FROM expense)) * 100 AS percentage_cost \nFROM expense AS E \nJOIN budget AS B ON E.link_to_budget = B.budget_id \nJOIN event AS EVT ON B.link_to_event = EVT.event_id \nWHERE EVT.event_name = 'Yearly Kickoff';\t----- bird -----\tstudent_club",
    "59": "SELECT source, SUM(amount) AS total_amount \nFROM income \nWHERE date_received BETWEEN '2019-09-01' AND '2019-09-30' \nGROUP BY source \nORDER BY total_amount DESC \nLIMIT 1;\t----- bird -----\tstudent_club",
    "60": "SELECT COUNT(*) \nFROM member AS M \nJOIN major AS MA ON M.link_to_major = MA.major_id \nWHERE MA.major_name = 'Physics Teaching';\t----- bird -----\tstudent_club",
    "61": "SELECT E.event_name \nFROM budget AS B \nINNER JOIN event AS E ON B.link_to_event = E.event_id \nWHERE B.category = 'Advertisement' \nORDER BY B.spent DESC \nLIMIT 1;\t----- bird -----\tstudent_club",
    "62": "SELECT CASE WHEN COUNT(A.link_to_event) > 0 THEN 'Yes' ELSE 'No' END AS attended\nFROM member AS M\nJOIN attendance AS A ON M.member_id = A.link_to_member\nJOIN event AS E ON A.link_to_event = E.event_id\nWHERE M.first_name = 'Maya' AND M.last_name = 'Mclean' AND E.event_name = 'Women''s Soccer';\t----- bird -----\tstudent_club",
    "63": "SELECT E.cost \nFROM expense AS E \nINNER JOIN budget AS B ON E.link_to_budget = B.budget_id \nINNER JOIN event AS EVT ON B.link_to_event = EVT.event_id \nWHERE E.expense_description = 'Posters' AND EVT.event_name = 'September Speaker';\t----- bird -----\tstudent_club",
    "64": "SELECT EVT.event_name \nFROM event AS EVT \nINNER JOIN budget AS B ON EVT.event_id = B.link_to_event \nWHERE EVT.status = 'Closed' AND B.remaining < 0 \nORDER BY B.remaining ASC \nLIMIT 1;\t----- bird -----\tstudent_club",
    "65": "SELECT E.expense_description, SUM(E.cost) AS total_value\nFROM expense AS E \nINNER JOIN budget AS B ON E.link_to_budget = B.budget_id \nINNER JOIN event AS EVT ON B.link_to_event = EVT.event_id \nWHERE EVT.event_name = 'October Meeting' AND E.approved = 'True' \nGROUP BY E.expense_description;\t----- bird -----\tstudent_club",
    "66": "SELECT B.category, SUM(B.amount) AS total_budgeted \nFROM budget AS B \nINNER JOIN event AS EVT ON B.link_to_event = EVT.event_id \nWHERE EVT.event_name = 'April Speaker' \nGROUP BY B.category \nORDER BY total_budgeted ASC;\t----- bird -----\tstudent_club",
    "67": "SELECT SUM(cost) AS total_expense \nFROM expense \nWHERE expense_date = '2019-08-20';\t----- bird -----\tstudent_club",
    "68": "SELECT M.first_name || ' ' || M.last_name AS full_name, SUM(E.cost) AS total_cost\nFROM member AS M\nINNER JOIN expense AS E ON M.member_id = E.link_to_member\nWHERE M.member_id = 'rec4BLdZHS2Blfp4v'\nGROUP BY M.member_id;\t----- bird -----\tstudent_club",
    "69": "SELECT E.expense_description \nFROM member AS M \nJOIN expense AS E ON M.member_id = E.link_to_member \nWHERE M.first_name = 'Sacha' AND M.last_name = 'Harrison';\t----- bird -----\tstudent_club",
    "70": "SELECT DISTINCT E.type \nFROM event AS E \nWHERE E.location = 'MU 215';\t----- bird -----\tstudent_club",
    "71": "SELECT M.last_name, MA.department, MA.college \nFROM member AS M \nJOIN major AS MA ON M.link_to_major = MA.major_id \nWHERE MA.major_name = 'Environmental Engineering';\t----- bird -----\tstudent_club",
    "72": "SELECT DISTINCT B.category \nFROM event AS E \nINNER JOIN budget AS B ON E.event_id = B.link_to_event \nWHERE E.location = 'MU 215' AND E.type = 'Guest Speaker' AND B.spent = 0;\t----- bird -----\tstudent_club",
    "73": "SELECT CAST(SUM(CASE WHEN I.amount = 50 THEN 1 ELSE 0 END) AS FLOAT) * 100 / COUNT(M.member_id) AS Percentage_Medium_Members  \nFROM member AS M \nLEFT JOIN income AS I ON M.member_id = I.link_to_member \nWHERE M.t_shirt_size = 'Medium' AND M.position = 'Member';\t----- bird -----\tstudent_club",
    "74": "SELECT event_name \nFROM event \nWHERE type = 'Game' AND status = 'Closed' AND event_date BETWEEN '2019-03-15' AND '2020-03-20';\t----- bird -----\tstudent_club",
    "75": "SELECT M.first_name || ' ' || M.last_name AS full_name, M.phone \nFROM member AS M \nINNER JOIN expense AS E ON M.member_id = E.link_to_member \nGROUP BY M.member_id \nHAVING SUM(E.cost) > (SELECT AVG(cost) FROM expense);\t----- bird -----\tstudent_club",
    "76": "SELECT M.first_name || ' ' || M.last_name AS full_name, SUM(E.cost) AS total_cost \nFROM member AS M \nINNER JOIN expense AS E ON M.member_id = E.link_to_member \nWHERE E.expense_description IN ('Water', 'Veggie tray', 'supplies') \nGROUP BY M.member_id;\t----- bird -----\tstudent_club",
    "77": "SELECT M.first_name || ' ' || M.last_name AS full_name, I.amount \nFROM member AS M \nJOIN income AS I ON M.member_id = I.link_to_member \nWHERE I.date_received = '2019-09-09';\t----- bird -----\tstudent_club",
    "78": "SELECT \n    CASE \n        WHEN COUNT(CASE WHEN Admission = '+' THEN ID END) > COUNT(CASE WHEN Admission = '-' THEN ID END) \n        THEN 'In-patient' \n        ELSE 'Outpatient' \n    END AS More_Type,\n    ABS(CAST(COUNT(CASE WHEN Admission = '+' AND SEX = 'M' THEN ID END) AS FLOAT) / NULLIF(COUNT(CASE WHEN Admission = '-' AND SEX = 'M' THEN ID END), 0) * 100) AS Percentage_Deviation \nFROM Patient \nWHERE SEX = 'M';\t----- bird -----\tthrombosis_prediction",
    "79": "SELECT CAST(COUNT(CASE WHEN strftime('%Y', Birthday) > '1930' AND SEX = 'F' THEN ID END) AS FLOAT) * 100 / NULLIF(COUNT(CASE WHEN SEX = 'F' THEN ID END), 0) AS Percentage_Female_Born_After_1930 \nFROM Patient;\t----- bird -----\tthrombosis_prediction",
    "80": "SELECT CAST(COUNT(CASE WHEN Admission = '+' THEN ID END) AS FLOAT) / NULLIF(COUNT(CASE WHEN Admission = '-' THEN ID END), 0) AS Ratio_Outpatient_Inpatient\nFROM Patient\nWHERE Diagnosis = 'SLE';\t----- bird -----\tthrombosis_prediction",
    "81": "SELECT P.Diagnosis, L.Date \nFROM Patient AS P \nJOIN Laboratory AS L ON P.ID = L.ID \nWHERE P.ID = 30609;\t----- bird -----\tthrombosis_prediction",
    "82": "SELECT P.ID, P.SEX, P.Birthday \nFROM Patient AS P \nJOIN Laboratory AS L ON P.ID = L.ID \nWHERE L.LDH > 500;\t----- bird -----\tthrombosis_prediction",
    "83": "SELECT P.ID, STRFTIME('%Y', 'now') - STRFTIME('%Y', P.Birthday) AS Age \nFROM Patient AS P \nINNER JOIN Examination AS E ON P.ID = E.ID \nWHERE E.RVVT = '+';\t----- bird -----\tthrombosis_prediction",
    "84": "SELECT ID, SEX, Diagnosis FROM Patient WHERE ID IN (SELECT ID FROM Examination WHERE Thrombosis = 2);\t----- bird -----\tthrombosis_prediction",
    "85": "SELECT COUNT(*) \nFROM Patient \nWHERE SEX = 'F' \n  AND strftime('%Y', Description) = '1997' \n  AND Admission = '-';\t----- bird -----\tthrombosis_prediction",
    "86": "SELECT COUNT(*) \nFROM Patient P \nJOIN Examination E ON P.ID = E.ID \nWHERE E.Thrombosis = 1 AND P.SEX = 'F' AND strftime('%Y', E.`Examination Date`) = '1997';\t----- bird -----\tthrombosis_prediction",
    "87": "SELECT P.Symptoms, E.Diagnosis \nFROM Patient AS P \nJOIN Examination AS E ON P.ID = E.ID \nWHERE P.Birthday = (SELECT MAX(Birthday) FROM Patient) AND E.Symptoms IS NOT NULL;\t----- bird -----\tthrombosis_prediction",
    "88": "SELECT MAX(L.Date) AS Lab_Completion_Date, \n       (STRFTIME('%Y', P.`First Date`) - STRFTIME('%Y', P.Birthday)) AS Age \nFROM Patient AS P \nINNER JOIN Laboratory AS L ON P.ID = L.ID \nWHERE P.Diagnosis = 'SJS' \nGROUP BY P.ID \nORDER BY P.Birthday DESC \nLIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "89": "SELECT \n    CAST(SUM(CASE WHEN P.SEX = 'M' AND L.UA <= 8.0 THEN 1 ELSE 0 END) AS REAL) / NULLIF(SUM(CASE WHEN P.SEX = 'F' AND L.UA <= 6.5 THEN 1 ELSE 0 END), 0) AS Ratio_Male_to_Female \nFROM Patient P \nJOIN Laboratory L ON P.ID = L.ID \nWHERE L.UA IS NOT NULL;\t----- bird -----\tthrombosis_prediction",
    "90": "SELECT COUNT(DISTINCT P.ID) \nFROM Patient AS P \nJOIN Examination AS E ON P.ID = E.ID \nWHERE strftime('%Y', P.Birthday) < 18 \nAND strftime('%Y', E.`Examination Date`) BETWEEN '1990' AND '1993';\t----- bird -----\tthrombosis_prediction",
    "91": "SELECT STRFTIME('%Y', E.`Examination Date`) - STRFTIME('%Y', P.Birthday) AS Age, E.Diagnosis\nFROM Patient AS P\nJOIN Laboratory AS L ON P.ID = L.ID\nJOIN Examination AS E ON P.ID = E.ID\nWHERE L.HGB = (SELECT MAX(HGB) FROM Laboratory)\nLIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "92": "SELECT E.`aCL IgM` \nFROM Patient AS P \nJOIN Examination AS E ON P.ID = E.ID \nWHERE P.Diagnosis = 'SLE' \nAND P.Description = '1994-02-19' \nAND E.`Examination Date` = '1993-11-12';\t----- bird -----\tthrombosis_prediction",
    "93": "SELECT \n    (SUM(CASE WHEN L.Date LIKE '1981-11-%' THEN L.`T-CHO` ELSE 0 END) - \n    SUM(CASE WHEN L.Date LIKE '1981-12-%' THEN L.`T-CHO` ELSE 0 END)) / \n    SUM(CASE WHEN L.Date LIKE '1981-12-%' THEN L.`T-CHO` ELSE 0 END) AS Decrease_Rate \nFROM Patient AS P \nJOIN Laboratory AS L ON P.ID = L.ID \nWHERE P.Birthday = '1959-02-18';\t----- bird -----\tthrombosis_prediction",
    "94": "SELECT DISTINCT L.ID \nFROM Laboratory AS L \nJOIN Examination AS E ON L.ID = E.ID \nWHERE E.`Examination Date` BETWEEN '1987-07-06' AND '1996-01-31' \nAND L.GPT > 30 \nAND L.ALB < 4;\t----- bird -----\tthrombosis_prediction",
    "95": "SELECT COUNT(*) \nFROM Examination AS E \nJOIN Patient AS P ON E.ID = P.ID \nWHERE E.Thrombosis = 2 \nAND E.`ANA Pattern` = 'S' \nAND E.`aCL IgM` > (SELECT AVG(E2.`aCL IgM`) * 1.2 FROM Examination AS E2);\t----- bird -----\tthrombosis_prediction",
    "96": "SELECT P.ID \nFROM Patient AS P \nJOIN Laboratory AS L ON P.ID = L.ID \nWHERE P.Admission = '-' \nAND L.Date LIKE '1991-10%' \nAND L.`T-BIL` < 2.0;\t----- bird -----\tthrombosis_prediction",
    "97": "SELECT AVG(L.ALB) \nFROM Patient AS P \nJOIN Laboratory AS L ON P.ID = L.ID \nWHERE P.SEX = 'F' \nAND L.PLT > 400 \nAND P.Diagnosis = 'SLE';\t----- bird -----\tthrombosis_prediction",
    "98": "SELECT COUNT(ID) FROM Patient WHERE SEX = 'F' AND Diagnosis = 'APS';\t----- bird -----\tthrombosis_prediction",
    "99": "SELECT CAST(SUM(CASE WHEN SEX = 'F' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(SEX) \nFROM Patient \nWHERE strftime('%Y', Birthday) = '1980' AND Diagnosis = 'RA'\t----- bird -----\tthrombosis_prediction",
    "100": "SELECT CASE \n           WHEN P.SEX = 'M' AND L.UA > 8.0 THEN 'Normal' \n           WHEN P.SEX = 'F' AND L.UA > 6.5 THEN 'Normal' \n           ELSE 'Abnormal' \n       END AS Uric_Acid_Status \nFROM Patient AS P \nJOIN Laboratory AS L ON P.ID = L.ID \nWHERE P.ID = 57266;\t----- bird -----\tthrombosis_prediction",
    "101": "SELECT DISTINCT P.ID \nFROM Patient AS P \nJOIN Laboratory AS L ON P.ID = L.ID \nWHERE P.SEX = 'M' AND L.GPT >= 60;\t----- bird -----\tthrombosis_prediction",
    "102": "SELECT P.Diagnosis \nFROM Patient AS P \nJOIN Laboratory AS L ON P.ID = L.ID \nWHERE L.GPT > 60 \nORDER BY P.Birthday ASC;\t----- bird -----\tthrombosis_prediction",
    "103": "SELECT P.ID, P.SEX, P.Birthday \nFROM Patient AS P \nJOIN Laboratory AS L ON P.ID = L.ID \nWHERE L.UN = 29;\t----- bird -----\tthrombosis_prediction",
    "104": "SELECT SEX, GROUP_CONCAT(DISTINCT P.ID) AS Patient_IDs \nFROM Patient AS P \nJOIN Laboratory AS L ON P.ID = L.ID \nWHERE L.`T-BIL` >= 2.0 \nGROUP BY SEX;\t----- bird -----\tthrombosis_prediction",
    "105": "SELECT AVG(STRFTIME('%Y', 'now') - STRFTIME('%Y', P.Birthday)) AS Average_Age \nFROM Patient AS P \nJOIN Laboratory AS L ON P.ID = L.ID \nWHERE P.SEX = 'M' AND L.`T-CHO` >= 250;\t----- bird -----\tthrombosis_prediction",
    "106": "SELECT COUNT(DISTINCT P.ID) \nFROM Patient AS P \nJOIN Laboratory AS L ON P.ID = L.ID \nWHERE L.TG >= 200 AND (STRFTIME('%Y', CURRENT_TIMESTAMP) - STRFTIME('%Y', P.Birthday)) > 50;\t----- bird -----\tthrombosis_prediction",
    "107": "SELECT COUNT(DISTINCT P.ID) \nFROM Patient AS P \nJOIN Laboratory AS L ON P.ID = L.ID \nWHERE P.Birthday BETWEEN '1936-01-01' AND '1956-12-31' \nAND P.SEX = 'M' \nAND L.CPK >= 250;\t----- bird -----\tthrombosis_prediction",
    "108": "SELECT P.ID, P.SEX, STRFTIME('%Y', CURRENT_TIMESTAMP) - STRFTIME('%Y', P.Birthday) AS Age\nFROM Patient AS P\nJOIN Laboratory AS L ON P.ID = L.ID\nWHERE L.GLU >= 180 AND L.`T-CHO` < 250;\t----- bird -----\tthrombosis_prediction",
    "109": "SELECT P.ID, STRFTIME('%Y', 'now') - STRFTIME('%Y', P.Birthday) AS Age, P.Diagnosis \nFROM Patient AS P \nJOIN Laboratory AS L ON P.ID = L.ID \nWHERE L.RBC < 3.5;\t----- bird -----\tthrombosis_prediction",
    "110": "SELECT P.ID, P.SEX \nFROM Patient AS P \nJOIN Laboratory AS L ON P.ID = L.ID \nWHERE P.Diagnosis = 'SLE' \nAND L.HGB > 10 AND L.HGB < 17 \nORDER BY P.Birthday ASC \nLIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "111": "SELECT P.ID, strftime('%Y', CURRENT_TIMESTAMP) - strftime('%Y', P.Birthday) AS Age \nFROM Patient AS P \nJOIN Laboratory AS L ON P.ID = L.ID \nWHERE L.HCT >= 52 \nGROUP BY P.ID \nHAVING COUNT(L.ID) > 2;\t----- bird -----\tthrombosis_prediction",
    "112": "SELECT \n    SUM(CASE WHEN PLT < 100 THEN 1 ELSE 0 END) AS Lower_Than_Normal,\n    SUM(CASE WHEN PLT > 400 THEN 1 ELSE 0 END) AS Higher_Than_Normal  \nFROM Laboratory \nWHERE PLT <= 100 OR PLT >= 400;\t----- bird -----\tthrombosis_prediction",
    "113": "SELECT P.ID, STRFTIME('%Y', CURRENT_TIMESTAMP) - STRFTIME('%Y', P.Birthday) AS Age \nFROM Patient AS P \nJOIN Laboratory AS L ON P.ID = L.ID \nWHERE STRFTIME('%Y', L.Date) = '1984' \nAND (STRFTIME('%Y', CURRENT_TIMESTAMP) - STRFTIME('%Y', P.Birthday)) < 50 \nAND L.PLT BETWEEN 100 AND 400;\t----- bird -----\tthrombosis_prediction",
    "114": "SELECT (SUM(CASE WHEN P.SEX = 'F' AND L.PT >= 14 THEN 1 ELSE 0 END) * 100.0 / NULLIF(SUM(L.PT >= 14), 0)) AS Percentage_Female_Abnormal_PT\nFROM Patient AS P\nJOIN Laboratory AS L ON P.ID = L.ID\nWHERE (STRFTIME('%Y', CURRENT_TIMESTAMP) - STRFTIME('%Y', P.Birthday)) > 55;\t----- bird -----\tthrombosis_prediction",
    "115": "SELECT COUNT(DISTINCT P.ID) AS Abnormal_Fibrinogen_Count\nFROM Patient AS P\nJOIN Laboratory AS L ON P.ID = L.ID\nWHERE P.SEX = 'M' AND L.WBC > 3.5 AND L.WBC < 9.0 AND (L.FG <= 150 OR L.FG >= 450);\t----- bird -----\tthrombosis_prediction",
    "116": "SELECT COUNT(DISTINCT ID) FROM Laboratory WHERE IGG >= 2000;\t----- bird -----\tthrombosis_prediction",
    "117": "SELECT COUNT(DISTINCT P.ID) \nFROM Patient AS P \nJOIN Laboratory AS L ON P.ID = L.ID \nJOIN Examination AS E ON P.ID = E.ID \nWHERE L.IGG > 900 AND L.IGG < 2000 AND E.Symptoms IS NOT NULL;\t----- bird -----\tthrombosis_prediction",
    "118": "SELECT COUNT(DISTINCT P.ID) \nFROM Patient AS P \nJOIN Laboratory AS L ON P.ID = L.ID \nWHERE L.IGA > 80 AND L.IGA < 500 AND strftime('%Y', P.`First Date`) >= '1990';\t----- bird -----\tthrombosis_prediction",
    "119": "SELECT Diagnosis, COUNT(Diagnosis) as Diagnosis_Count \nFROM Patient AS P \nJOIN Laboratory AS L ON P.ID = L.ID \nWHERE L.IGM <= 40 OR L.IGM >= 400 \nGROUP BY Diagnosis \nORDER BY Diagnosis_Count DESC \nLIMIT 1;\t----- bird -----\tthrombosis_prediction",
    "120": "SELECT COUNT(DISTINCT P.ID) \nFROM Patient AS P \nJOIN Laboratory AS L ON P.ID = L.ID \nWHERE L.CRP = '+' AND P.Description IS NULL;\t----- bird -----\tthrombosis_prediction",
    "121": "SELECT COUNT(DISTINCT P.ID) \nFROM Patient AS P \nJOIN Laboratory AS L ON P.ID = L.ID \nWHERE L.CRE >= 1.5 AND (STRFTIME('%Y', CURRENT_TIMESTAMP) - STRFTIME('%Y', P.Birthday)) < 70;\t----- bird -----\tthrombosis_prediction",
    "122": "SELECT COUNT(DISTINCT P.ID) \nFROM Patient AS P \nJOIN Laboratory AS L ON P.ID = L.ID \nWHERE L.RNP IN ('-', '+-') AND P.Admission = '+';\t----- bird -----\tthrombosis_prediction",
    "123": "SELECT COUNT(DISTINCT P.ID) \nFROM Patient AS P \nJOIN Laboratory AS L ON P.ID = L.ID \nWHERE L.SM IN ('-', '+-') AND P.Thrombosis = 0;\t----- bird -----\tthrombosis_prediction",
    "124": "SELECT COUNT(DISTINCT P.ID) \nFROM Patient AS P \nJOIN Laboratory AS L ON P.ID = L.ID \nJOIN Examination AS E ON P.ID = E.ID \nWHERE L.SC170 IN ('negative', '0') AND P.SEX = 'F' AND E.Symptoms IS NULL;\t----- bird -----\tthrombosis_prediction",
    "125": "SELECT COUNT(DISTINCT P.ID) \nFROM Patient AS P \nJOIN Laboratory AS L ON P.ID = L.ID \nWHERE L.CENTROMEA IN ('-', '+-') AND L.SSB IN ('-', '+-') AND P.SEX = 'M';\t----- bird -----\tthrombosis_prediction",
    "126": "SELECT MIN(P.Birthday) \nFROM Patient AS P \nJOIN Laboratory AS L ON P.ID = L.ID \nWHERE L.GOT >= 60;\t----- bird -----\tthrombosis_prediction",
    "127": "SELECT COUNT(DISTINCT P.ID) \nFROM Patient AS P \nJOIN Examination AS E ON P.ID = E.ID \nWHERE L.CPK < 250 AND (E.KCT = '+' OR E.RVVT = '+' OR E.LAC = '+');\t----- bird -----\tthrombosis_prediction",
    "128": "SELECT L.name \nFROM League AS L \nINNER JOIN Match AS M ON L.id = M.league_id \nWHERE M.season = '2015/2016' \nGROUP BY L.id \nORDER BY SUM(M.home_team_goal + M.away_team_goal) DESC \nLIMIT 1;\t----- bird -----\teuropean_football_2",
    "129": "SELECT T.team_long_name \nFROM Match M \nJOIN Team T ON M.away_team_api_id = T.team_api_id \nJOIN League L ON M.league_id = L.id \nWHERE L.name = 'Scotland Premier League' AND M.season = '2009/2010' AND M.away_team_goal > M.home_team_goal \nGROUP BY T.team_long_name \nORDER BY COUNT(*) DESC \nLIMIT 1;\t----- bird -----\teuropean_football_2",
    "130": "SELECT T.team_long_name, TA.buildUpPlaySpeed \nFROM Team AS T \nJOIN Team_Attributes AS TA ON T.team_api_id = TA.team_api_id \nORDER BY TA.buildUpPlaySpeed DESC \nLIMIT 4;\t----- bird -----\teuropean_football_2",
    "131": "SELECT L.name \nFROM Match M \nJOIN League L ON M.league_id = L.id \nWHERE M.season = '2015/2016' AND M.home_team_goal = M.away_team_goal \nGROUP BY L.id \nORDER BY COUNT(*) DESC \nLIMIT 1;\t----- bird -----\teuropean_football_2",
    "132": "SELECT (STRFTIME('%Y', 'now') - STRFTIME('%Y', P.birthday)) AS age \nFROM Player AS P \nJOIN Player_Attributes AS PA ON P.player_api_id = PA.player_api_id \nWHERE PA.sprint_speed >= 97 AND PA.date BETWEEN '2013-01-01' AND '2015-12-31';\t----- bird -----\teuropean_football_2",
    "133": "SELECT L.name, COUNT(M.id) AS total_matches \nFROM Match M \nJOIN League L ON M.league_id = L.id \nGROUP BY L.id \nORDER BY total_matches DESC \nLIMIT 1;\t----- bird -----\teuropean_football_2",
    "134": "SELECT T.team_fifa_api_id \nFROM Team_Attributes AS TA \nJOIN Team AS T ON TA.team_api_id = T.team_api_id \nWHERE TA.buildUpPlaySpeed > 50 AND TA.buildUpPlaySpeed < 60;\t----- bird -----\teuropean_football_2",
    "135": "SELECT T.team_long_name \nFROM Team AS T \nJOIN Team_Attributes AS TA ON T.team_api_id = TA.team_api_id \nWHERE TA.buildUpPlayPassing > (SELECT AVG(buildUpPlayPassing) \n                                 FROM Team_Attributes \n                                 WHERE strftime('%Y', date) = '2012' AND buildUpPlayPassing IS NOT NULL) \nAND strftime('%Y', TA.date) = '2012';\t----- bird -----\teuropean_football_2",
    "136": "SELECT CAST(SUM(CASE WHEN PA.preferred_foot = 'left' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) \nFROM Player AS P \nJOIN Player_Attributes AS PA ON P.player_fifa_api_id = PA.player_fifa_api_id \nWHERE P.birthday BETWEEN '1987-01-01' AND '1992-12-31';\t----- bird -----\teuropean_football_2",
    "137": "SELECT AVG(PA.long_shots) \nFROM Player AS P \nJOIN Player_Attributes AS PA ON P.player_fifa_api_id = PA.player_fifa_api_id \nWHERE P.player_name = 'Ahmed Samir Farag';\t----- bird -----\teuropean_football_2",
    "138": "SELECT P.player_name, AVG(PA.heading_accuracy) AS average_heading_accuracy \nFROM Player AS P \nJOIN Player_Attributes AS PA ON P.player_fifa_api_id = PA.player_fifa_api_id \nWHERE P.height > 180 \nGROUP BY P.player_fifa_api_id \nORDER BY average_heading_accuracy DESC \nLIMIT 10;\t----- bird -----\teuropean_football_2",
    "139": "SELECT L.name \nFROM League L \nJOIN Match M ON L.id = M.league_id \nWHERE M.season = '2009/2010' \nGROUP BY L.id \nHAVING AVG(M.home_team_goal) > AVG(M.away_team_goal);\t----- bird -----\teuropean_football_2",
    "140": "SELECT player_name \nFROM Player \nWHERE substr(birthday, 1, 7) = '1970-10';\t----- bird -----\teuropean_football_2",
    "141": "SELECT PA.overall_rating \nFROM Player AS P \nJOIN Player_Attributes AS PA ON P.player_fifa_api_id = PA.player_fifa_api_id \nWHERE P.player_name = 'Gabriel Tamas' AND strftime('%Y', PA.date) = '2011';\t----- bird -----\teuropean_football_2",
    "142": "SELECT AVG(M.home_team_goal) AS average_home_team_goal \nFROM Match M \nJOIN League L ON M.league_id = L.id \nWHERE L.name = 'Poland' AND M.season = '2010/2011';\t----- bird -----\teuropean_football_2",
    "143": "SELECT player_name, AVG(PA.finishing) AS average_finishing \nFROM Player AS P \nJOIN Player_Attributes AS PA ON P.player_fifa_api_id = PA.player_fifa_api_id \nWHERE P.height = (SELECT MAX(height) FROM Player) OR P.height = (SELECT MIN(height) FROM Player) \nGROUP BY P.player_fifa_api_id \nORDER BY average_finishing DESC \nLIMIT 1;\t----- bird -----\teuropean_football_2",
    "144": "SELECT CAST(SUM(PA.overall_rating) AS REAL) / COUNT(PA.id) \nFROM Player AS P \nJOIN Player_Attributes AS PA ON P.player_fifa_api_id = PA.player_fifa_api_id \nWHERE P.height > 170 AND strftime('%Y', PA.date) BETWEEN '2010' AND '2015';\t----- bird -----\teuropean_football_2",
    "145": "SELECT \n    (SUM(CASE WHEN P.player_name = 'Abdou Diallo' THEN PA.ball_control ELSE 0 END) * 1.0 / COUNT(CASE WHEN P.player_name = 'Abdou Diallo' THEN PA.id ELSE NULL END)) - \n    (SUM(CASE WHEN P.player_name = 'Aaron Appindangoye' THEN PA.ball_control ELSE 0 END) * 1.0 / COUNT(CASE WHEN P.player_name = 'Aaron Appindangoye' THEN PA.id ELSE NULL END)) AS difference_average_ball_control \nFROM Player AS P \nJOIN Player_Attributes AS PA ON P.player_api_id = PA.player_api_id;\t----- bird -----\teuropean_football_2",
    "146": "SELECT player_name FROM Player WHERE birthday = (SELECT MIN(birthday) FROM Player WHERE player_name IN ('Aaron Lennon', 'Abdelaziz Barrada')) LIMIT 1;\t----- bird -----\teuropean_football_2",
    "147": "SELECT player_name FROM Player WHERE height = (SELECT MAX(height) FROM Player);\t----- bird -----\teuropean_football_2",
    "148": "SELECT COUNT(*) \nFROM Player AS P \nJOIN Player_Attributes AS PA ON P.player_fifa_api_id = PA.player_fifa_api_id \nWHERE PA.preferred_foot = 'left' AND PA.attacking_work_rate = 'low';\t----- bird -----\teuropean_football_2",
    "149": "SELECT COUNT(DISTINCT P.player_fifa_api_id) \nFROM Player AS P \nJOIN Player_Attributes AS PA ON P.player_fifa_api_id = PA.player_fifa_api_id \nWHERE strftime('%Y', P.birthday) < '1986' AND PA.defensive_work_rate = 'high';\t----- bird -----\teuropean_football_2",
    "150": "SELECT P.player_name \nFROM Player AS P \nJOIN Player_Attributes AS PA ON P.player_api_id = PA.player_api_id \nWHERE PA.volleys > 70 AND PA.dribbling > 70;\t----- bird -----\teuropean_football_2",
    "151": "SELECT COUNT(*) \nFROM Match M \nJOIN League L ON M.league_id = L.id \nWHERE L.name = 'Belgium Jupiler League' AND SUBSTR(M.date, 1, 7) = '2009-04';\t----- bird -----\teuropean_football_2",
    "152": "SELECT L.name, COUNT(M.id) AS total_matches \nFROM Match M \nJOIN League L ON M.league_id = L.id \nWHERE M.season = '2008/2009' \nGROUP BY L.id \nORDER BY total_matches DESC \nLIMIT 1;\t----- bird -----\teuropean_football_2",
    "153": "SELECT (CAST((SELECT PA1.overall_rating FROM Player AS P1 INNER JOIN Player_Attributes AS PA1 ON P1.player_api_id = PA1.player_api_id WHERE P1.player_name = 'Ariel Borysiuk') - (SELECT PA2.overall_rating FROM Player AS P2 INNER JOIN Player_Attributes AS PA2 ON P2.player_api_id = PA2.player_api_id WHERE P2.player_name = 'Paulin Puel') AS FLOAT) / (SELECT PA2.overall_rating FROM Player AS P2 INNER JOIN Player_Attributes AS PA2 ON P2.player_api_id = PA2.player_api_id WHERE P2.player_name = 'Paulin Puel') * 100) AS percentage_difference;\t----- bird -----\teuropean_football_2",
    "154": "SELECT AVG(PA.overall_rating) \nFROM Player AS P \nJOIN Player_Attributes AS PA ON P.player_api_id = PA.player_api_id \nWHERE P.player_name = 'Pietro Marino';\t----- bird -----\teuropean_football_2",
    "155": "SELECT MAX(TA.chanceCreationPassing) AS max_chance_creation, TA.chanceCreationPassingClass \nFROM Team AS T \nJOIN Team_Attributes AS TA ON T.team_api_id = TA.team_api_id \nWHERE T.team_long_name = 'Ajax';\t----- bird -----\teuropean_football_2",
    "156": "SELECT P.player_name \nFROM Player AS P \nJOIN Player_Attributes AS PA ON P.player_api_id = PA.player_api_id \nWHERE PA.overall_rating = 77 AND PA.date LIKE '2016-06-23%' \nORDER BY P.birthday ASC \nLIMIT 1;\t----- bird -----\teuropean_football_2",
    "157": "SELECT PA.overall_rating \nFROM Player AS P \nJOIN Player_Attributes AS PA ON P.player_api_id = PA.player_api_id \nWHERE P.player_name = 'Aaron Mooy' AND PA.date LIKE '2016-02-04%';\t----- bird -----\teuropean_football_2",
    "158": "SELECT PA.attacking_work_rate \nFROM Player AS P \nJOIN Player_Attributes AS PA ON P.player_api_id = PA.player_api_id \nWHERE P.player_name = 'Francesco Migliore' AND PA.date LIKE '2015-05-01%';\t----- bird -----\teuropean_football_2",
    "159": "SELECT date \nFROM Player AS P \nJOIN Player_Attributes AS PA ON P.player_api_id = PA.player_api_id \nWHERE P.player_name = 'Kevin Constant' \n  AND PA.crossing = (SELECT MAX(crossing) FROM Player_Attributes WHERE player_api_id = P.player_api_id) \nORDER BY date \nLIMIT 1;\t----- bird -----\teuropean_football_2",
    "160": "SELECT TA.buildUpPlayPassingClass \nFROM Team AS T \nJOIN Team_Attributes AS TA ON T.team_fifa_api_id = TA.team_fifa_api_id \nWHERE T.team_long_name = 'FC Lorient' AND TA.date LIKE '2010-02-22%';\t----- bird -----\teuropean_football_2",
    "161": "SELECT TA.defenceAggressionClass \nFROM Team AS T \nJOIN Team_Attributes AS TA ON T.team_api_id = TA.team_api_id \nWHERE T.team_long_name = 'Hannover 96' AND TA.date LIKE '2015-09-10%';\t----- bird -----\teuropean_football_2",
    "162": "SELECT AVG(PA.overall_rating) \nFROM Player AS P \nJOIN Player_Attributes AS PA ON P.player_fifa_api_id = PA.player_fifa_api_id \nWHERE P.player_name = 'Marko Arnautovic' \n  AND SUBSTR(PA.date, 1, 10) BETWEEN '2007-02-22' AND '2016-04-21';\t----- bird -----\teuropean_football_2",
    "163": "SELECT (SUM(CASE WHEN P.player_name = 'Landon Donovan' THEN PA.overall_rating ELSE 0 END) * 1.0 - SUM(CASE WHEN P.player_name = 'Jordan Bowery' THEN PA.overall_rating ELSE 0 END)) * 100 / SUM(CASE WHEN P.player_name = 'Jordan Bowery' THEN PA.overall_rating ELSE 0 END) \nFROM Player AS P \nJOIN Player_Attributes AS PA ON P.player_fifa_api_id = PA.player_fifa_api_id \nWHERE PA.date = '2013-07-12';\t----- bird -----\teuropean_football_2",
    "164": "SELECT player_name FROM Player WHERE height = (SELECT MAX(height) FROM Player);\t----- bird -----\teuropean_football_2",
    "165": "SELECT P.player_name \nFROM Player AS P \nJOIN Player_Attributes AS PA ON P.player_fifa_api_id = PA.player_fifa_api_id \nWHERE PA.overall_rating = (SELECT MAX(overall_rating) FROM Player_Attributes);\t----- bird -----\teuropean_football_2",
    "166": "SELECT P.player_name \nFROM Player AS P \nJOIN Player_Attributes AS PA ON P.player_fifa_api_id = PA.player_fifa_api_id \nWHERE PA.attacking_work_rate = 'high';\t----- bird -----\teuropean_football_2",
    "167": "SELECT T.team_short_name \nFROM Team AS T \nJOIN Team_Attributes AS TA ON T.team_api_id = TA.team_api_id \nWHERE TA.chanceCreationPassingClass = 'Safe';\t----- bird -----\teuropean_football_2",
    "168": "SELECT COUNT(*) \nFROM Player \nWHERE player_name LIKE 'Aaron%' AND birthday > '1990-12-31';\t----- bird -----\teuropean_football_2",
    "169": "SELECT ABS(PA1.jumping - PA2.jumping) AS difference\nFROM Player AS P1\nJOIN Player_Attributes AS PA1 ON P1.player_api_id = PA1.player_api_id\nJOIN Player AS P2 ON P2.id = 23\nJOIN Player_Attributes AS PA2 ON P2.player_api_id = PA2.player_api_id\nWHERE P1.id = 6;\t----- bird -----\teuropean_football_2",
    "170": "SELECT P.player_fifa_api_id\nFROM Player AS P\nJOIN Player_Attributes AS PA ON P.player_fifa_api_id = PA.player_fifa_api_id\nWHERE PA.potential = (SELECT MIN(potential) FROM Player_Attributes) AND PA.preferred_foot = 'right'\nORDER BY P.player_fifa_api_id\nLIMIT 4;\t----- bird -----\teuropean_football_2",
    "171": "SELECT COUNT(*) \nFROM Player_Attributes \nWHERE crossing = (SELECT MAX(crossing) FROM Player_Attributes) \n  AND preferred_foot = 'left';\t----- bird -----\teuropean_football_2",
    "172": "SELECT M.home_team_goal, M.away_team_goal \nFROM Match M \nJOIN League L ON M.league_id = L.id \nWHERE M.date LIKE '2008-09-24%' AND L.name = 'Belgium Jupiler League';\t----- bird -----\teuropean_football_2",
    "173": "SELECT TA.buildUpPlaySpeedClass \nFROM Team AS T \nJOIN Team_Attributes AS TA ON T.team_api_id = TA.team_api_id \nWHERE T.team_long_name = 'KSV Cercle Brugge';\t----- bird -----\teuropean_football_2",
    "174": "SELECT PA.finishing, PA.curve \nFROM Player AS P \nJOIN Player_Attributes AS PA ON P.player_fifa_api_id = PA.player_fifa_api_id \nWHERE P.weight = (SELECT MAX(weight) FROM Player);\t----- bird -----\teuropean_football_2",
    "175": "SELECT L.name, COUNT(M.id) AS total_matches \nFROM Match M \nJOIN League L ON M.league_id = L.id \nWHERE M.season = '2015/2016' \nGROUP BY L.id \nORDER BY total_matches DESC \nLIMIT 4;\t----- bird -----\teuropean_football_2",
    "176": "SELECT T.team_long_name \nFROM Match M \nJOIN Team T ON M.away_team_api_id = T.team_api_id \nGROUP BY T.team_long_name \nORDER BY SUM(M.away_team_goal) DESC \nLIMIT 1;\t----- bird -----\teuropean_football_2",
    "177": "SELECT player_name FROM Player AS P JOIN Player_Attributes AS PA ON P.player_fifa_api_id = PA.player_fifa_api_id WHERE PA.overall_rating = (SELECT MAX(overall_rating) FROM Player_Attributes);\t----- bird -----\teuropean_football_2",
    "178": "SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM Player WHERE height < 180)) AS percentage\nFROM Player AS P\nJOIN Player_Attributes AS PA ON P.player_fifa_api_id = PA.player_fifa_api_id\nWHERE P.height < 180 AND PA.overall_rating > 70;\t----- bird -----\teuropean_football_2",
    "179": "SELECT D.driverRef \nFROM qualifying AS Q \nJOIN drivers AS D ON Q.driverId = D.driverId \nWHERE Q.raceId = 20 AND Q.q1 IS NOT NULL \nORDER BY Q.q1 DESC \nLIMIT 5;\t----- bird -----\tformula_1",
    "180": "SELECT d.surname \nFROM qualifying q \nJOIN drivers d ON q.driverId = d.driverId \nWHERE q.raceId = 19 \nORDER BY q.q2 ASC \nLIMIT 1;\t----- bird -----\tformula_1",
    "181": "SELECT R.name \nFROM races R \nJOIN circuits C ON R.circuitId = C.circuitId \nWHERE C.country = 'Germany';\t----- bird -----\tformula_1",
    "182": "SELECT C.lat, C.lng \nFROM circuits C \nJOIN races R ON C.circuitId = R.circuitId \nWHERE R.name = 'Australian Grand Prix';\t----- bird -----\tformula_1",
    "183": "SELECT C.lat, C.lng \nFROM races AS R \nJOIN circuits AS C ON R.circuitId = C.circuitId \nWHERE R.name = 'Abu Dhabi Grand Prix';\t----- bird -----\tformula_1",
    "184": "SELECT Q1 \nFROM qualifying AS Q \nJOIN drivers AS D ON Q.driverId = D.driverId \nWHERE Q.raceId = 354 AND D.forename = 'Bruno' AND D.surname = 'Senna';\t----- bird -----\tformula_1",
    "185": "SELECT driverId FROM qualifying WHERE raceId = 903 AND q3 LIKE '0:01:54%';\t----- bird -----\tformula_1",
    "186": "SELECT COUNT(DISTINCT driverId) \nFROM results \nWHERE raceId = (SELECT raceId FROM races WHERE name = 'Bahrain Grand Prix' AND year = 2007) \n  AND time IS NULL;\t----- bird -----\tformula_1",
    "187": "SELECT D.driverId, D.forename, D.surname, D.dob \nFROM drivers AS D \nJOIN results AS R ON D.driverId = R.driverId \nWHERE R.raceId = 592 AND R.time IS NOT NULL \nORDER BY D.dob ASC \nLIMIT 1;\t----- bird -----\tformula_1",
    "188": "SELECT D.url \nFROM lapTimes AS LT \nJOIN drivers AS D ON D.driverId = LT.driverId \nWHERE LT.raceId = 161 AND LT.time LIKE '1:27%';\t----- bird -----\tformula_1",
    "189": "SELECT C.lat, C.lng \nFROM races AS R \nJOIN circuits AS C ON R.circuitId = C.circuitId \nWHERE R.name = 'Malaysian Grand Prix';\t----- bird -----\tformula_1",
    "190": "SELECT C.url \nFROM constructorResults AS CR \nJOIN constructors AS C ON CR.constructorId = C.constructorId \nWHERE CR.raceId = 9 AND CR.points = (SELECT MAX(points) FROM constructorResults WHERE raceId = 9);\t----- bird -----\tformula_1",
    "191": "SELECT D.code \nFROM qualifying AS Q \nJOIN drivers AS D ON D.driverId = Q.driverId \nWHERE Q.raceId = 45 AND Q.q3 LIKE '1:33%'\t----- bird -----\tformula_1",
    "192": "SELECT S.url \nFROM seasons AS S \nJOIN races AS R ON S.year = R.year \nWHERE R.raceId = 901;\t----- bird -----\tformula_1",
    "193": "SELECT D.forename, D.surname FROM drivers AS D INNER JOIN results AS R ON D.driverId = R.driverId WHERE R.raceId = 872 AND R.time IS NOT NULL AND D.dob IS NOT NULL ORDER BY D.dob DESC LIMIT 1;\t----- bird -----\tformula_1",
    "194": "SELECT D.nationality \nFROM results AS R \nINNER JOIN drivers AS D ON R.driverId = D.driverId \nWHERE R.fastestLapSpeed = (SELECT MAX(fastestLapSpeed) FROM results);\t----- bird -----\tformula_1",
    "195": "SELECT (R1.fastestLapSpeed - R2.fastestLapSpeed) * 100.0 / R2.fastestLapSpeed AS percent_faster \nFROM results AS R1 \nJOIN drivers AS D ON R1.driverId = D.driverId \nJOIN results AS R2 ON R2.raceId = 854 AND R1.driverId = R2.driverId \nWHERE D.forename = 'Paul' AND D.surname = 'di Resta' AND R1.raceId = 853;\t----- bird -----\tformula_1",
    "196": "SELECT (COUNT(CASE WHEN R.time IS NOT NULL THEN R.driverId END) * 100.0 / COUNT(R.driverId)) AS completion_rate \nFROM results AS R \nJOIN races AS RA ON R.raceId = RA.raceId \nWHERE RA.date = '1983-07-16';\t----- bird -----\tformula_1",
    "197": "SELECT name \nFROM races \nWHERE year = (SELECT MIN(year) FROM races) \n  AND strftime('%m', date) = (SELECT strftime('%m', MIN(date)) FROM races WHERE year = (SELECT MIN(year) FROM races));\t----- bird -----\tformula_1",
    "198": "SELECT D.forename, D.surname, MAX(R.points) AS max_points \nFROM drivers AS D \nJOIN driverStandings AS R ON D.driverId = R.driverId \nGROUP BY D.driverId \nORDER BY max_points DESC \nLIMIT 1;\t----- bird -----\tformula_1",
    "199": "SELECT D.forename, D.surname, R.name \nFROM lapTimes AS LT \nJOIN drivers AS D ON D.driverId = LT.driverId \nJOIN races AS R ON R.raceId = LT.raceId \nWHERE LT.milliseconds = (SELECT MIN(milliseconds) FROM lapTimes);\t----- bird -----\tformula_1",
    "200": "SELECT AVG(LT.milliseconds) \nFROM lapTimes AS LT \nJOIN drivers AS D ON D.driverId = LT.driverId \nJOIN races AS R ON R.raceId = LT.raceId \nWHERE D.forename = 'Lewis' AND D.surname = 'Hamilton' AND R.name = 'Malaysian Grand Prix';\t----- bird -----\tformula_1",
    "201": "SELECT COUNT(CASE WHEN R.position > 1 THEN 1 END) * 100.0 / COUNT(R.raceId) AS percentage_not_first\nFROM results AS R \nJOIN drivers AS D ON R.driverId = D.driverId \nWHERE D.surname = 'Hamilton' AND R.raceId IN (SELECT raceId FROM races WHERE year >= 2010);\t----- bird -----\tformula_1",
    "202": "SELECT D.forename, D.surname, D.nationality, MAX(C.points) \nFROM drivers AS D \nJOIN driverStandings AS DS ON D.driverId = DS.driverId \nJOIN (SELECT driverId, COUNT(wins) AS wins FROM driverStandings GROUP BY driverId ORDER BY wins DESC LIMIT 1) AS W ON W.driverId = DS.driverId \nJOIN (SELECT driverId, MAX(points) AS points FROM driverStandings GROUP BY driverId) AS C ON C.driverId = DS.driverId \nGROUP BY D.driverId;\t----- bird -----\tformula_1",
    "203": "SELECT forename, surname, DATE('now', 'localtime') - dob AS age \nFROM drivers \nWHERE nationality = 'Japanese' AND dob IS NOT NULL \nORDER BY dob DESC \nLIMIT 1;\t----- bird -----\tformula_1",
    "204": "SELECT R.name, C.name AS circuit_name, C.location \nFROM races AS R \nJOIN circuits AS C ON R.circuitId = C.circuitId \nWHERE strftime('%m', R.date) = '09' AND strftime('%Y', R.date) = '2005';\t----- bird -----\tformula_1",
    "205": "SELECT R.* \nFROM results AS R \nJOIN drivers AS D ON D.driverId = R.driverId \nWHERE D.forename = 'Alex' AND D.surname = 'Yoong' AND R.position < 20;\t----- bird -----\tformula_1",
    "206": "SELECT R.name, R.year \nFROM lapTimes AS LT \nJOIN drivers AS D ON D.driverId = LT.driverId \nJOIN races AS R ON R.raceId = LT.raceId \nWHERE D.forename = 'Michael' AND D.surname = 'Schumacher' \nORDER BY LT.milliseconds ASC \nLIMIT 1;\t----- bird -----\tformula_1",
    "207": "SELECT R.year, R.raceId, DR.points\nFROM results AS DR\nJOIN races AS R ON DR.raceId = R.raceId\nJOIN drivers AS D ON DR.driverId = D.driverId\nWHERE D.forename = 'Lewis' AND D.surname = 'Hamilton'\nORDER BY R.year ASC\nLIMIT 1;\t----- bird -----\tformula_1",
    "208": "SELECT CAST(COUNT(CASE WHEN C.country = 'Germany' THEN 1 END) AS REAL) * 100 / COUNT(R.raceId) AS percentage_germany \nFROM races AS R \nJOIN circuits AS C ON R.circuitId = C.circuitId \nWHERE R.name = 'European Grand Prix';\t----- bird -----\tformula_1",
    "209": "SELECT lat, lng FROM circuits WHERE name = 'Silverstone Circuit';\t----- bird -----\tformula_1",
    "210": "SELECT circuitRef FROM circuits WHERE name = 'Marina Bay Street Circuit';\t----- bird -----\tformula_1",
    "211": "SELECT nationality FROM drivers WHERE dob IS NOT NULL ORDER BY dob ASC LIMIT 1;\t----- bird -----\tformula_1",
    "212": "SELECT D.driverRef \nFROM results AS R \nJOIN races AS RA ON R.raceId = RA.raceId \nJOIN drivers AS D ON R.driverId = D.driverId \nWHERE RA.year = 2007 AND RA.name = 'Canadian Grand Prix' AND R.positionOrder = 1;\t----- bird -----\tformula_1",
    "213": "SELECT R.raceId, R.name FROM races AS R \nJOIN results AS R2 ON R2.raceId = R.raceId \nJOIN drivers AS D ON D.driverId = R2.driverId \nWHERE D.forename = 'Lewis' AND D.surname = 'Hamilton' \nORDER BY R2.rank ASC \nLIMIT 1;\t----- bird -----\tformula_1",
    "214": "SELECT MAX(R.fastestLapSpeed) \nFROM results AS R \nJOIN races AS RA ON R.raceId = RA.raceId \nWHERE RA.name = 'Spanish Grand Prix' AND RA.year = 2009;\t----- bird -----\tformula_1",
    "215": "SELECT R.positionOrder \nFROM results AS R \nJOIN races AS RA ON R.raceId = RA.raceId \nJOIN drivers AS D ON R.driverId = D.driverId \nWHERE D.forename = 'Lewis' AND D.surname = 'Hamilton' AND RA.name = 'Chinese Grand Prix' AND RA.year = 2008;\t----- bird -----\tformula_1",
    "216": "SELECT R.time \nFROM results AS R \nJOIN races AS RA ON R.raceId = RA.raceId \nWHERE RA.year = 2008 AND RA.name = 'Chinese Grand Prix' AND R.positionOrder = 2;\t----- bird -----\tformula_1",
    "217": "SELECT COUNT(DISTINCT D.driverId) \nFROM drivers AS D \nJOIN results AS R ON D.driverId = R.driverId \nJOIN races AS RA ON R.raceId = RA.raceId \nWHERE R.time IS NOT NULL AND RA.name = 'Chinese Grand Prix' AND RA.year = 2008;\t----- bird -----\tformula_1",
    "218": "SELECT ((R1.time - R2.time) * 100.0 / R2.time) AS percent_faster\nFROM results AS R1\nJOIN results AS R2 ON R1.raceId = R2.raceId\nJOIN races AS RA ON R1.raceId = RA.raceId\nWHERE RA.year = 2008 AND RA.name = 'Australian Grand Prix' AND R1.position = 1 AND R2.position = (SELECT MAX(position) FROM results WHERE raceId = RA.raceId);\t----- bird -----\tformula_1",
    "219": "SELECT COUNT(*) \nFROM circuits \nWHERE country = 'Australia' AND location = 'Adelaide';\t----- bird -----\tformula_1",
    "220": "SELECT MAX(CR.points) \nFROM constructorResults AS CR \nJOIN constructors AS C ON CR.constructorId = C.constructorId \nWHERE C.nationality = 'British';\t----- bird -----\tformula_1",
    "221": "SELECT C.name \nFROM constructors AS C \nJOIN constructorResults AS CR ON C.constructorId = CR.constructorId \nWHERE CR.raceId = 291 AND CR.points = 0;\t----- bird -----\tformula_1",
    "222": "SELECT COUNT(DISTINCT C.constructorId) \nFROM constructors AS C \nJOIN constructorStandings AS CS ON C.constructorId = CS.constructorId \nWHERE C.nationality = 'Japanese' AND CS.points = 0 \nGROUP BY C.constructorId \nHAVING COUNT(CS.raceId) = 2;\t----- bird -----\tformula_1",
    "223": "SELECT \n    (COUNT(DISTINCT R.driverId) * 100.0 / (SELECT COUNT(DISTINCT R2.driverId) \n    FROM results R2 \n    JOIN races RA ON R2.raceId = RA.raceId \n    JOIN drivers D ON R2.driverId = D.driverId \n    WHERE D.nationality = 'Japanese' AND RA.year BETWEEN 2007 AND 2009)) AS completion_percentage\nFROM results R \nJOIN races RA ON R.raceId = RA.raceId \nJOIN drivers D ON R.driverId = D.driverId \nWHERE D.nationality = 'Japanese' AND R.time IS NOT NULL AND RA.year BETWEEN 2007 AND 2009;\t----- bird -----\tformula_1",
    "224": "SELECT RA.year, AVG((CAST(SUBSTR(R.time, 1, 2) AS INTEGER) * 3600) + (CAST(SUBSTR(R.time, 4, 2) AS INTEGER) * 60) + CAST(SUBSTR(R.time, 7, 2) AS INTEGER)) AS average_time_seconds\nFROM results AS R\nJOIN races AS RA ON R.raceId = RA.raceId\nWHERE RA.year < 1975 AND R.position = 1 AND R.time IS NOT NULL\nGROUP BY RA.year;\t----- bird -----\tformula_1",
    "225": "SELECT fastestLap FROM results R JOIN races RA ON R.raceId = RA.raceId WHERE RA.year = 2009 AND R.position = 1;\t----- bird -----\tformula_1",
    "226": "SELECT AVG(R.fastestLapSpeed) \nFROM results AS R \nJOIN races AS RA ON R.raceId = RA.raceId \nWHERE RA.year = 2009 AND RA.name = 'Spanish Grand Prix';\t----- bird -----\tformula_1",
    "227": "SELECT CAST(COUNT(DISTINCT D.driverId) AS REAL) * 100 / COUNT(DISTINCT D2.driverId) AS percentage\nFROM drivers D\nJOIN results R ON D.driverId = R.driverId\nJOIN races RA ON R.raceId = RA.raceId\nJOIN drivers D2 ON R.driverId = D2.driverId\nWHERE D.dob < '1985-01-01' AND R.laps > 50 AND RA.year BETWEEN 2000 AND 2005;\t----- bird -----\tformula_1",
    "228": "SELECT COUNT(DISTINCT D.driverId) \nFROM drivers D \nJOIN lapTimes LT ON D.driverId = LT.driverId \nWHERE D.nationality = 'French' AND LT.milliseconds < 120000;\t----- bird -----\tformula_1",
    "229": "SELECT driverRef FROM drivers WHERE nationality = 'American';\t----- bird -----\tformula_1",
    "230": "SELECT code, COUNT(CASE WHEN nationality = 'Dutch' THEN 1 END) AS netherlandic_count \nFROM drivers \nORDER BY dob DESC \nLIMIT 3;\t----- bird -----\tformula_1",
    "231": "SELECT driverRef FROM drivers WHERE dob IS NOT NULL AND nationality = 'German' ORDER BY dob ASC LIMIT 1;\t----- bird -----\tformula_1",
    "232": "SELECT D.driverId, D.driverRef \nFROM drivers AS D \nJOIN results AS R ON D.driverId = R.driverId \nWHERE strftime('%Y', D.dob) = '1971' AND R.fastestLapTime IS NOT NULL;\t----- bird -----\tformula_1",
    "233": "SELECT COUNT(*) \nFROM results AS R \nWHERE R.statusId = 2 AND R.time IS NOT NULL AND R.raceId > 50 AND R.raceId < 100;\t----- bird -----\tformula_1",
    "234": "SELECT C.name, C.location, C.lat, C.lng, COUNT(R.raceId) AS times_held \nFROM circuits AS C \nJOIN races AS R ON C.circuitId = R.circuitId \nWHERE C.country = 'Austria' \nGROUP BY C.circuitId, C.name, C.location, C.lat, C.lng;\t----- bird -----\tformula_1",
    "235": "SELECT MIN(R.date) AS race_date, R.year, D.forename || ' ' || D.surname AS driver_name, R.time \nFROM drivers AS D \nJOIN qualifying AS Q ON D.driverId = Q.driverId \nJOIN races AS R ON Q.raceId = R.raceId \nWHERE D.dob IS NOT NULL \nGROUP BY D.driverId \nORDER BY D.dob DESC \nLIMIT 1;\t----- bird -----\tformula_1",
    "236": "SELECT D.forename || ' ' || D.surname AS full_name, AVG(P.duration) AS avg_duration \nFROM drivers AS D \nJOIN pitStops AS P ON D.driverId = P.driverId \nWHERE D.nationality = 'German' AND strftime('%Y', D.dob) BETWEEN '1980' AND '1985' \nGROUP BY D.driverId \nORDER BY avg_duration ASC \nLIMIT 3;\t----- bird -----\tformula_1",
    "237": "SELECT D.forename, D.surname, R.time \nFROM results AS R \nJOIN races AS RA ON R.raceId = RA.raceId \nJOIN drivers AS D ON R.driverId = D.driverId \nWHERE RA.year = 2008 AND RA.name = 'Canadian Grand Prix' AND R.positionOrder = 1;\t----- bird -----\tformula_1",
    "238": "SELECT C.constructorRef, C.url \nFROM results AS R \nJOIN races AS RA ON R.raceId = RA.raceId \nJOIN constructors AS C ON R.constructorId = C.constructorId \nWHERE RA.year = 2009 AND RA.name = 'Singapore Grand Prix' AND R.time = (SELECT MAX(time) FROM results WHERE raceId = R.raceId);\t----- bird -----\tformula_1",
    "239": "SELECT SP.power_name \nFROM superhero AS S \nJOIN hero_power AS HP ON S.id = HP.hero_id \nJOIN superpower AS SP ON HP.power_id = SP.id \nWHERE S.superhero_name = '3-D Man';\t----- bird -----\tsuperhero",
    "240": "SELECT SUM(CR.points) AS totalPoints, C.name, C.nationality \nFROM constructorResults AS CR \nJOIN races AS R ON CR.raceId = R.raceId \nJOIN constructors AS C ON CR.constructorId = C.constructorId \nWHERE R.name = 'Monaco Grand Prix' AND R.year BETWEEN 1980 AND 2010 \nGROUP BY CR.constructorId \nORDER BY totalPoints DESC \nLIMIT 1;\t----- bird -----\tformula_1",
    "241": "SELECT D.forename, D.surname \nFROM qualifying AS Q \nJOIN races AS R ON Q.raceId = R.raceId \nJOIN drivers AS D ON Q.driverId = D.driverId \nWHERE R.year = 2008 AND R.circuitId = (SELECT circuitId FROM circuits WHERE name = 'Marina Bay Street Circuit') \nAND Q.position = 1 \nAND Q.q3 = (SELECT MIN(q3) FROM qualifying WHERE raceId = R.raceId);\t----- bird -----\tformula_1",
    "242": "SELECT D.forename || ' ' || D.surname AS full_name, D.nationality, R.name AS race_name \nFROM drivers AS D \nJOIN qualifying AS Q ON D.driverId = Q.driverId \nJOIN races AS R ON Q.raceId = R.raceId \nWHERE D.dob = (SELECT MAX(dob) FROM drivers) \nLIMIT 1;\t----- bird -----\tformula_1",
    "243": "SELECT D.driverId, COUNT(R.statusId) AS accidents\nFROM results AS R \nJOIN races AS RA ON R.raceId = RA.raceId \nJOIN drivers AS D ON R.driverId = D.driverId \nWHERE RA.name = 'Canadian Grand Prix' AND R.statusId = 3\nGROUP BY D.driverId\nORDER BY accidents DESC\nLIMIT 1;\t----- bird -----\tformula_1",
    "244": "SELECT D.forename, D.surname \nFROM drivers AS D \nJOIN lapTimes AS LT ON D.driverId = LT.driverId \nORDER BY LT.time ASC \nLIMIT 20;\t----- bird -----\tformula_1",
    "245": "SELECT C.name AS circuit_name, MIN(LT.time) AS fastest_lap_time \nFROM circuits AS C \nJOIN races AS R ON C.circuitId = R.circuitId \nJOIN lapTimes AS LT ON R.raceId = LT.raceId \nWHERE C.country = 'Italy' \nGROUP BY C.circuitId;\t----- bird -----\tformula_1",
    "246": "SELECT COUNT(DISTINCT S.id) \nFROM superhero AS S \nJOIN hero_power AS HP ON S.id = HP.hero_id \nJOIN superpower AS SP ON HP.power_id = SP.id \nWHERE SP.power_name = 'Super Strength' AND S.height_cm > 200;\t----- bird -----\tsuperhero",
    "247": "SELECT COUNT(DISTINCT H.id) \nFROM superhero AS H \nJOIN colour AS C ON H.eye_colour_id = C.id \nJOIN hero_power AS HP ON H.id = HP.hero_id \nJOIN superpower AS P ON HP.power_id = P.id \nWHERE C.colour = 'Blue' AND P.power_name = 'Agility';\t----- bird -----\tsuperhero",
    "248": "SELECT S.superhero_name \nFROM superhero AS S \nJOIN colour AS E ON S.eye_colour_id = E.id \nJOIN colour AS H ON S.hair_colour_id = H.id \nWHERE E.colour = 'Blue' AND H.colour = 'Blond';\t----- bird -----\tsuperhero",
    "249": "SELECT S.superhero_name \nFROM superhero AS S \nJOIN publisher AS P ON S.publisher_id = P.id \nWHERE P.publisher_name = 'Marvel Comics' \nORDER BY S.height_cm DESC;\t----- bird -----\tsuperhero",
    "250": "SELECT C.colour, COUNT(S.id) AS color_popularity \nFROM superhero AS S \nJOIN publisher AS P ON S.publisher_id = P.id \nJOIN colour AS C ON S.eye_colour_id = C.id \nWHERE P.publisher_name = 'Marvel Comics' \nGROUP BY C.colour \nORDER BY color_popularity DESC;\t----- bird -----\tsuperhero",
    "251": "SELECT S.superhero_name \nFROM superhero AS S \nJOIN publisher AS P ON S.publisher_id = P.id \nJOIN hero_power AS HP ON S.id = HP.hero_id \nJOIN superpower AS SP ON HP.power_id = SP.id \nWHERE P.publisher_name = 'Marvel Comics' AND SP.power_name = 'Super Strength';\t----- bird -----\tsuperhero",
    "252": "SELECT P.publisher_name \nFROM superhero AS S \nJOIN hero_attribute AS HA ON S.id = HA.hero_id \nJOIN attribute AS A ON HA.attribute_id = A.id \nJOIN publisher AS P ON S.publisher_id = P.id \nWHERE A.attribute_name = 'Speed' \nORDER BY HA.attribute_value ASC \nLIMIT 1;\t----- bird -----\tsuperhero",
    "253": "SELECT COUNT(S.id) \nFROM superhero AS S \nJOIN publisher AS P ON S.publisher_id = P.id \nJOIN colour AS C ON S.eye_colour_id = C.id \nWHERE P.publisher_name = 'Marvel Comics' AND C.colour = 'Gold';\t----- bird -----\tsuperhero",
    "254": "SELECT S.superhero_name, MIN(HA.attribute_value) AS Intelligence \nFROM superhero AS S \nJOIN hero_attribute AS HA ON S.id = HA.hero_id \nJOIN attribute AS A ON HA.attribute_id = A.id \nWHERE A.attribute_name = 'Intelligence' \nGROUP BY S.superhero_name \nORDER BY Intelligence \nLIMIT 1;\t----- bird -----\tsuperhero",
    "255": "SELECT R.race \nFROM superhero AS S \nJOIN race AS R ON S.race_id = R.id \nWHERE S.superhero_name = 'Copycat';\t----- bird -----\tsuperhero",
    "256": "SELECT S.superhero_name \nFROM superhero AS S \nJOIN hero_attribute AS HA ON S.id = HA.hero_id \nJOIN attribute AS A ON HA.attribute_id = A.id \nWHERE A.attribute_name = 'Durability' AND HA.attribute_value < 50;\t----- bird -----\tsuperhero",
    "257": "SELECT S.superhero_name \nFROM superhero AS S \nJOIN hero_power AS HP ON S.id = HP.hero_id \nJOIN superpower AS SP ON HP.power_id = SP.id \nWHERE SP.power_name = 'Death Touch';\t----- bird -----\tsuperhero",
    "258": "SELECT COUNT(*) \nFROM superhero AS S \nJOIN gender AS G ON S.gender_id = G.id \nJOIN hero_attribute AS HA ON S.id = HA.hero_id \nJOIN attribute AS A ON HA.attribute_id = A.id \nWHERE G.gender = 'Female' AND A.attribute_name = 'Strength' AND HA.attribute_value = 100;\t----- bird -----\tsuperhero",
    "259": "SELECT \n    (SUM(CASE WHEN A.alignment = 'Bad' THEN 1 ELSE 0 END) * 100.0) / COUNT(S.id) AS percentage,\n    SUM(CASE WHEN A.alignment = 'Bad' AND P.publisher_name = 'Marvel Comics' THEN 1 ELSE 0 END) AS marvel_count\nFROM \n    superhero AS S \nINNER JOIN \n    alignment AS A ON S.alignment_id = A.id \nINNER JOIN \n    publisher AS P ON S.publisher_id = P.id;\t----- bird -----\tsuperhero",
    "260": "SELECT \n    (SELECT COUNT(*) FROM superhero AS S INNER JOIN publisher AS P ON S.publisher_id = P.id WHERE P.publisher_name = 'Marvel Comics') -\n    (SELECT COUNT(*) FROM superhero AS S INNER JOIN publisher AS P ON S.publisher_id = P.id WHERE P.publisher_name = 'DC Comics') AS Difference;\t----- bird -----\tsuperhero",
    "261": "SELECT id FROM publisher WHERE publisher_name = 'Star Trek';\t----- bird -----\tsuperhero",
    "262": "SELECT COUNT(*) AS total_without_full_name FROM superhero WHERE full_name IS NULL;\t----- bird -----\tsuperhero",
    "263": "SELECT AVG(S.weight_kg) AS average_weight \nFROM superhero AS S \nJOIN gender AS G ON S.gender_id = G.id \nWHERE G.gender = 'Female';\t----- bird -----\tsuperhero",
    "264": "SELECT SP.power_name \nFROM superhero AS S \nJOIN gender AS G ON S.gender_id = G.id \nJOIN hero_power AS HP ON S.id = HP.hero_id \nJOIN superpower AS SP ON HP.power_id = SP.id \nWHERE G.gender = 'Male' \nLIMIT 5;\t----- bird -----\tsuperhero",
    "265": "SELECT superhero_name \nFROM superhero \nWHERE height_cm BETWEEN 170 AND 190 AND eye_colour_id IS NULL;\t----- bird -----\tsuperhero",
    "266": "SELECT C.colour \nFROM superhero AS S \nINNER JOIN colour AS C ON S.hair_colour_id = C.id \nINNER JOIN race AS R ON S.race_id = R.id \nWHERE S.height_cm = 185 AND R.race = 'human';\t----- bird -----\tsuperhero",
    "267": "SELECT (CAST(SUM(CASE WHEN P.publisher_name = 'Marvel Comics' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*)) AS percentage\nFROM superhero AS S\nINNER JOIN publisher AS P ON S.publisher_id = P.id\nWHERE S.height_cm BETWEEN 150 AND 180;\t----- bird -----\tsuperhero",
    "268": "SELECT superhero_name \nFROM superhero AS S \nWHERE S.gender_id = (SELECT id FROM gender WHERE gender = 'Male') \nAND S.weight_kg > (SELECT AVG(weight_kg) * 0.79 FROM superhero);\t----- bird -----\tsuperhero",
    "269": "SELECT SP.power_name \nFROM superpower AS SP \nJOIN hero_power AS HP ON SP.id = HP.power_id \nWHERE HP.hero_id = 1;\t----- bird -----\tsuperhero",
    "270": "SELECT COUNT(H.hero_id) \nFROM hero_power AS H \nJOIN superpower AS P ON H.power_id = P.id \nWHERE P.power_name = 'Stealth';\t----- bird -----\tsuperhero",
    "271": "SELECT S.full_name \nFROM superhero AS S \nJOIN hero_attribute AS HA ON S.id = HA.hero_id \nJOIN attribute AS A ON HA.attribute_id = A.id \nWHERE A.attribute_name = 'strength' AND HA.attribute_value = (SELECT MAX(attribute_value) FROM hero_attribute AS HA2 INNER JOIN attribute AS A2 ON HA2.attribute_id = A2.id WHERE A2.attribute_name = 'strength');\t----- bird -----\tsuperhero",
    "272": "SELECT S.superhero_name \nFROM superhero AS S \nJOIN hero_attribute AS HA ON S.id = HA.hero_id \nJOIN attribute AS A ON HA.attribute_id = A.id \nJOIN publisher AS P ON S.publisher_id = P.id \nWHERE A.attribute_name = 'durability' AND P.publisher_name = 'Dark Horse Comics' \nORDER BY HA.attribute_value DESC \nLIMIT 1;\t----- bird -----\tsuperhero",
    "273": "SELECT S.eye_colour_id, S.hair_colour_id, S.skin_colour_id \nFROM superhero AS S \nJOIN gender AS G ON S.gender_id = G.id \nJOIN publisher AS P ON S.publisher_id = P.id \nWHERE G.gender = 'Female' AND P.publisher_name = 'Dark Horse Comics';\t----- bird -----\tsuperhero",
    "274": "SELECT S.superhero_name, P.publisher_name \nFROM superhero AS S \nINNER JOIN publisher AS P ON S.publisher_id = P.id \nWHERE S.hair_colour_id = S.skin_colour_id AND S.hair_colour_id = S.eye_colour_id;\t----- bird -----\tsuperhero",
    "275": "SELECT \n    (SUM(CASE WHEN C.colour = 'Blue' THEN 1 ELSE 0 END) * 100.0) / COUNT(CASE WHEN G.gender = 'Female' THEN 1 END) AS percentage\nFROM \n    superhero AS S \nINNER JOIN \n    colour AS C ON S.skin_colour_id = C.id \nINNER JOIN \n    gender AS G ON S.gender_id = G.id \nWHERE \n    G.gender = 'Female';\t----- bird -----\tsuperhero",
    "276": "SELECT COUNT(*) \nFROM hero_power AS HP \nJOIN superhero AS S ON HP.hero_id = S.id \nWHERE S.superhero_name = 'Amazo';\t----- bird -----\tsuperhero",
    "277": "SELECT S.height_cm \nFROM superhero AS S \nINNER JOIN colour AS C ON S.eye_colour_id = C.id \nWHERE C.colour = 'Amber';\t----- bird -----\tsuperhero",
    "278": "SELECT S.superhero_name \nFROM superhero AS S \nINNER JOIN colour AS C1 ON S.eye_colour_id = C1.id \nINNER JOIN colour AS C2 ON S.hair_colour_id = C2.id \nWHERE C1.colour = 'Black' AND C2.colour = 'Black';\t----- bird -----\tsuperhero",
    "279": "SELECT S.superhero_name \nFROM superhero AS S \nINNER JOIN alignment AS A ON S.alignment_id = A.id \nWHERE A.alignment = 'Neutral';\t----- bird -----\tsuperhero",
    "280": "SELECT COUNT(*) \nFROM superhero AS S \nJOIN hero_attribute AS HA ON S.id = HA.hero_id \nJOIN attribute AS A ON HA.attribute_id = A.id \nWHERE A.attribute_name = 'Strength' AND HA.attribute_value = (SELECT MAX(attribute_value) FROM hero_attribute AS HA2 JOIN attribute AS A2 ON HA2.attribute_id = A2.id WHERE A2.attribute_name = 'Strength');\t----- bird -----\tsuperhero",
    "281": "SELECT (CAST(SUM(CASE WHEN G.gender = 'Female' THEN 1 ELSE 0 END) AS REAL) * 100 / (SELECT COUNT(*) FROM publisher AS P JOIN superhero AS S ON P.id = S.publisher_id WHERE P.publisher_name = 'Marvel Comics')) AS percent_female \nFROM superhero AS S \nJOIN publisher AS P ON S.publisher_id = P.id \nJOIN gender AS G ON S.gender_id = G.id \nWHERE P.publisher_name = 'Marvel Comics';\t----- bird -----\tsuperhero",
    "282": "SELECT \n    (SUM(CASE WHEN full_name = 'Emil Blonsky' THEN weight_kg ELSE 0 END) - \n    SUM(CASE WHEN full_name = 'Charles Chandler' THEN weight_kg ELSE 0 END)) AS weight_difference \nFROM \n    superhero;\t----- bird -----\tsuperhero",
    "283": "SELECT AVG(height_cm) AS average_height FROM superhero;\t----- bird -----\tsuperhero",
    "284": "SELECT SP.power_name \nFROM superhero AS S \nINNER JOIN hero_power AS HP ON S.id = HP.hero_id \nINNER JOIN superpower AS SP ON HP.power_id = SP.id \nWHERE S.superhero_name = 'Abomination';\t----- bird -----\tsuperhero",
    "285": "SELECT S.superhero_name \nFROM superhero AS S \nJOIN hero_attribute AS HA ON S.id = HA.hero_id \nJOIN attribute AS A ON HA.attribute_id = A.id \nWHERE A.attribute_name = 'Speed' \nORDER BY HA.attribute_value DESC \nLIMIT 1;\t----- bird -----\tsuperhero",
    "286": "SELECT A.attribute_name, HA.attribute_value \nFROM superhero AS S \nINNER JOIN hero_attribute AS HA ON S.id = HA.hero_id \nINNER JOIN attribute AS A ON HA.attribute_id = A.id \nWHERE S.superhero_name = '3-D Man';\t----- bird -----\tsuperhero",
    "287": "SELECT S.superhero_name \nFROM superhero AS S \nINNER JOIN colour AS C1 ON S.eye_colour_id = C1.id \nINNER JOIN colour AS C2 ON S.hair_colour_id = C2.id \nWHERE C1.colour = 'Blue' AND C2.colour = 'Brown'\t----- bird -----\tsuperhero",
    "288": "SELECT P.publisher_name \nFROM superhero AS S \nJOIN publisher AS P ON S.publisher_id = P.id \nWHERE S.superhero_name IN ('Hawkman', 'Karate Kid', 'Speedy');\t----- bird -----\tsuperhero",
    "289": "SELECT (SUM(CASE WHEN C.colour = 'Blue' THEN 1 ELSE 0 END) * 100.0) / COUNT(S.superhero_name) AS percentage\nFROM superhero AS S \nINNER JOIN colour AS C ON S.eye_colour_id = C.id;\t----- bird -----\tsuperhero",
    "290": "SELECT \n    (CAST(SUM(CASE WHEN G.gender = 'Male' THEN 1 ELSE 0 END) AS REAL) / \n     NULLIF(SUM(CASE WHEN G.gender = 'Female' THEN 1 ELSE 0 END), 0)) AS ratio\nFROM \n    superhero AS S \nINNER JOIN \n    gender AS G ON S.gender_id = G.id;\t----- bird -----\tsuperhero",
    "291": "SELECT C.colour \nFROM superhero AS S \nINNER JOIN colour AS C ON S.eye_colour_id = C.id \nWHERE S.full_name = 'Karen Beecher-Duncan';\t----- bird -----\tsuperhero",
    "292": "SELECT \n    SUM(CASE WHEN S.eye_colour_id = 7 THEN 1 ELSE 0 END) - \n    SUM(CASE WHEN S.eye_colour_id = 1 THEN 1 ELSE 0 END) AS difference\nFROM superhero AS S \nWHERE S.weight_kg = 0 OR S.weight_kg IS NULL;\t----- bird -----\tsuperhero",
    "293": "SELECT COUNT(S.id) \nFROM superhero AS S \nINNER JOIN alignment AS A ON S.alignment_id = A.id \nINNER JOIN colour AS C ON S.skin_colour_id = C.id \nWHERE A.alignment = 'Bad' AND C.colour = 'Green';\t----- bird -----\tsuperhero",
    "294": "SELECT S.superhero_name \nFROM superhero AS S \nINNER JOIN hero_power AS HP ON S.id = HP.hero_id \nINNER JOIN superpower AS SP ON HP.power_id = SP.id \nWHERE SP.power_name = 'Wind Control' \nORDER BY S.superhero_name;\t----- bird -----\tsuperhero",
    "295": "SELECT G.gender \nFROM superhero AS S \nINNER JOIN hero_power AS HP ON S.id = HP.hero_id \nINNER JOIN superpower AS SP ON HP.power_id = SP.id \nINNER JOIN gender AS G ON S.gender_id = G.id \nWHERE SP.power_name = 'Phoenix Force';\t----- bird -----\tsuperhero",
    "296": "SELECT \n    (SELECT COUNT(*) FROM superhero AS S JOIN publisher AS P ON S.publisher_id = P.id WHERE P.publisher_name = 'DC Comics') -\n    (SELECT COUNT(*) FROM superhero AS S JOIN publisher AS P ON S.publisher_id = P.id WHERE P.publisher_name = 'Marvel Comics') AS difference;\t----- bird -----\tsuperhero",
    "297": "SELECT DisplayName, MAX(Reputation) AS Reputation \nFROM users \nWHERE DisplayName IN ('Harlan', 'Jarrod Dixon') \nGROUP BY DisplayName \nORDER BY Reputation DESC \nLIMIT 1;\t----- bird -----\tcodebase_community",
    "298": "SELECT DisplayName FROM users WHERE strftime('%Y', CreationDate) = '2011';\t----- bird -----\tcodebase_community",
    "299": "SELECT COUNT(*) FROM users WHERE LastAccessDate > '2014-09-01';\t----- bird -----\tcodebase_community",
    "300": "SELECT u.DisplayName \nFROM posts AS p \nJOIN users AS u ON p.OwnerUserId = u.Id \nWHERE p.Title = 'Eliciting priors from experts';\t----- bird -----\tcodebase_community",
    "301": "SELECT COUNT(*) FROM posts WHERE OwnerDisplayName = 'csgillespie';\t----- bird -----\tcodebase_community",
    "302": "SELECT U.DisplayName \nFROM posts AS P \nJOIN users AS U ON P.LastEditorUserId = U.Id \nWHERE P.Title = 'Examples for teaching: Correlation does not mean causation';\t----- bird -----\tcodebase_community",
    "303": "SELECT COUNT(*) \nFROM posts AS P \nINNER JOIN users AS U ON P.OwnerUserId = U.Id \nWHERE U.Age > 65 AND P.Score >= 20;\t----- bird -----\tcodebase_community",
    "304": "SELECT P.Body \nFROM tags AS T \nJOIN posts AS P ON T.ExcerptPostId = P.Id \nWHERE T.TagName = 'bayesian';\t----- bird -----\tcodebase_community",
    "305": "SELECT AVG(P.Score) \nFROM posts AS P \nINNER JOIN users AS U ON P.OwnerUserId = U.Id \nWHERE U.DisplayName = 'csgillespie';\t----- bird -----\tcodebase_community",
    "306": "SELECT CAST(COUNT(CASE WHEN U.Age > 65 THEN P.Id END) AS REAL) * 100 / COUNT(P.Id) AS percentage \nFROM posts AS P \nINNER JOIN users AS U ON P.OwnerUserId = U.Id \nWHERE P.Score > 5;\t----- bird -----\tcodebase_community",
    "307": "SELECT p.FavoriteCount \nFROM posts AS p \nJOIN comments AS c ON p.Id = c.PostId \nWHERE c.UserId = 3025 AND c.CreationDate = '2014-04-23 20:29:39.0';\t----- bird -----\tcodebase_community",
    "308": "SELECT CASE WHEN P.ClosedDate IS NULL THEN 'Not Well-Finished' ELSE 'Well-Finished' END AS Post_Status \nFROM posts AS P \nJOIN comments AS C ON P.Id = C.PostId \nWHERE C.UserId = 23853 AND C.CreationDate = '2013-07-12 09:08:18.0';\t----- bird -----\tcodebase_community",
    "309": "SELECT COUNT(P.Id) \nFROM posts AS P \nINNER JOIN users AS U ON P.OwnerUserId = U.Id \nWHERE U.DisplayName = 'Tiago Pasqualini'\t----- bird -----\tcodebase_community",
    "310": "SELECT U.DisplayName \nFROM votes AS V \nJOIN users AS U ON V.UserId = U.Id \nWHERE V.Id = 6347;\t----- bird -----\tcodebase_community",
    "311": "SELECT COUNT(p.Id) * 1.0 / COUNT(v.Id) AS post_to_vote_ratio \nFROM posts p \nLEFT JOIN votes v ON p.Id = v.PostId \nWHERE p.OwnerUserId = 24;\t----- bird -----\tcodebase_community",
    "312": "SELECT ViewCount \nFROM posts \nWHERE Title = 'Integration of Weka and/or RapidMiner into Informatica PowerCenter/Developer';\t----- bird -----\tcodebase_community",
    "313": "SELECT Text FROM comments WHERE Score = 17;\t----- bird -----\tcodebase_community",
    "314": "SELECT U.DisplayName \nFROM comments AS C \nINNER JOIN users AS U ON C.UserId = U.Id \nWHERE C.Text = 'thank you user93!';\t----- bird -----\tcodebase_community",
    "315": "SELECT U.DisplayName, U.Reputation \nFROM posts AS P \nINNER JOIN users AS U ON P.OwnerUserId = U.Id \nWHERE P.Title = 'Understanding what Dassault iSight is doing?';\t----- bird -----\tcodebase_community",
    "316": "SELECT U.DisplayName FROM posts AS P INNER JOIN users AS U ON P.OwnerUserId = U.Id WHERE P.Title = 'Open source tools for visualizing multi-dimensional data';\t----- bird -----\tcodebase_community",
    "317": "SELECT C.Text \nFROM comments AS C \nINNER JOIN posts AS P ON C.PostId = P.Id \nWHERE P.Title = 'Why square the difference instead of taking the absolute value in standard deviation?';\t----- bird -----\tcodebase_community",
    "318": "SELECT U.DisplayName \nFROM posts AS P \nINNER JOIN votes AS V ON P.Id = V.PostId \nINNER JOIN users AS U ON V.UserId = U.Id \nWHERE V.BountyAmount = 50 AND P.Title LIKE '%variance%';\t----- bird -----\tcodebase_community",
    "319": "SELECT p.Title, c.Text, AVG(p.ViewCount) AS average_view_count \nFROM posts AS p \nJOIN comments AS c ON p.Id = c.PostId \nJOIN postLinks AS pl ON p.Id = pl.PostId \nJOIN tags AS t ON pl.RelatedPostId = t.Id \nWHERE t.TagName = 'humor' \nGROUP BY p.Id, c.Id;\t----- bird -----\tcodebase_community",
    "320": "SELECT COUNT(DISTINCT UserId) \nFROM badges \nGROUP BY UserId \nHAVING COUNT(Name) > 5;\t----- bird -----\tcodebase_community",
    "321": "SELECT U.Id \nFROM users AS U \nINNER JOIN posts AS P ON U.Id = P.OwnerUserId \nINNER JOIN postHistory AS PH ON P.Id = PH.PostId \nWHERE P.ViewCount >= 1000 \nGROUP BY U.Id \nHAVING COUNT(PH.Id) = 1;\t----- bird -----\tcodebase_community",
    "322": "SELECT \n    (CAST(COUNT(CASE WHEN strftime('%Y', Date) = '2010' THEN Name END) AS REAL) / COUNT(Name) * 100) - \n    (CAST(COUNT(CASE WHEN strftime('%Y', Date) = '2011' THEN Name END) AS REAL) / COUNT(Name) * 100) AS percentage_difference\nFROM badges\nWHERE Name = 'Student';\t----- bird -----\tcodebase_community",
    "323": "SELECT AVG(U.UpVotes) AS average_up_votes, AVG(U.Age) AS average_age \nFROM users AS U \nJOIN (SELECT OwnerUserId \n      FROM posts \n      GROUP BY OwnerUserId \n      HAVING COUNT(*) > 10) AS P \nON U.Id = P.OwnerUserId;\t----- bird -----\tcodebase_community",
    "324": "SELECT CAST(COUNT(CASE WHEN strftime('%Y', CreationDate) = '2010' THEN Id END) AS REAL) / COUNT(CASE WHEN strftime('%Y', CreationDate) = '2011' THEN Id END) AS vote_ratio FROM votes;\t----- bird -----\tcodebase_community",
    "325": "SELECT Id FROM posts WHERE OwnerUserId = (SELECT Id FROM users WHERE DisplayName = 'slashnick') ORDER BY AnswerCount DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "326": "SELECT OwnerDisplayName, SUM(ViewCount) AS TotalViews \nFROM posts \nWHERE OwnerDisplayName IN ('Harvey Motulsky', 'Noah Snyder') \nGROUP BY OwnerDisplayName \nORDER BY TotalViews DESC \nLIMIT 1;\t----- bird -----\tcodebase_community",
    "327": "SELECT T1.Tags \nFROM posts AS T1 \nINNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id \nWHERE T2.DisplayName = 'Mark Meckes' AND T1.CommentCount = 0;\t----- bird -----\tcodebase_community",
    "328": "SELECT CAST(SUM(CASE WHEN t.TagName = 'r' THEN 1 ELSE 0 END) AS FLOAT) * 100 / COUNT(DISTINCT p.Id) AS percentage \nFROM posts p \nJOIN users u ON p.OwnerUserId = u.Id \nJOIN postLinks pl ON p.Id = pl.PostId \nJOIN tags t ON pl.RelatedPostId = t.Id \nWHERE u.DisplayName = 'Community';\t----- bird -----\tcodebase_community",
    "329": "SELECT \n    SUM(CASE WHEN u.DisplayName = 'Mornington' THEN p.ViewCount ELSE 0 END) - \n    SUM(CASE WHEN u.DisplayName = 'Amos' THEN p.ViewCount ELSE 0 END) AS view_count_difference \nFROM \n    posts p \nJOIN \n    users u ON p.OwnerUserId = u.Id;\t----- bird -----\tcodebase_community",
    "330": "SELECT COUNT(Id) / 12.0 AS average_monthly_links\nFROM postLinks\nWHERE strftime('%Y', CreationDate) = '2010' AND PostId IN (SELECT Id FROM posts WHERE AnswerCount <= 2);\t----- bird -----\tcodebase_community",
    "331": "SELECT MIN(v.CreationDate) \nFROM votes v \nJOIN users u ON v.UserId = u.Id \nWHERE u.DisplayName = 'chl';\t----- bird -----\tcodebase_community",
    "332": "SELECT U.DisplayName \nFROM badges AS B \nJOIN users AS U ON B.UserId = U.Id \nWHERE B.Name = 'Autobiographer' \nORDER BY B.Date ASC \nLIMIT 1;\t----- bird -----\tcodebase_community",
    "333": "SELECT COUNT(DISTINCT U.Id) \nFROM users U \nINNER JOIN posts P ON U.Id = P.OwnerUserId \nWHERE P.FavoriteCount >= 4 AND U.Location = 'United Kingdom';\t----- bird -----\tcodebase_community",
    "334": "SELECT T1.Id, T1.Title FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.DisplayName = 'Harvey Motulsky' ORDER BY T1.ViewCount DESC LIMIT 1;\t----- bird -----\tcodebase_community",
    "335": "SELECT P.Id, U.DisplayName \nFROM posts AS P \nINNER JOIN users AS U ON P.OwnerUserId = U.Id \nWHERE strftime('%Y', P.CreaionDate) = '2010' \nGROUP BY P.Id \nHAVING MAX(P.FavoriteCount);\t----- bird -----\tcodebase_community",
    "336": "SELECT (COUNT(P.Id) * 100.0 / (SELECT COUNT(*) FROM posts WHERE strftime('%Y', CreationDate) = '2011')) AS percentage\nFROM posts P\nINNER JOIN users U ON P.OwnerUserId = U.Id\nWHERE strftime('%Y', P.CreaionDate) = '2011' AND U.Reputation > 1000;\t----- bird -----\tcodebase_community",
    "337": "SELECT P.ViewCount, U.DisplayName \nFROM posts AS P \nINNER JOIN users AS U ON P.OwnerUserId = U.Id \nWHERE P.Body = 'Computer Game Datasets';\t----- bird -----\tcodebase_community",
    "338": "SELECT COUNT(*) \nFROM comments \nWHERE PostId = (SELECT Id FROM posts ORDER BY Score DESC LIMIT 1);\t----- bird -----\tcodebase_community",
    "339": "SELECT C.Text, U.DisplayName \nFROM comments AS C \nINNER JOIN posts AS P ON C.PostId = P.Id \nINNER JOIN users AS U ON C.UserId = U.Id \nWHERE P.Title = 'Analysing wind data with R' \nORDER BY C.CreationDate DESC \nLIMIT 10;\t----- bird -----\tcodebase_community",
    "340": "SELECT CAST(COUNT(CASE WHEN p.Score > 50 THEN 1 END) AS REAL) * 100 / COUNT(p.Id) AS percentage \nFROM posts p \nJOIN users u ON p.OwnerUserId = u.Id \nWHERE u.Reputation = (SELECT MAX(Reputation) FROM users);\t----- bird -----\tcodebase_community",
    "341": "SELECT ExcerptPostId, WikiPostId FROM tags WHERE TagName = 'sample';\t----- bird -----\tcodebase_community",
    "342": "SELECT U.Reputation, U.UpVotes \nFROM comments C \nJOIN users U ON C.UserId = U.Id \nWHERE C.Text = 'fine, you win :)';\t----- bird -----\tcodebase_community",
    "343": "SELECT c.Text \nFROM comments c \nJOIN posts p ON c.PostId = p.Id \nWHERE p.ViewCount BETWEEN 100 AND 150 \nORDER BY c.Score DESC \nLIMIT 1;\t----- bird -----\tcodebase_community",
    "344": "SELECT COUNT(c.Id) \nFROM comments AS c \nJOIN posts AS p ON c.PostId = p.Id \nWHERE p.CommentCount = 1 AND c.Score = 0;\t----- bird -----\tcodebase_community",
    "345": "SELECT CAST(COUNT(CASE WHEN u.UpVotes = 0 THEN 1 END) AS REAL) * 100 / COUNT(c.UserId) AS percentage \nFROM comments c \nJOIN users u ON c.UserId = u.Id \nWHERE c.Score BETWEEN 5 AND 10;\t----- bird -----\tcodebase_community",
    "346": "SELECT * FROM cards WHERE cardKingdomFoilId IS NOT NULL AND cardKingdomId IS NOT NULL;\t----- bird -----\tcard_games",
    "347": "SELECT * FROM cards WHERE borderColor = 'borderless' AND cardKingdomFoilId IS NULL AND cardKingdomId IS NOT NULL;\t----- bird -----\tcard_games",
    "348": "SELECT C.id \nFROM cards AS C \nJOIN legalities AS L ON C.uuid = L.uuid \nWHERE C.rarity = 'mythic' AND L.status = 'Banned' AND L.format = 'gladiator';\t----- bird -----\tcard_games",
    "349": "SELECT L.status \nFROM cards AS C \nINNER JOIN legalities AS L ON C.uuid = L.uuid \nWHERE C.type = 'Artifact' AND C.side IS NULL AND L.format = 'vintage';\t----- bird -----\tcard_games",
    "350": "SELECT id, artist \nFROM cards \nWHERE (power = '*' OR power IS NULL) \nAND uuid IN (SELECT uuid FROM legalities WHERE format = 'commander' AND status = 'Legal');\t----- bird -----\tcard_games",
    "351": "SELECT C.id, R.text \nFROM cards AS C \nLEFT JOIN rulings AS R ON C.uuid = R.uuid \nWHERE C.artist = 'Stephen Daniele' AND C.hasContentWarning = 1;\t----- bird -----\tcard_games",
    "352": "SELECT C.name, C.artist, C.isPromo \nFROM cards AS C \nINNER JOIN rulings AS R ON C.uuid = R.uuid \nGROUP BY C.id \nORDER BY COUNT(R.uuid) DESC \nLIMIT 1;\t----- bird -----\tcard_games",
    "353": "SELECT (SUM(CASE WHEN language = 'Chinese Simplified' THEN 1 ELSE 0 END) * 100.0 / COUNT(id)) AS percentage FROM foreign_data;\t----- bird -----\tcard_games",
    "354": "SELECT COUNT(*) FROM cards WHERE power = '*';\t----- bird -----\tcard_games",
    "355": "SELECT borderColor FROM cards WHERE name = 'Ancestor''s Chosen';\t----- bird -----\tcard_games",
    "356": "SELECT L.format FROM cards AS C INNER JOIN legalities AS L ON C.uuid = L.uuid WHERE C.name = 'Benalish Knight';\t----- bird -----\tcard_games",
    "357": "SELECT CAST(SUM(CASE WHEN borderColor = 'borderless' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(id) AS percentage FROM cards;\t----- bird -----\tcard_games",
    "358": "SELECT CAST(SUM(CASE WHEN F.language = 'French' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(S.id) AS percentage \nFROM cards AS S \nLEFT JOIN foreign_data AS F ON S.uuid = F.uuid \nWHERE S.isStorySpotlight = 1;\t----- bird -----\tcard_games",
    "359": "SELECT COUNT(*) \nFROM cards \nWHERE originalType = 'Summon - Angel' AND subtypes IS NOT NULL AND subtypes != 'Angel';\t----- bird -----\tcard_games",
    "360": "SELECT id FROM cards WHERE duelDeck = 'a';\t----- bird -----\tcard_games",
    "361": "SELECT COUNT(*) FROM cards WHERE borderColor = 'white' AND uuid IN (SELECT uuid FROM legalities WHERE status = 'Banned');\t----- bird -----\tcard_games",
    "362": "SELECT C.id, C.name \nFROM cards AS C \nINNER JOIN foreign_data AS F ON C.uuid = F.uuid \nWHERE C.originalType = 'Artifact' AND C.colors = 'B';\t----- bird -----\tcard_games",
    "363": "SELECT manaCost FROM cards WHERE layout = 'normal' AND frameVersion = '2003' AND borderColor = 'black' AND availability = 'mtgo,paper';\t----- bird -----\tcard_games",
    "364": "SELECT CAST(SUM(CASE WHEN T1.isTextless = 0 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.id) AS percentage, T1.id \nFROM cards AS T1 \nWHERE T1.isStorySpotlight = 1;\t----- bird -----\tcard_games",
    "365": "SELECT COUNT(*) \nFROM set_translations AS ST \nINNER JOIN sets AS S ON ST.setCode = S.code \nWHERE S.block = 'Commander' AND ST.language = 'Portuguese (Brasil)';\t----- bird -----\tcard_games",
    "366": "SELECT DISTINCT T1.subtypes, T1.supertypes \nFROM cards AS T1 \nINNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid \nWHERE T2.language = 'German' AND T1.subtypes IS NOT NULL AND T1.supertypes IS NOT NULL;\t----- bird -----\tcard_games",
    "367": "SELECT COUNT(*) \nFROM cards \nWHERE (power IS NULL OR power = '*') AND text LIKE '%triggered ability%';\t----- bird -----\tcard_games",
    "368": "SELECT COUNT(DISTINCT C.id) \nFROM cards AS C \nINNER JOIN legalities AS L ON C.uuid = L.uuid \nINNER JOIN rulings AS R ON C.uuid = R.uuid \nWHERE L.format = 'premodern' AND R.text = 'This is a triggered mana ability.' AND C.side IS NULL;\t----- bird -----\tcard_games",
    "369": "SELECT F.name FROM cards AS C \nINNER JOIN foreign_data AS F ON C.uuid = F.uuid \nWHERE C.originalType = 'Creature' AND C.borderColor = 'black' AND C.artist = 'Matthew D. Wilson' AND F.language = 'French';\t----- bird -----\tcard_games",
    "370": "SELECT ST.language \nFROM sets AS S \nINNER JOIN set_translations AS ST ON S.code = ST.setCode \nWHERE S.baseSetSize = 180 AND S.block = 'Ravnica';\t----- bird -----\tcard_games",
    "371": "SELECT CAST(SUM(CASE WHEN L.status = 'legal' AND C.hasContentWarning = 0 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(C.id) \nFROM cards AS C \nINNER JOIN legalities AS L ON C.uuid = L.uuid \nWHERE L.format = 'commander';\t----- bird -----\tcard_games",
    "372": "SELECT CAST(SUM(CASE WHEN F.language = 'French' THEN 1 ELSE 0 END) AS REAL) * 100 / NULLIF(COUNT(CASE WHEN C.power IS NULL OR C.power = '*' THEN 1 END), 0) AS percentage \nFROM cards AS C \nINNER JOIN foreign_data AS F ON C.uuid = F.uuid \nWHERE C.power IS NULL OR C.power = '*';\t----- bird -----\tcard_games",
    "373": "SELECT F.language FROM foreign_data AS F INNER JOIN cards AS C ON F.uuid = C.uuid WHERE C.multiverseId = 149934;\t----- bird -----\tcard_games",
    "374": "SELECT CAST(SUM(CASE WHEN isTextless = 1 AND layout = 'normal' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(id) FROM cards;\t----- bird -----\tcard_games",
    "375": "SELECT DISTINCT ST.language \nFROM set_translations AS ST \nINNER JOIN sets AS S ON ST.setCode = S.code \nWHERE S.mcmName = 'Archenemy' AND S.code = 'ARC';\t----- bird -----\tcard_games",
    "376": "SELECT F.language FROM foreign_data AS F INNER JOIN cards AS C ON F.uuid = C.uuid WHERE C.name = 'A Pedra Fellwar';\t----- bird -----\tcard_games",
    "377": "SELECT name, convertedManaCost FROM cards WHERE name IN ('Serra Angel', 'Shrine Keeper');\t----- bird -----\tcard_games",
    "378": "SELECT ST.translation \nFROM set_translations AS ST \nINNER JOIN cards AS C ON ST.setCode = C.setCode \nWHERE C.name = \"Ancestor's Chosen\" AND ST.language = 'Italian';\t----- bird -----\tcard_games",
    "379": "SELECT F.name FROM foreign_data AS F INNER JOIN cards AS C ON F.uuid = C.uuid WHERE C.name = 'Ancestor''s Chosen' AND F.language = 'Korean';\t----- bird -----\tcard_games",
    "380": "SELECT COUNT(*) FROM cards AS C \nINNER JOIN set_translations AS ST ON ST.setCode = C.setCode \nWHERE ST.translation = 'Hauptset Zehnte Edition' AND C.artist = 'Adam Rex';\t----- bird -----\tcard_games",
    "381": "SELECT translation FROM set_translations AS ST INNER JOIN sets AS S ON ST.setCode = S.code WHERE S.name = 'Eighth Edition' AND ST.language = 'Chinese Simplified';\t----- bird -----\tcard_games",
    "382": "SELECT C.name, S.mtgoCode \nFROM cards AS C \nJOIN sets AS S ON C.setCode = S.code \nWHERE C.name = 'Angel of Mercy' AND S.mtgoCode IS NOT NULL;\t----- bird -----\tcard_games",
    "383": "SELECT COUNT(T1.id) \nFROM sets AS T1 \nINNER JOIN set_translations AS T2 ON T1.code = T2.setCode \nWHERE T1.block = 'Ice Age' AND T2.language = 'Italian' AND T2.translation IS NOT NULL;\t----- bird -----\tcard_games",
    "384": "SELECT IIF(S.isForeignOnly = 1, 'YES', 'NO') \nFROM cards AS C \nINNER JOIN sets AS S ON C.setCode = S.code \nWHERE C.name = 'Adarkar Valkyrie';\t----- bird -----\tcard_games",
    "385": "SELECT COUNT(DISTINCT S.code) \nFROM sets AS S \nINNER JOIN set_translations AS ST ON S.code = ST.setCode \nWHERE ST.language = 'Italian' AND S.baseSetSize < 100;\t----- bird -----\tcard_games",
    "386": "SELECT DISTINCT C.artist \nFROM cards AS C \nINNER JOIN sets AS S ON C.setCode = S.code \nWHERE S.name = 'Coldsnap' AND C.artist IN ('Jeremy Jarvis', 'Aaron Miller', 'Chippy');\t----- bird -----\tcard_games",
    "387": "SELECT COUNT(*) \nFROM cards AS T1 \nINNER JOIN sets AS T2 ON T1.setCode = T2.code \nWHERE T2.name = 'Coldsnap' AND T1.convertedManaCost > 5 AND (T1.power = '*' OR T1.power IS NULL);\t----- bird -----\tcard_games",
    "388": "SELECT F.flavorText FROM foreign_data AS F INNER JOIN cards AS C ON F.uuid = C.uuid WHERE C.name = 'Ancestor''s Chosen' AND F.language = 'Italian';\t----- bird -----\tcard_games",
    "389": "SELECT R.text \nFROM cards AS C \nINNER JOIN rulings AS R ON C.uuid = R.uuid \nINNER JOIN sets AS S ON C.setCode = S.code \nINNER JOIN set_translations AS ST ON S.code = ST.setCode \nWHERE S.name = 'Coldsnap' AND ST.language = 'Italian';\t----- bird -----\tcard_games",
    "390": "SELECT F.name \nFROM foreign_data AS F \nINNER JOIN cards AS C ON C.uuid = F.uuid \nINNER JOIN sets AS S ON S.code = C.setCode \nWHERE S.name = 'Coldsnap' AND F.language = 'Italian' \nAND C.convertedManaCost = (SELECT MAX(convertedManaCost) FROM cards WHERE setCode = S.code);\t----- bird -----\tcard_games",
    "391": "SELECT CAST(SUM(CASE WHEN T1.convertedManaCost = 7 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.id) \nFROM cards AS T1 \nINNER JOIN sets AS T2 ON T2.code = T1.setCode \nWHERE T2.name = 'Coldsnap';\t----- bird -----\tcard_games",
    "392": "SELECT CAST(SUM(CASE WHEN C.cardKingdomFoilId IS NOT NULL AND C.cardKingdomId IS NOT NULL THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(C.name) AS percentage \nFROM cards AS C \nINNER JOIN sets AS S ON C.setCode = S.code \nWHERE S.name = 'Coldsnap';\t----- bird -----\tcard_games",
    "393": "SELECT L.format, C.name \nFROM legalities AS L \nJOIN cards AS C ON L.uuid = C.uuid \nWHERE L.status = 'Banned' \nGROUP BY L.format \nHAVING COUNT(L.status) = (SELECT MAX(banned_count) \n                          FROM (SELECT COUNT(*) AS banned_count \n                                FROM legalities \n                                WHERE status = 'Banned' \n                                GROUP BY format)) \nORDER BY L.format;\t----- bird -----\tcard_games",
    "394": "SELECT C.name, L.format \nFROM cards AS C \nJOIN legalities AS L ON C.uuid = L.uuid \nWHERE C.edhrecRank = 1 AND L.status = 'Banned';\t----- bird -----\tcard_games",
    "395": "SELECT C.name, L.format \nFROM cards AS C \nINNER JOIN sets AS S ON C.setCode = S.code \nINNER JOIN legalities AS L ON C.uuid = L.uuid \nWHERE S.name = 'Hour of Devastation' AND L.status = 'Legal';\t----- bird -----\tcard_games",
    "396": "SELECT S.name \nFROM sets AS S \nINNER JOIN set_translations AS ST1 ON S.code = ST1.setCode \nINNER JOIN set_translations AS ST2 ON S.code = ST2.setCode \nWHERE ST1.language = 'Korean' AND ST2.language NOT LIKE '%Japanese%';\t----- bird -----\tcard_games",
    "397": "SELECT DISTINCT C.frameVersion, C.name \nFROM cards AS C \nINNER JOIN legalities AS L ON C.uuid = L.uuid \nWHERE C.artist = 'Allen Williams' AND L.status = 'Banned';\t----- bird -----\tcard_games",
    "398": "SELECT bond_type, COUNT(bond_type) AS Count FROM bond GROUP BY bond_type ORDER BY Count DESC LIMIT 1;\t----- bird -----\ttoxicology",
    "399": "SELECT AVG(oxygen_count) \nFROM (SELECT COUNT(a.atom_id) AS oxygen_count \n      FROM atom AS a \n      JOIN bond AS b ON a.molecule_id = b.molecule_id \n      WHERE b.bond_type = '-' AND a.element = 'o' \n      GROUP BY b.molecule_id);\t----- bird -----\ttoxicology",
    "400": "SELECT AVG(single_bond_count) AS average_single_bonded\nFROM (\n    SELECT COUNT(a.atom_id) AS single_bond_count\n    FROM molecule AS m\n    JOIN bond AS b ON m.molecule_id = b.molecule_id\n    JOIN atom AS a ON b.molecule_id = a.molecule_id\n    WHERE m.label = '+' AND b.bond_type = '-'\n    GROUP BY m.molecule_id\n) AS subquery;\t----- bird -----\ttoxicology",
    "401": "SELECT DISTINCT m.molecule_id \nFROM molecule AS m \nJOIN bond AS b ON m.molecule_id = b.molecule_id \nWHERE b.bond_type = '#' AND m.label = '+';\t----- bird -----\ttoxicology",
    "402": "SELECT CAST(SUM(IIF(a.element = 'c', 1, 0)) AS FLOAT) * 100 / COUNT(a.atom_id) \nFROM atom a \nJOIN bond b ON a.molecule_id = b.molecule_id \nWHERE b.bond_type = '=';\t----- bird -----\ttoxicology",
    "403": "SELECT DISTINCT a.element \nFROM atom a \nJOIN bond b ON a.molecule_id = b.molecule_id \nWHERE b.bond_id = 'TR004_8_9';\t----- bird -----\ttoxicology",
    "404": "SELECT DISTINCT a.element \nFROM atom a \nJOIN connected c ON a.atom_id = c.atom_id OR a.atom_id = c.atom_id2 \nJOIN bond b ON c.bond_id = b.bond_id \nWHERE b.bond_type = '=';\t----- bird -----\ttoxicology",
    "405": "SELECT m.label FROM atom a INNER JOIN molecule m ON a.molecule_id = m.molecule_id WHERE a.element = 'h' GROUP BY m.label ORDER BY COUNT(a.atom_id) DESC LIMIT 1;\t----- bird -----\ttoxicology",
    "406": "SELECT element FROM atom AS A \nJOIN molecule AS M ON A.molecule_id = M.molecule_id \nWHERE M.label = '-' \nGROUP BY element \nORDER BY COUNT(A.element) ASC \nLIMIT 1;\t----- bird -----\ttoxicology",
    "407": "SELECT b.bond_type \nFROM connected c \nJOIN bond b ON c.bond_id = b.bond_id \nWHERE (c.atom_id = 'TR004_8' AND c.atom_id2 = 'TR004_20') OR (c.atom_id = 'TR004_20' AND c.atom_id2 = 'TR004_8');\t----- bird -----\ttoxicology",
    "408": "SELECT COUNT(DISTINCT a.atom_id) \nFROM atom a \nJOIN connected c ON a.atom_id = c.atom_id OR a.atom_id = c.atom_id2 \nJOIN bond b ON c.bond_id = b.bond_id \nWHERE (a.element = 'i' OR a.element = 's') AND b.bond_type = '-'\t----- bird -----\ttoxicology",
    "409": "SELECT CAST(COUNT(DISTINCT CASE WHEN a.element = 'f' THEN a.molecule_id END) AS REAL) * 100 / COUNT(DISTINCT m.molecule_id) \nFROM molecule m \nJOIN atom a ON m.molecule_id = a.molecule_id \nWHERE m.label = '+';\t----- bird -----\ttoxicology",
    "410": "SELECT CAST(SUM(CASE WHEN b.bond_type = '#' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(b.bond_id) \nFROM molecule m \nJOIN bond b ON m.molecule_id = b.molecule_id \nWHERE m.label = '+';\t----- bird -----\ttoxicology",
    "411": "SELECT DISTINCT a.element \nFROM atom a \nJOIN molecule m ON a.molecule_id = m.molecule_id \nWHERE m.molecule_id = 'TR000' \nORDER BY a.element \nLIMIT 3;\t----- bird -----\ttoxicology",
    "412": "SELECT CAST(SUM(CASE WHEN b.bond_type = '=' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(b.bond_id) \nFROM bond b \nWHERE b.molecule_id = 'TR008';\t----- bird -----\ttoxicology",
    "413": "SELECT ROUND(CAST(SUM(CASE WHEN label = '+' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(molecule_id), 3) FROM molecule;\t----- bird -----\ttoxicology",
    "414": "SELECT ROUND(CAST(SUM(CASE WHEN a.element = 'h' THEN 1 ELSE 0 END) AS REAL) * 100 / NULLIF(COUNT(a.atom_id), 0), 4) \nFROM atom a \nWHERE a.molecule_id = 'TR206';\t----- bird -----\ttoxicology",
    "415": "SELECT a.element, m.label \nFROM atom a \nJOIN molecule m ON a.molecule_id = m.molecule_id \nWHERE m.molecule_id = 'TR060';\t----- bird -----\ttoxicology",
    "416": "SELECT b.bond_type, COUNT(b.bond_type) AS bond_count, m.label \nFROM bond b \nJOIN molecule m ON b.molecule_id = m.molecule_id \nWHERE b.molecule_id = 'TR010' \nGROUP BY b.bond_type \nORDER BY bond_count DESC \nLIMIT 1;\t----- bird -----\ttoxicology",
    "417": "SELECT m.molecule_id \nFROM molecule m \nJOIN bond b ON m.molecule_id = b.molecule_id \nWHERE m.label = '-' AND b.bond_type = '-' \nORDER BY m.molecule_id \nLIMIT 3;\t----- bird -----\ttoxicology",
    "418": "SELECT COUNT(DISTINCT c.bond_id) \nFROM connected c \nJOIN bond b ON c.bond_id = b.bond_id \nWHERE b.molecule_id = 'TR009' AND (c.atom_id = 'TR009_12' OR c.atom_id2 = 'TR009_12');\t----- bird -----\ttoxicology",
    "419": "SELECT b.bond_type, c.atom_id, c.atom_id2 \nFROM bond b \nJOIN connected c ON b.bond_id = c.bond_id \nWHERE b.bond_id = 'TR001_6_9';\t----- bird -----\ttoxicology",
    "420": "SELECT COUNT(DISTINCT c.bond_id) \nFROM connected c \nWHERE c.atom_id = 'TR%_19' OR c.atom_id2 = 'TR%_19';\t----- bird -----\ttoxicology",
    "421": "SELECT DISTINCT a.element \nFROM atom a \nJOIN molecule m ON a.molecule_id = m.molecule_id \nWHERE m.molecule_id = 'TR004';\t----- bird -----\ttoxicology",
    "422": "SELECT DISTINCT m.molecule_id \nFROM atom a \nJOIN molecule m ON a.molecule_id = m.molecule_id \nWHERE SUBSTR(a.atom_id, 7, 2) BETWEEN '21' AND '25' AND m.label = '+';\t----- bird -----\ttoxicology",
    "423": "SELECT DISTINCT b.bond_id \nFROM bond b \nINNER JOIN connected c ON b.bond_id = c.bond_id \nINNER JOIN atom a1 ON c.atom_id = a1.atom_id \nINNER JOIN atom a2 ON c.atom_id2 = a2.atom_id \nWHERE (a1.element = 'p' AND a2.element = 'n') OR (a1.element = 'n' AND a2.element = 'p');\t----- bird -----\ttoxicology",
    "424": "SELECT m.label \nFROM molecule m \nJOIN bond b ON m.molecule_id = b.molecule_id \nWHERE b.bond_type = '=' \nGROUP BY m.molecule_id \nORDER BY COUNT(b.bond_type) DESC \nLIMIT 1;\t----- bird -----\ttoxicology",
    "425": "SELECT AVG(bond_count) \nFROM (\n    SELECT COUNT(DISTINCT c.bond_id) AS bond_count \n    FROM atom a \n    JOIN connected c ON a.atom_id = c.atom_id OR a.atom_id = c.atom_id2 \n    WHERE a.element = 'i' \n    GROUP BY a.atom_id\n);\t----- bird -----\ttoxicology",
    "426": "SELECT DISTINCT a.element \nFROM atom a \nWHERE a.atom_id NOT IN (SELECT c.atom_id FROM connected c);\t----- bird -----\ttoxicology",
    "427": "SELECT DISTINCT a.element \nFROM atom a \nJOIN connected c ON a.atom_id = c.atom_id OR a.atom_id = c.atom_id2 \nJOIN bond b ON c.bond_id = b.bond_id \nWHERE b.molecule_id = 'TR041' AND b.bond_type = '#';\t----- bird -----\ttoxicology",
    "428": "SELECT DISTINCT a.element \nFROM atom AS a \nJOIN connected AS c ON a.atom_id = c.atom_id OR a.atom_id = c.atom_id2 \nJOIN bond AS b ON c.bond_id = b.bond_id \nWHERE b.bond_id = 'TR144_8_19';\t----- bird -----\ttoxicology",
    "429": "SELECT DISTINCT a.element \nFROM atom a \nINNER JOIN connected c ON a.atom_id = c.atom_id \nINNER JOIN bond b ON c.bond_id = b.bond_id \nWHERE b.bond_type = '#';\t----- bird -----\ttoxicology",
    "430": "SELECT CAST(SUM(CASE WHEN m.label = '+' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(b.bond_id) \nFROM bond b \nJOIN molecule m ON b.molecule_id = m.molecule_id \nWHERE b.bond_type = '-';\t----- bird -----\ttoxicology",
    "431": "SELECT COUNT(DISTINCT a.atom_id) \nFROM atom a \nJOIN connected c ON a.atom_id = c.atom_id OR a.atom_id = c.atom_id2 \nJOIN bond b ON c.bond_id = b.bond_id \nWHERE b.bond_type = '#' AND (a.element = 'p' OR a.element = 'br');\t----- bird -----\ttoxicology",
    "432": "SELECT ROUND(CAST(COUNT(CASE WHEN a.element = 'cl' THEN a.atom_id ELSE NULL END) AS REAL) * 100 / COUNT(a.atom_id), 5) AS percent\nFROM atom AS a\nINNER JOIN connected AS c ON a.atom_id = c.atom_id OR a.atom_id = c.atom_id2\nINNER JOIN bond AS b ON c.bond_id = b.bond_id\nWHERE b.bond_type = '-';\t----- bird -----\ttoxicology",
    "433": "SELECT DISTINCT T1.element \nFROM atom AS T1 \nINNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id OR T1.atom_id = T2.atom_id2 \nWHERE T2.bond_id = 'TR001_10_11'\t----- bird -----\ttoxicology",
    "434": "SELECT ROUND(CAST(COUNT(CASE WHEN a.element = 'cl' THEN a.atom_id ELSE NULL END) AS REAL) * 100 / COUNT(DISTINCT m.molecule_id), 5) AS percentage\nFROM molecule m \nJOIN atom a ON m.molecule_id = a.molecule_id \nWHERE m.label = '+';\t----- bird -----\ttoxicology",
    "435": "SELECT a.element \nFROM molecule m \nJOIN atom a ON m.molecule_id = a.molecule_id \nWHERE m.label = '+' AND SUBSTR(a.atom_id, 7, 1) = '4';\t----- bird -----\ttoxicology",
    "436": "SELECT CAST(COUNT(CASE WHEN a.element = 'h' THEN a.atom_id ELSE NULL END) AS REAL) * 1.0 / COUNT(a.atom_id) AS ratio, \n       m.label \nFROM atom AS a \nINNER JOIN molecule AS m ON a.molecule_id = m.molecule_id \nWHERE m.molecule_id = 'TR006';\t----- bird -----\ttoxicology",
    "437": "SELECT m.molecule_id \nFROM molecule m \nJOIN atom a ON m.molecule_id = a.molecule_id \nWHERE m.label = '-' \nGROUP BY m.molecule_id \nHAVING COUNT(a.atom_id) > 5;\t----- bird -----\ttoxicology",
    "438": "SELECT COUNT(*) \nFROM schools S \nJOIN satscores M ON S.CDSCode = M.cds \nWHERE M.AvgScrMath > 400 AND S.Virtual = 'F';\t----- bird -----\tcalifornia_schools",
    "439": "SELECT CDSCode \nFROM frpm \nWHERE \"Enrollment (K-12)\" + \"Enrollment (Ages 5-17)\" > 500;\t----- bird -----\tcalifornia_schools",
    "440": "SELECT MAX(`Percent (%) Eligible Free (Ages 5-17)`) \nFROM frpm \nWHERE CDSCode IN (\n    SELECT s.cds \n    FROM satscores s \n    WHERE CAST(s.NumGE1500 AS FLOAT) / s.NumTstTakr > 0.3\n) \nAND `Enrollment (Ages 5-17)` > 0;\t----- bird -----\tcalifornia_schools",
    "441": "SELECT s.CDSCode, s.CharterNum, AVG(sat.AvgScrWrite) AS average_write_score\nFROM schools s\nJOIN satscores sat ON s.CDSCode = sat.cds\nWHERE sat.AvgScrWrite > 499 AND s.CharterNum IS NOT NULL\nGROUP BY s.CDSCode, s.CharterNum\nORDER BY average_write_score DESC;\t----- bird -----\tcalifornia_schools",
    "442": "SELECT s.School, s.Street || ' ' || s.City || ', ' || s.State || ' ' || s.Zip AS FullAddress\nFROM frpm f\nJOIN schools s ON f.CDSCode = s.CDSCode\nWHERE ABS(f.`Enrollment (K-12)` - f.`Enrollment (Ages 5-17)`) > 30;\t----- bird -----\tcalifornia_schools",
    "443": "SELECT sch.School \nFROM frpm f \nJOIN satscores sat ON f.CDSCode = sat.cds \nJOIN schools sch ON f.CDSCode = sch.CDSCode \nWHERE (f.`Free Meal Count (K-12)` / f.`Enrollment (K-12)`) > 0.1 \nAND sat.NumTstTakr > 0 \nAND sat.NumGE1500 >= 1;\t----- bird -----\tcalifornia_schools",
    "444": "SELECT s.School, s.FundingType \nFROM schools s \nJOIN satscores sat ON s.CDSCode = sat.cds \nWHERE s.County = 'Riverside' \nGROUP BY s.CDSCode, s.FundingType \nHAVING AVG(sat.AvgScrMath) > 400;\t----- bird -----\tcalifornia_schools",
    "445": "SELECT s.School, s.Street || ', ' || s.City || ', ' || s.State || ' ' || s.Zip AS FullAddress \nFROM frpm f \nJOIN schools s ON f.CDSCode = s.CDSCode \nWHERE s.County = 'Monterey' \nAND f.`Free Meal Count (Ages 5-17)` > 800;\t----- bird -----\tcalifornia_schools",
    "446": "SELECT s.School, AVG(sat.AvgScrWrite) AS average_write_score, s.Phone \nFROM schools s \nJOIN satscores sat ON s.CDSCode = sat.cds \nWHERE (s.OpenDate > '1991-01-01' OR s.ClosedDate < '2000-01-01') \nGROUP BY s.School, s.Phone;\t----- bird -----\tcalifornia_schools",
    "447": "SELECT s.School, s.DOCType \nFROM schools s \nJOIN frpm f ON s.CDSCode = f.CDSCode \nWHERE s.FundingType = 'Local' \nAND (f.`Enrollment (K-12)` - f.`Enrollment (Ages 5-17)`) > \n    (SELECT AVG(f1.`Enrollment (K-12)` - f1.`Enrollment (Ages 5-17)`) \n     FROM frpm f1 \n     JOIN schools s1 ON f1.CDSCode = s1.CDSCode \n     WHERE s1.FundingType = 'Local');\t----- bird -----\tcalifornia_schools",
    "448": "SELECT `School Name`, CAST(`Free Meal Count (K-12)` AS REAL) / `Enrollment (K-12)` AS EligibleFreeRate \nFROM frpm \nWHERE `Enrollment (K-12)` > 0 \nORDER BY `Enrollment (K-12)` DESC \nLIMIT 11 OFFSET 9;\t----- bird -----\tcalifornia_schools",
    "449": "SELECT T1.`School Name`, CAST(T1.`FRPM Count (K-12)` AS REAL) / T1.`Enrollment (K-12)` AS EligibleFreeReducedRate \nFROM frpm AS T1 \nWHERE T1.`Ownership Code` = 66 AND T1.`Enrollment (K-12)` > 0 \nORDER BY T1.`FRPM Count (K-12)` DESC \nLIMIT 5;\t----- bird -----\tcalifornia_schools",
    "450": "SELECT s.Street, s.City, s.Zip, s.State \nFROM schools s \nJOIN satscores sat ON s.CDSCode = sat.cds \nWHERE sat.NumTstTakr > 0 \nORDER BY (sat.NumGE1500 * 1.0 / sat.NumTstTakr) ASC \nLIMIT 1;\t----- bird -----\tcalifornia_schools",
    "451": "SELECT s.AdmFName1 || ' ' || s.AdmLName1 AS full_name \nFROM schools s \nJOIN satscores sat ON s.CDSCode = sat.cds \nWHERE sat.NumGE1500 = (SELECT MAX(NumGE1500) FROM satscores) \nOR sat.NumGE1500 IN (SELECT MAX(NumGE1500) FROM satscores GROUP BY cds);\t----- bird -----\tcalifornia_schools",
    "452": "SELECT AVG(sat.NumTstTakr) \nFROM schools s \nJOIN satscores sat ON s.CDSCode = sat.cds \nWHERE s.County = 'Fresno' \nAND s.OpenDate BETWEEN '1980-01-01' AND '1980-12-31';\t----- bird -----\tcalifornia_schools",
    "453": "SELECT s.Phone \nFROM satscores sat \nJOIN schools s ON sat.cds = s.CDSCode \nWHERE s.District = 'Fresno Unified' \nORDER BY sat.AvgScrRead ASC \nLIMIT 1;\t----- bird -----\tcalifornia_schools",
    "454": "SELECT s.School, s.County, s.State, s.City \nFROM schools s \nJOIN satscores sat ON s.CDSCode = sat.cds \nWHERE s.Virtual = 'F' \n  AND s.CDSCode IN (\n    SELECT CDSCode \n    FROM (\n      SELECT cds, RANK() OVER (PARTITION BY dname ORDER BY AvgScrRead DESC) AS rank \n      FROM satscores \n      WHERE enroll12 > 0\n    ) AS ranked \n    WHERE rank <= 5\n  );\t----- bird -----\tcalifornia_schools",
    "455": "SELECT s.School, AVG(sat.AvgScrWrite) AS average_write_score \nFROM schools s \nJOIN satscores sat ON s.CDSCode = sat.cds \nWHERE s.AdmFName1 = 'Ricci' AND s.AdmLName1 = 'Ulrich' \nGROUP BY s.School;\t----- bird -----\tcalifornia_schools",
    "456": "SELECT s.School, f.`Enrollment (K-12)` \nFROM frpm f \nJOIN schools s ON f.CDSCode = s.CDSCode \nWHERE s.DOC = 31 \nORDER BY f.`Enrollment (K-12)` DESC \nLIMIT 1;\t----- bird -----\tcalifornia_schools",
    "457": "SELECT COUNT(*) / 12 AS MonthlyAverageOpenedSchools \nFROM schools \nWHERE DOC = 52 AND strftime('%Y', OpenDate) = '1980';\t----- bird -----\tcalifornia_schools",
    "458": "SELECT \n    (SELECT COUNT(*) FROM schools WHERE DOC = 54 AND County = 'Orange') * 1.0 /\n    (SELECT COUNT(*) FROM schools WHERE DOC = 52 AND County = 'Orange') AS Ratio;\t----- bird -----\tcalifornia_schools",
    "459": "SELECT s.Street, s.City, s.Zip, s.State, s.School \nFROM satscores sat \nJOIN schools s ON sat.cds = s.CDSCode \nORDER BY sat.AvgScrMath DESC \nLIMIT 1 OFFSET 6;\t----- bird -----\tcalifornia_schools",
    "460": "SELECT COUNT(*) \nFROM frpm AS f \nJOIN schools AS s ON f.CDSCode = s.CDSCode \nWHERE s.County = 'Los Angeles' \nAND f.`Charter School (Y/N)` = 0 \nAND (f.`Free Meal Count (K-12)` * 100 / f.`Enrollment (K-12)`) < 0.18;\t----- bird -----\tcalifornia_schools",
    "461": "SELECT SUM(`Enrollment (Ages 5-17)`) \nFROM schools s \nJOIN frpm f ON s.CDSCode = f.CDSCode \nWHERE s.EdOpsCode = 'SSS' AND f.`Academic Year` = '2014-15';\t----- bird -----\tcalifornia_schools",
    "462": "SELECT s.School, (f.`FRPM Count (Ages 5-17)` / f.`Enrollment (Ages 5-17)`) * 100 AS PercentEligibleFRPM \nFROM frpm f \nJOIN schools s ON f.CDSCode = s.CDSCode \nWHERE s.County = 'Los Angeles' AND s.GSserved = 'K-9';\t----- bird -----\tcalifornia_schools",
    "463": "SELECT County, COUNT(*) AS SchoolCount \nFROM schools \nWHERE Virtual = 'F' AND County IN ('San Diego', 'Santa Barbara') \nGROUP BY County \nORDER BY SchoolCount DESC \nLIMIT 1;\t----- bird -----\tcalifornia_schools",
    "464": "SELECT `Low Grade`, `High Grade` FROM schools ORDER BY Longitude DESC LIMIT 1;\t----- bird -----\tcalifornia_schools",
    "465": "SELECT COUNT(*) AS TotalSchools, City, COUNT(*) AS SchoolsCount\nFROM schools \nWHERE Magnet = 1 \n  AND (LowGrade = 'K' AND HighGrade = '8') \n  AND `NSLP Provision Status` = 'Multiple Provision Types'\nGROUP BY City;\t----- bird -----\tcalifornia_schools",
    "466": "SELECT f.`Percent (%) Eligible Free (K-12)`, f.`District Code` \nFROM frpm AS f \nJOIN schools AS s ON f.CDSCode = s.CDSCode \nWHERE s.AdmFName1 = 'Alusine';\t----- bird -----\tcalifornia_schools",
    "467": "SELECT AdmEmail1, AdmEmail2, AdmEmail3 \nFROM schools \nWHERE County = 'San Bernardino' \nAND District = 'San Bernardino City Unified' \nAND OpenDate BETWEEN '2009-01-01' AND '2010-12-31' \nAND (SOC = '62' OR DOC = '54');\t----- bird -----\tcalifornia_schools",
    "468": "SELECT COUNT(DISTINCT A.account_id) \nFROM account AS A \nJOIN disp AS D ON A.account_id = D.account_id \nJOIN district AS DS ON A.district_id = DS.district_id \nWHERE D.type = 'POPLATEK PO OBRATU' AND DS.A3 = 'East Bohemia';\t----- bird -----\tfinancial",
    "469": "SELECT COUNT(*) \nFROM district \nWHERE A11 > 6000 AND A11 < 10000 AND district_id IN (SELECT district_id FROM client WHERE gender = 'F');\t----- bird -----\tfinancial",
    "470": "SELECT COUNT(DISTINCT C.client_id) \nFROM client AS C \nJOIN district AS D ON C.district_id = D.district_id \nWHERE C.gender = 'M' AND D.A3 = 'North Bohemia' AND D.A11 > 8000;\t----- bird -----\tfinancial",
    "471": "SELECT \n    C.client_id, \n    (SELECT MAX(D.A11) FROM district AS D \n     JOIN client AS C2 ON D.district_id = C2.district_id \n     WHERE C2.gender = 'F') - \n    (SELECT MIN(D.A11) FROM district AS D \n     JOIN client AS C2 ON D.district_id = C2.district_id \n     WHERE C2.gender = 'F') AS salary_gap\nFROM client AS C \nJOIN district AS D ON C.district_id = D.district_id \nWHERE C.gender = 'F' \nORDER BY C.birth_date ASC \nLIMIT 1;\t----- bird -----\tfinancial",
    "472": "SELECT T1.account_id \nFROM account AS T1 \nJOIN disp AS T2 ON T1.account_id = T2.account_id \nJOIN client AS T3 ON T2.client_id = T3.client_id \nJOIN district AS T4 ON T3.district_id = T4.district_id \nWHERE T3.birth_date = (SELECT MIN(T5.birth_date) FROM client AS T5) \nAND T4.A11 = (SELECT MAX(T6.A11) FROM district AS T6);\t----- bird -----\tfinancial",
    "473": "SELECT account_id \nFROM loan \nWHERE date BETWEEN '1997-01-01' AND '1997-12-31' \nORDER BY amount ASC \nLIMIT 1;\t----- bird -----\tfinancial",
    "474": "SELECT T1.account_id \nFROM loan AS T1 \nJOIN account AS T2 ON T1.account_id = T2.account_id \nWHERE T1.duration > 12 AND STRFTIME('%Y', T2.date) = '1993' \nORDER BY T1.amount DESC \nLIMIT 1;\t----- bird -----\tfinancial",
    "475": "SELECT COUNT(DISTINCT C.client_id) \nFROM client AS C \nJOIN district AS D ON C.district_id = D.district_id \nWHERE C.gender = 'F' AND C.birth_date < '1950-01-01' AND D.A2 = 'Sokolov';\t----- bird -----\tfinancial",
    "476": "SELECT D.A2 \nFROM account AS A \nJOIN client AS C ON A.account_id = C.client_id \nJOIN district AS D ON C.district_id = D.district_id \nWHERE C.gender = 'F' AND C.birth_date = '1976-01-29';\t----- bird -----\tfinancial",
    "477": "SELECT (COUNT(CASE WHEN C.gender = 'M' THEN 1 END) * 100.0 / COUNT(C.client_id)) AS male_percentage \nFROM client AS C \nJOIN district AS D ON C.district_id = D.district_id \nWHERE D.A3 = 'south Bohemia' \nAND D.A4 = (SELECT MAX(A4) FROM district WHERE A3 = 'south Bohemia');\t----- bird -----\tfinancial",
    "478": "SELECT (T2.balance - T1.balance) * 100.0 / T1.balance AS increase_rate \nFROM trans AS T1 \nJOIN account AS A ON T1.account_id = A.account_id \nJOIN (SELECT account_id \n      FROM loan \n      WHERE date = '1993-07-05' \n      ORDER BY date \n      LIMIT 1) AS L ON A.account_id = L.account_id \nJOIN trans AS T2 ON L.account_id = T2.account_id \nWHERE T1.date = '1993-03-22' AND T2.date = '1998-12-27';\t----- bird -----\tfinancial",
    "479": "SELECT (SUM(CASE WHEN status = 'A' THEN amount ELSE 0 END) * 100.0 / SUM(amount)) AS percentage_fully_paid FROM loan;\t----- bird -----\tfinancial",
    "480": "SELECT CAST(SUM(IIF(T1.status = 'C', 1, 0)) AS FLOAT) * 100 / COUNT(T1.account_id) \nFROM loan AS T1 \nWHERE T1.amount < 100000;\t----- bird -----\tfinancial",
    "481": "SELECT D.A2, ((D.A13 - D.A12) / D.A12) * 100 AS unemployment_increment_rate\nFROM loan AS L\nINNER JOIN account AS A ON L.account_id = A.account_id\nINNER JOIN district AS D ON A.district_id = D.district_id\nWHERE L.status = 'D' AND L.duration > 0;\t----- bird -----\tfinancial",
    "482": "SELECT D.A2, COUNT(A.account_id) AS female_account_count \nFROM district AS D \nJOIN client AS C ON D.district_id = C.district_id \nJOIN account AS A ON C.client_id = A.account_id \nWHERE C.gender = 'F' \nGROUP BY D.A2 \nORDER BY female_account_count DESC \nLIMIT 9;\t----- bird -----\tfinancial",
    "483": "SELECT COUNT(*) \nFROM loan AS L \nINNER JOIN account AS A ON L.account_id = A.account_id \nWHERE L.date BETWEEN '1995-01-01' AND '1997-12-31' \nAND L.amount >= 250000 \nAND A.frequency = 'POPLATEK MESICNE';\t----- bird -----\tfinancial",
    "484": "SELECT COUNT(DISTINCT A.account_id) \nFROM account AS A \nJOIN loan AS L ON A.account_id = L.account_id \nWHERE L.status IN ('C', 'D') \nAND A.district_id = (SELECT district_id FROM district WHERE A5 = 'Branch location 1');\t----- bird -----\tfinancial",
    "485": "SELECT COUNT(C.client_id) \nFROM client AS C \nJOIN district AS D ON C.district_id = D.district_id \nWHERE C.gender = 'M' \nAND D.district_id = (SELECT district_id FROM district ORDER BY A15 DESC LIMIT 1, 1);\t----- bird -----\tfinancial",
    "486": "SELECT D.A2, SUM(T.amount) AS total_withdrawal \nFROM trans AS T \nINNER JOIN account AS A ON T.account_id = A.account_id \nINNER JOIN district AS D ON A.district_id = D.district_id \nWHERE T.type = 'VYDAJ' AND T.date LIKE '1996-01%' \nGROUP BY D.A2 \nORDER BY total_withdrawal DESC \nLIMIT 10;\t----- bird -----\tfinancial",
    "487": "SELECT COUNT(DISTINCT A.account_id) \nFROM account AS A \nJOIN loan AS L ON A.account_id = L.account_id \nJOIN district AS D ON A.district_id = D.district_id \nWHERE L.status IN ('C', 'D') \nAND D.A5 = 'Branch location 1';\t----- bird -----\tfinancial",
    "488": "SELECT COUNT(*) \nFROM client AS C \nWHERE C.gender = 'M' \nAND C.district_id = (SELECT district_id FROM district ORDER BY A15 DESC LIMIT 1 OFFSET 1);\t----- bird -----\tfinancial",
    "489": "SELECT DISTINCT A.account_id \nFROM account AS A \nJOIN trans AS T ON A.account_id = T.account_id \nWHERE T.type = 'VYBER KARTOU' AND T.amount < (SELECT AVG(amount) FROM trans WHERE type = 'VYBER KARTOU' AND date LIKE '1998-%') AND T.date LIKE '1998-%';\t----- bird -----\tfinancial",
    "490": "SELECT DISTINCT A.account_id \nFROM account AS A \nINNER JOIN district AS D ON A.district_id = D.district_id \nWHERE D.A11 > 8000 AND D.A11 <= 9000 AND A.frequency <> 'OWNER';\t----- bird -----\tfinancial",
    "491": "SELECT AVG(D.A15) AS avg_crimes \nFROM district AS D \nINNER JOIN account AS A ON D.district_id = A.district_id \nWHERE D.A15 > 4000 AND A.date >= '1997-01-01';\t----- bird -----\tfinancial",
    "492": "SELECT T.amount, T.date, T.type \nFROM trans AS T \nINNER JOIN disp AS D ON T.account_id = D.account_id \nWHERE T.operation = 'VYBER' AND D.client_id = 3356;\t----- bird -----\tfinancial",
    "493": "SELECT \n    (SELECT COUNT(DISTINCT C.client_id) \n     FROM client AS C \n     JOIN account AS A ON C.client_id = A.account_id \n     JOIN district AS D ON C.district_id = D.district_id \n     WHERE C.gender = 'F' AND D.A11 > 10000) * 100.0 / \n    (SELECT COUNT(DISTINCT C.client_id) \n     FROM client AS C \n     JOIN account AS A ON C.client_id = A.account_id \n     JOIN district AS D ON C.district_id = D.district_id \n     WHERE D.A11 > 10000) AS female_percentage;\t----- bird -----\tfinancial",
    "494": "SELECT \n    (SUM(CASE WHEN strftime('%Y', L.date) = '1997' THEN L.amount ELSE 0 END) - \n     SUM(CASE WHEN strftime('%Y', L.date) = '1996' THEN L.amount ELSE 0 END)) * 100.0 / \n    NULLIF(SUM(CASE WHEN strftime('%Y', L.date) = '1996' THEN L.amount ELSE 0 END), 0) AS growth_rate\nFROM loan AS L\nJOIN account AS A ON L.account_id = A.account_id\nJOIN client AS C ON A.district_id = C.district_id\nWHERE C.gender = 'M';\t----- bird -----\tfinancial",
    "495": "SELECT COUNT(*) AS statement_requests, SUM(CASE WHEN k_symbol = 'debited' THEN amount ELSE 0 END) AS total_debited FROM `order` WHERE account_id = 3;\t----- bird -----\tfinancial",
    "496": "SELECT CAST(SUM(CASE WHEN C.gender = 'M' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) \nFROM disp AS D \nJOIN client AS C ON D.client_id = C.client_id \nWHERE D.type = 'POPLATEK TYDNE';\t----- bird -----\tfinancial",
    "497": "SELECT T1.account_id \nFROM account AS T1 \nINNER JOIN disp AS T2 ON T1.account_id = T2.account_id \nINNER JOIN client AS T3 ON T2.client_id = T3.client_id \nINNER JOIN district AS T4 ON T3.district_id = T4.district_id \nWHERE T3.gender = 'F' \nAND T3.birth_date = (SELECT MAX(T5.birth_date) \n                     FROM client AS T5 \n                     WHERE T5.gender = 'F') \nAND T4.A11 = (SELECT MIN(T6.A11) \n              FROM district AS T6 \n              JOIN client AS T7 ON T6.district_id = T7.district_id \n              WHERE T7.gender = 'F')\nORDER BY T1.account_id;\t----- bird -----\tfinancial",
    "498": "SELECT AVG(L.amount) AS average_loan_amount \nFROM loan AS L \nINNER JOIN account AS A ON L.account_id = A.account_id \nWHERE L.status IN ('C', 'D') AND A.frequency = 'POPLATEK PO OBRATU';\t----- bird -----\tfinancial",
    "499": "SELECT C.client_id, CAST(strftime('%Y', 'now') - strftime('%Y', C.birth_date) AS INTEGER) AS age \nFROM client AS C \nJOIN disp AS D ON C.client_id = D.client_id \nJOIN card AS Card ON D.account_id = Card.disp_id \nWHERE Card.type = 'gold' AND D.type = 'OWNER';\t----- bird -----\tfinancial"
}